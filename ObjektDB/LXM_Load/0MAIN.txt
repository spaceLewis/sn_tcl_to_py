T >>-Linked-Fri-Jan-11-12:20:24-2013
D -12 PWM-Register
E EPWM1AQCSFRC 16bit_0x680E 5208 14
E EPWM1AQCTLA  16bit_0x680B 5208 11
E EPWM1AQCTLB  16bit_0x680C 5208 12
E EPWM1AQSFRC  16bit_0x680D 5208 13
E EPWM1CMPA    16bit_0x6809 5208 9
E EPWM1CMPAHR  16bit_0x6808 5208 8
E EPWM1CMPB    16bit_0x680A 5208 10
E EPWM1CMPCTL  16bit_0x6807 5208 7
E EPWM1DBCTL   16bit_0x680F 5208 15
E EPWM1DBFED   16bit_0x6811 5208 17
E EPWM1DBRED   16bit_0x6810 5208 16
E EPWM1ETCLR   16bit_0x681C 5208 28
E EPWM1ETFLG   16bit_0x681B 5208 27
E EPWM1ETFRC   16bit_0x681D 5208 29
E EPWM1ETPS    16bit_0x681A 5208 26
E EPWM1ETSEL   16bit_0x6819 5208 25
E EPWM1HRCNFG  16bit_0x6820 5208 32
E EPWM1PCCTL   16bit_0x681E 5208 30
E EPWM1TBCTL   16bit_0x6800 5208 0
E EPWM1TBCTR   16bit_0x6804 5208 4
E EPWM1TBPHS   16bit_0x6803 5208 3
E EPWM1TBPHSHR 16bit_0x6802 5208 2
E EPWM1TBPRD   16bit_0x6805 5208 5
E EPWM1TBSTS   16bit_0x6801 5208 1
E EPWM1TZCLR   16bit_0x6817 5208 23
E EPWM1TZCTL   16bit_0x6814 5208 20
E EPWM1TZEINT  16bit_0x6815 5208 21
E EPWM1TZFLG   16bit_0x6816 5208 22
E EPWM1TZFRC   16bit_0x6818 5208 24
E EPWM1TZSEL   16bit_0x6812 5208 18
E EPWM2AQCSFRC 16bit_0x684E 5208 78
E EPWM2AQCTLA  16bit_0x684B 5208 75
E EPWM2AQCTLB  16bit_0x684C 5208 76
E EPWM2AQSFRC  16bit_0x684D 5208 77
E EPWM2CMPA    16bit_0x6849 5208 73
E EPWM2CMPAHR  16bit_0x6848 5208 72
E EPWM2CMPB    16bit_0x684A 5208 74
E EPWM2CMPCTL  16bit_0x6847 5208 71
E EPWM2DBCTL   16bit_0x684F 5208 79
E EPWM2DBFED   16bit_0x6851 5208 81
E EPWM2DBRED   16bit_0x6850 5208 80
E EPWM2ETCLR   16bit_0x685C 5208 92
E EPWM2ETFLG   16bit_0x685B 5208 91
E EPWM2ETFRC   16bit_0x685D 5208 93
E EPWM2ETPS    16bit_0x685A 5208 90
E EPWM2ETSEL   16bit_0x6859 5208 89
E EPWM2HRCNFG  16bit_0x6860 5208 96
E EPWM2PCCTL   16bit_0x685E 5208 94
E EPWM2TBCTL   16bit_0x6840 5208 64
E EPWM2TBCTR   16bit_0x6844 5208 68
E EPWM2TBPHS   16bit_0x6843 5208 67
E EPWM2TBPHSHR 16bit_0x6842 5208 66
E EPWM2TBPRD   16bit_0x6845 5208 69
E EPWM2TBSTS   16bit_0x6841 5208 65
E EPWM2TZCLR   16bit_0x6857 5208 87
E EPWM2TZCTL   16bit_0x6854 5208 84
E EPWM2TZEINT  16bit_0x6855 5208 85
E EPWM2TZFLG   16bit_0x6856 5208 86
E EPWM2TZFRC   16bit_0x6858 5208 88
E EPWM2TZSEL   16bit_0x6852 5208 82
E EPWM3AQCSFRC 16bit_0x688E 5209 14
E EPWM3AQCTLA  16bit_0x688B 5209 11
E EPWM3AQCTLB  16bit_0x688C 5209 12
E EPWM3AQSFRC  16bit_0x688D 5209 13
E EPWM3CMPA    16bit_0x6889 5209 9
E EPWM3CMPAHR  16bit_0x6888 5209 8
E EPWM3CMPB    16bit_0x688A 5209 10
E EPWM3CMPCTL  16bit_0x6887 5209 7
E EPWM3DBCTL   16bit_0x688F 5209 15
E EPWM3DBFED   16bit_0x6891 5209 17
E EPWM3DBRED   16bit_0x6890 5209 16
E EPWM3ETCLR   16bit_0x689C 5209 28
E EPWM3ETFLG   16bit_0x689B 5209 27
E EPWM3ETFRC   16bit_0x689D 5209 29
E EPWM3ETPS    16bit_0x689A 5209 26
E EPWM3ETSEL   16bit_0x6899 5209 25
E EPWM3HRCNFG  16bit_0x68A0 5209 32
E EPWM3PCCTL   16bit_0x689E 5209 30
E EPWM3TBCTL   16bit_0x6880 5209 0
E EPWM3TBCTR   16bit_0x6884 5209 4
E EPWM3TBPHS   16bit_0x6883 5209 3
E EPWM3TBPHSHR 16bit_0x6882 5209 2
E EPWM3TBPRD   16bit_0x6885 5209 5
E EPWM3TBSTS   16bit_0x6881 5209 1
E EPWM3TZCLR   16bit_0x6897 5209 23
E EPWM3TZCTL   16bit_0x6894 5209 20
E EPWM3TZEINT  16bit_0x6895 5209 21
E EPWM3TZFLG   16bit_0x6896 5209 22
E EPWM3TZFRC   16bit_0x6898 5209 24
E EPWM3TZSEL   16bit_0x6892 5209 18
E EPWM4AQCSFRC 16bit_0x68CE 5209 78
E EPWM4AQCTLA  16bit_0x68CB 5209 75
E EPWM4AQCTLB  16bit_0x68CC 5209 76
E EPWM4AQSFRC  16bit_0x68CD 5209 77
E EPWM4CMPA    16bit_0x68C9 5209 73
E EPWM4CMPAHR  16bit_0x68C8 5209 72
E EPWM4CMPB    16bit_0x68CA 5209 74
E EPWM4CMPCTL  16bit_0x68C7 5209 71
E EPWM4DBCTL   16bit_0x68CF 5209 79
E EPWM4DBFED   16bit_0x68D1 5209 81
E EPWM4DBRED   16bit_0x68D0 5209 80
E EPWM4ETCLR   16bit_0x68DC 5209 92
E EPWM4ETFLG   16bit_0x68DB 5209 91
E EPWM4ETFRC   16bit_0x68DD 5209 93
E EPWM4ETPS    16bit_0x68DA 5209 90
E EPWM4ETSEL   16bit_0x68D9 5209 89
E EPWM4HRCNFG  16bit_0x68E0 5209 96
E EPWM4PCCTL   16bit_0x68DE 5209 94
E EPWM4TBCTL   16bit_0x68C0 5209 64
E EPWM4TBCTR   16bit_0x68C4 5209 68
E EPWM4TBPHS   16bit_0x68C3 5209 67
E EPWM4TBPHSHR 16bit_0x68C2 5209 66
E EPWM4TBPRD   16bit_0x68C5 5209 69
E EPWM4TBSTS   16bit_0x68C1 5209 65
E EPWM4TZCLR   16bit_0x68D7 5209 87
E EPWM4TZCTL   16bit_0x68D4 5209 84
E EPWM4TZEINT  16bit_0x68D5 5209 85
E EPWM4TZFLG   16bit_0x68D6 5209 86
E EPWM4TZFRC   16bit_0x68D8 5209 88
E EPWM4TZSEL   16bit_0x68D2 5209 82
E EPWM5AQCSFRC 16bit_0x690E 5210 14
E EPWM5AQCTLA  16bit_0x690B 5210 11
E EPWM5AQCTLB  16bit_0x690C 5210 12
E EPWM5AQSFRC  16bit_0x690D 5210 13
E EPWM5CMPA    16bit_0x6909 5210 9
E EPWM5CMPAHR  16bit_0x6908 5210 8
E EPWM5CMPB    16bit_0x690A 5210 10
E EPWM5CMPCTL  16bit_0x6907 5210 7
E EPWM5DBCTL   16bit_0x690F 5210 15
E EPWM5DBFED   16bit_0x6911 5210 17
E EPWM5DBRED   16bit_0x6910 5210 16
E EPWM5ETCLR   16bit_0x691C 5210 28
E EPWM5ETFLG   16bit_0x691B 5210 27
E EPWM5ETFRC   16bit_0x691D 5210 29
E EPWM5ETPS    16bit_0x691A 5210 26
E EPWM5ETSEL   16bit_0x6919 5210 25
E EPWM5HRCNFG  16bit_0x6920 5210 32
E EPWM5PCCTL   16bit_0x691E 5210 30
E EPWM5TBCTL   16bit_0x6900 5210 0
E EPWM5TBCTR   16bit_0x6904 5210 4
E EPWM5TBPHS   16bit_0x6903 5210 3
E EPWM5TBPHSHR 16bit_0x6902 5210 2
E EPWM5TBPRD   16bit_0x6905 5210 5
E EPWM5TBSTS   16bit_0x6901 5210 1
E EPWM5TZCLR   16bit_0x6917 5210 23
E EPWM5TZCTL   16bit_0x6914 5210 20
E EPWM5TZEINT  16bit_0x6915 5210 21
E EPWM5TZFLG   16bit_0x6916 5210 22
E EPWM5TZFRC   16bit_0x6918 5210 24
E EPWM5TZSEL   16bit_0x6912 5210 18
E EPWM6AQCSFRC 16bit_0x694E 5210 78
E EPWM6AQCTLA  16bit_0x694B 5210 75
E EPWM6AQCTLB  16bit_0x694C 5210 76
E EPWM6AQSFRC  16bit_0x694D 5210 77
E EPWM6CMPA    16bit_0x6949 5210 73
E EPWM6CMPAHR  16bit_0x6948 5210 72
E EPWM6CMPB    16bit_0x694A 5210 74
E EPWM6CMPCTL  16bit_0x6947 5210 71
E EPWM6DBCTL   16bit_0x694F 5210 79
E EPWM6DBFED   16bit_0x6951 5210 81
E EPWM6DBRED   16bit_0x6950 5210 80
E EPWM6ETCLR   16bit_0x695C 5210 92
E EPWM6ETFLG   16bit_0x695B 5210 91
E EPWM6ETFRC   16bit_0x695D 5210 93
E EPWM6ETPS    16bit_0x695A 5210 90
E EPWM6ETSEL   16bit_0x6959 5210 89
E EPWM6HRCNFG  16bit_0x6960 5210 96
E EPWM6PCCTL   16bit_0x695E 5210 94
E EPWM6TBCTL   16bit_0x6940 5210 64
E EPWM6TBCTR   16bit_0x6944 5210 68
E EPWM6TBPHS   16bit_0x6943 5210 67
E EPWM6TBPHSHR 16bit_0x6942 5210 66
E EPWM6TBPRD   16bit_0x6945 5210 69
E EPWM6TBSTS   16bit_0x6941 5210 65
E EPWM6TZCLR   16bit_0x6957 5210 87
E EPWM6TZCTL   16bit_0x6954 5210 84
E EPWM6TZEINT  16bit_0x6955 5210 85
E EPWM6TZFLG   16bit_0x6956 5210 86
E EPWM6TZFRC   16bit_0x6958 5210 88
E EPWM6TZSEL   16bit_0x6952 5210 82
D -11 ECAP-Register
E ECAP1CAP1    32bit_0x6A04 6212 4
E ECAP1CAP2    32bit_0x6A06 6212 6
E ECAP1CAP3    32bit_0x6A08 6212 8
E ECAP1CAP4    32bit_0x6A0A 6212 10
E ECAP1CTRPHS  32bit_0x6A02 6212 2
E ECAP1ECCLR   16bit_0x6A18 5212 24
E ECAP1ECCTL1  16bit_0x6A14 5212 20
E ECAP1ECCTL2  16bit_0x6A15 5212 21
E ECAP1ECEINT  16bit_0x6A16 5212 22
E ECAP1ECFCR   16bit_0x6A19 5212 25
E ECAP1ECFLG   16bit_0x6A17 5212 23
E ECAP1TSCTR   32bit_0x6A00 6212 0
E ECAP2CAP1    32bit_0x6A24 6212 36
E ECAP2CAP2    32bit_0x6A26 6212 38
E ECAP2CAP3    32bit_0x6A28 6212 40
E ECAP2CAP4    32bit_0x6A2A 6212 42
E ECAP2CTRPHS  32bit_0x6A22 6212 34
E ECAP2ECCLR   16bit_0x6A38 5212 56
E ECAP2ECCTL1  16bit_0x6A34 5212 52
E ECAP2ECCTL2  16bit_0x6A35 5212 53
E ECAP2ECEINT  16bit_0x6A36 5212 54
E ECAP2ECFCR   16bit_0x6A39 5212 57
E ECAP2ECFLG   16bit_0x6A37 5212 55
E ECAP2TSCTR   32bit_0x6A20 6212 32
E ECAP3CAP1    32bit_0x6A44 6212 68
E ECAP3CAP2    32bit_0x6A46 6212 70
E ECAP3CAP3    32bit_0x6A48 6212 72
E ECAP3CAP4    32bit_0x6A4A 6212 74
E ECAP3CTRPHS  32bit_0x6A42 6212 66
E ECAP3ECCLR   16bit_0x6A58 5212 88
E ECAP3ECCTL1  16bit_0x6A54 5212 84
E ECAP3ECCTL2  16bit_0x6A55 5212 85
E ECAP3ECEINT  16bit_0x6A56 5212 86
E ECAP3ECFCR   16bit_0x6A59 5212 89
E ECAP3ECFLG   16bit_0x6A57 5212 87
E ECAP3TSCTR   32bit_0x6A40 6212 64
E ECAP4CAP1    32bit_0x6A64 6212 100
E ECAP4CAP2    32bit_0x6A66 6212 102
E ECAP4CAP3    32bit_0x6A68 6212 104
E ECAP4CAP4    32bit_0x6A6A 6212 106
E ECAP4CTRPHS  32bit_0x6A62 6212 98
E ECAP4ECCLR   16bit_0x6A78 5212 120
E ECAP4ECCTL1  16bit_0x6A74 5212 116
E ECAP4ECCTL2  16bit_0x6A75 5212 117
E ECAP4ECEINT  16bit_0x6A76 5212 118
E ECAP4ECFCR   16bit_0x6A79 5212 121
E ECAP4ECFLG   16bit_0x6A77 5212 119
E ECAP4TSCTR   32bit_0x6A60 6212 96
E ECAP5CAP1    32bit_0x6A84 6213 4
E ECAP5CAP2    32bit_0x6A86 6213 6
E ECAP5CAP3    32bit_0x6A88 6213 8
E ECAP5CAP4    32bit_0x6A8A 6213 10
E ECAP5CTRPHS  32bit_0x6A82 6213 2
E ECAP5ECCLR   16bit_0x6A98 5213 24
E ECAP5ECCTL1  16bit_0x6A94 5213 20
E ECAP5ECCTL2  16bit_0x6A95 5213 21
E ECAP5ECEINT  16bit_0x6A96 5213 22
E ECAP5ECFCR   16bit_0x6A99 5213 25
E ECAP5ECFLG   16bit_0x6A97 5213 23
E ECAP5TSCTR   32bit_0x6A80 6213 0
E ECAP6CAP1    32bit_0x6AA4 6213 36
E ECAP6CAP2    32bit_0x6AA6 6213 38
E ECAP6CAP3    32bit_0x6AA8 6213 40
E ECAP6CAP4    32bit_0x6AAA 6213 42
E ECAP6CTRPHS  32bit_0x6AA2 6213 34
E ECAP6ECCLR   16bit_0x6AB8 5213 56
E ECAP6ECCTL1  16bit_0x6AB4 5213 52
E ECAP6ECCTL2  16bit_0x6AB5 5213 53
E ECAP6ECEINT  16bit_0x6AB6 5213 54
E ECAP6ECFCR   16bit_0x6AB9 5213 57
E ECAP6ECFLG   16bit_0x6AB7 5213 55
E ECAP6TSCTR   32bit_0x6AA0 6213 32
D -10 SYS-Register
E HISPCP       16bit_0x701A 5224 26
E LOSPCP       16bit_0x701B 5224 27
E LPMCR0       16bit_0x701E 5224 30
E PCLKCR0      16bit_0x701C 5224 28
E PCLKCR1      16bit_0x701D 5224 29
E PCLKCR3      16bit_0x7020 5224 32
E PLLCR        16bit_0x7021 5224 33
E PLLSTS       16bit_0x7011 5224 17
E SCSR         16bit_0x7022 5224 34
E TIMER0PRD    32bit_0x0C02 6024 2
E TIMER0TCR    16bit_0x0C04 5024 4
E TIMER0TIM    32bit_0x0C00 6024 0
E TIMER0TPR    32bit_0x0C06 6024 6
E TIMER1PRD    32bit_0x0C0A 6024 10
E TIMER1TCR    16bit_0x0C0C 5024 12
E TIMER1TIM    32bit_0x0C08 6024 8
E TIMER1TPR    32bit_0x0C0E 6024 14
E TIMER2PRD    32bit_0x0C12 6024 18
E TIMER2TCR    16bit_0x0C14 5024 20
E TIMER2TIM    32bit_0x0C10 6024 16
E TIMER2TPR    32bit_0x0C16 6024 22
E WDCNTR       16bit_0x7023 5224 35
E WDCR         16bit_0x7029 5224 41
E WDKEY        16bit_0x7025 5224 37
D -9 GPIO-Register
E GPACLEAR     32bit_0x6FC4 6223 68
E GPACTRL      32bit_0x6F80 6223 0
E GPADAT       32bit_0x6FC0 6223 64
E GPADIR       32bit_0x6F8A 6223 10
E GPAMUX1      32bit_0x6F86 6223 6
E GPAMUX2      32bit_0x6F88 6223 8
E GPAPUD       32bit_0x6F8C 6223 12
E GPAQSEL1     32bit_0x6F82 6223 2
E GPAQSEL2     32bit_0x6F84 6223 4
E GPASET       32bit_0x6FC2 6223 66
E GPATOGGLE    32bit_0x6FC6 6223 70
E GPBCLEAR     32bit_0x6FCC 6223 76
E GPBCTRL      32bit_0x6F90 6223 16
E GPBDAT       32bit_0x6FC8 6223 72
E GPBDIR       32bit_0x6F9A 6223 26
E GPBMUX1      32bit_0x6F96 6223 22
E GPBMUX2      32bit_0x6F98 6223 24
E GPBPUD       32bit_0x6F9C 6223 28
E GPBQSEL1     32bit_0x6F92 6223 18
E GPBQSEL2     32bit_0x6F94 6223 20
E GPBSET       32bit_0x6FCA 6223 74
E GPBTOGGLE    32bit_0x6FCE 6223 78
E GPCCLEAR     32bit_0x6FD4 6223 84
E GPCDAT       32bit_0x6FD0 6223 80
E GPCDIR       32bit_0x6FAA 6223 42
E GPCMUX1      32bit_0x6FA6 6223 38
E GPCMUX2      32bit_0x6FA8 6223 40
E GPCPUD       32bit_0x6FAC 6223 44
E GPCSET       32bit_0x6FD2 6223 82
E GPCTOGGLE    32bit_0x6FD6 6223 86
E GPIOLPMSEL   16bit_0x6FE8 5223 104
E GPIOXINT1SEL 16bit_0x6FE0 5223 96
E GPIOXINT2SEL 16bit_0x6FE1 5223 97
E GPIOXINT3SEL 16bit_0x6FE3 5223 99
E GPIOXINT4SEL 16bit_0x6FE4 5223 100
E GPIOXINT5SEL 16bit_0x6FE5 5223 101
E GPIOXINT6SEL 16bit_0x6FE6 5223 102
E GPIOXINT7SEL 16bit_0x6FE7 5223 103
E GPIOXNMISEL  16bit_0x6FE2 5223 98
D -8 SCI-Register
E SCICCRA      16bit_0x7050 5224 80
E SCICCRB      16bit_0x7750 5238 80
E SCICCRC      16bit_0x7770 5238 112
E SCICTL1A     16bit_0x7051 5224 81
E SCICTL1B     16bit_0x7751 5238 81
E SCICTL1C     16bit_0x7771 5238 113
E SCICTL2A     16bit_0x7054 5224 84
E SCICTL2B     16bit_0x7754 5238 84
E SCICTL2C     16bit_0x7774 5238 116
E SCIFFCTA     16bit_0x705C 5224 92
E SCIFFCTB     16bit_0x775C 5238 92
E SCIFFCTC     16bit_0x777C 5238 124
E SCIFFRXA     16bit_0x705B 5224 91
E SCIFFRXB     16bit_0x775B 5238 91
E SCIFFRXC     16bit_0x777B 5238 123
E SCIFFTXA     16bit_0x705A 5224 90
E SCIFFTXB     16bit_0x775A 5238 90
E SCIFFTXC     16bit_0x777A 5238 122
E SCIHBAUDA    16bit_0x7052 5224 82
E SCIHBAUDB    16bit_0x7752 5238 82
E SCIHBAUDC    16bit_0x7772 5238 114
E SCILBAUDA    16bit_0x7053 5224 83
E SCILBAUDB    16bit_0x7753 5238 83
E SCILBAUDC    16bit_0x7773 5238 115
E SCIPRIA      16bit_0x705F 5224 95
E SCIPRIB      16bit_0x775F 5238 95
E SCIPRIC      16bit_0x777F 5238 127
E SCIRXBUFA    16bit_0x7057 5224 87
E SCIRXBUFB    16bit_0x7757 5238 87
E SCIRXBUFC    16bit_0x7777 5238 119
E SCIRXEMUA    16bit_0x7056 5224 86
E SCIRXEMUB    16bit_0x7756 5238 86
E SCIRXEMUC    16bit_0x7776 5238 118
E SCIRXSTA     16bit_0x7055 5224 85
E SCIRXSTB     16bit_0x7755 5238 85
E SCIRXSTC     16bit_0x7775 5238 117
E SCITXBUFA    16bit_0x7059 5224 89
E SCITXBUFB    16bit_0x7759 5238 89
E SCITXBUFC    16bit_0x7779 5238 121
D -7 SPI-Register
E SPIBRR       16bit_0x7044 5224 68
E SPICCR       16bit_0x7040 5224 64
E SPICTL       16bit_0x7041 5224 65
E SPIDAT       16bit_0x7049 5224 73
E SPIFFCT      16bit_0x704C 5224 76
E SPIFFRX      16bit_0x704B 5224 75
E SPIFFTX      16bit_0x704A 5224 74
E SPIPRI       16bit_0x704F 5224 79
E SPIRXBUF     16bit_0x7047 5224 71
E SPIRXEMU     16bit_0x7046 5224 70
E SPISTS       16bit_0x7042 5224 66
E SPITXBUF     16bit_0x7048 5224 72
D -6 CAN-Register
E CANAAA       32bit_0x600A 6192 10
E CANAAB       32bit_0x620A 6196 10
E CANBTCA      32bit_0x6016 6192 22
E CANBTCB      32bit_0x6216 6196 22
E CANESA       32bit_0x6018 6192 24
E CANESB       32bit_0x6218 6196 24
E CANGAMA      32bit_0x6012 6192 18
E CANGAMB      32bit_0x6212 6196 18
E CANGIF0A     32bit_0x601E 6192 30
E CANGIF0B     32bit_0x621E 6196 30
E CANGIF1A     32bit_0x6022 6192 34
E CANGIF1B     32bit_0x6222 6196 34
E CANGIMA      32bit_0x6020 6192 32
E CANGIMB      32bit_0x6220 6196 32
E CANMCA       32bit_0x6014 6192 20
E CANMCB       32bit_0x6214 6196 20
E CANMDA       32bit_0x6002 6192 2
E CANMDB       32bit_0x6202 6196 2
E CANMEA       32bit_0x6000 6192 0
E CANMEB       32bit_0x6200 6196 0
E CANMILA      32bit_0x6026 6192 38
E CANMILB      32bit_0x6226 6196 38
E CANMIMA      32bit_0x6024 6192 36
E CANMIMB      32bit_0x6224 6196 36
E CANOPCA      32bit_0x6028 6192 40
E CANOPCB      32bit_0x6228 6196 40
E CANRECA      32bit_0x601C 6192 28
E CANRECB      32bit_0x621C 6196 28
E CANRFPA      32bit_0x6010 6192 16
E CANRFPB      32bit_0x6210 6196 16
E CANRIOCA     32bit_0x602C 6192 44
E CANRIOCB     32bit_0x622C 6196 44
E CANRMLA      32bit_0x600E 6192 14
E CANRMLB      32bit_0x620E 6196 14
E CANRMPA      32bit_0x600C 6192 12
E CANRMPB      32bit_0x620C 6196 12
E CANTAA       32bit_0x6008 6192 8
E CANTAB       32bit_0x6208 6196 8
E CANTECA      32bit_0x601A 6192 26
E CANTECB      32bit_0x621A 6196 26
E CANTIOCA     32bit_0x602A 6192 42
E CANTIOCB     32bit_0x622A 6196 42
E CANTOCA      32bit_0x6030 6192 48
E CANTOCB      32bit_0x6230 6196 48
E CANTOSA      32bit_0x6032 6192 50
E CANTOSB      32bit_0x6232 6196 50
E CANTRRA      32bit_0x6006 6192 6
E CANTRRB      32bit_0x6206 6196 6
E CANTRSA      32bit_0x6004 6192 4
E CANTRSB      32bit_0x6204 6196 4
E CANTSCA      32bit_0x602E 6192 46
E CANTSCB      32bit_0x622E 6196 46
D -5 ADC-Register
E ADCASEQSR    16bit_0x7107 5226 7
E ADCCHSELSEQ1 16bit_0x7103 5226 3
E ADCCHSELSEQ2 16bit_0x7104 5226 4
E ADCCHSELSEQ3 16bit_0x7105 5226 5
E ADCCHSELSEQ4 16bit_0x7106 5226 6
E ADCMAXCONV   16bit_0x7102 5226 2
E ADCOFFTRIM   16bit_0x711D 5226 29
E ADCREFSEL    16bit_0x711C 5226 28
E ADCRESULT0   16bit_0x7108 5226 8
E ADCRESULT1   16bit_0x7109 5226 9
E ADCRESULT10  16bit_0x7112 5226 18
E ADCRESULT11  16bit_0x7113 5226 19
E ADCRESULT12  16bit_0x7114 5226 20
E ADCRESULT13  16bit_0x7115 5226 21
E ADCRESULT14  16bit_0x7116 5226 22
E ADCRESULT15  16bit_0x7117 5226 23
E ADCRESULT2   16bit_0x710A 5226 10
E ADCRESULT3   16bit_0x710B 5226 11
E ADCRESULT4   16bit_0x710C 5226 12
E ADCRESULT5   16bit_0x710D 5226 13
E ADCRESULT6   16bit_0x710E 5226 14
E ADCRESULT7   16bit_0x710F 5226 15
E ADCRESULT8   16bit_0x7110 5226 16
E ADCRESULT9   16bit_0x7111 5226 17
E ADCST        16bit_0x7119 5226 25
E ADCTRL1      16bit_0x7100 5226 0
E ADCTRL2      16bit_0x7101 5226 1
E ADCTRL3      16bit_0x7118 5226 24
D -4 I2C-Register
E I2CCLKH      16bit_0x7904 5242 4
E I2CCLKL      16bit_0x7903 5242 3
E I2CCNT       16bit_0x7905 5242 5
E I2CDRR       16bit_0x7906 5242 6
E I2CDXR       16bit_0x7908 5242 8
E I2CFFRX      16bit_0x7921 5242 33
E I2CFFTX      16bit_0x7920 5242 32
E I2CIER       16bit_0x7901 5242 1
E I2CISRC      16bit_0x790A 5242 10
E I2CMDR       16bit_0x7909 5242 9
E I2COAR       16bit_0x7900 5242 0
E I2CPSC       16bit_0x790C 5242 12
E I2CSAR       16bit_0x7907 5242 7
E I2CSTR       16bit_0x7902 5242 2
D -3 QEP-Register
E QCAPCTL1     16bit_0x6B16 5214 22
E QCAPCTL2     16bit_0x6B56 5214 86
E QCLR1        16bit_0x6B1A 5214 26
E QCLR2        16bit_0x6B5A 5214 90
E QCPRD1       16bit_0x6B1E 5214 30
E QCPRD2       16bit_0x6B5E 5214 94
E QCPRDLAT1    16bit_0x6B20 5214 32
E QCPRDLAT2    16bit_0x6B60 5214 96
E QCTMR1       16bit_0x6B1D 5214 29
E QCTMR2       16bit_0x6B5D 5214 93
E QCTMRLAT1    16bit_0x6B1F 5214 31
E QCTMRLAT2    16bit_0x6B5F 5214 95
E QDECCTL1     16bit_0x6B14 5214 20
E QDECCTL2     16bit_0x6B54 5214 84
E QEINT1       16bit_0x6B18 5214 24
E QEINT2       16bit_0x6B58 5214 88
E QEPCTL1      16bit_0x6B15 5214 21
E QEPCTL2      16bit_0x6B55 5214 85
E QEPSTS1      16bit_0x6B1C 5214 28
E QEPSTS2      16bit_0x6B5C 5214 92
E QFLG1        16bit_0x6B19 5214 25
E QFLG2        16bit_0x6B59 5214 89
E QFRC1        16bit_0x6B1B 5214 27
E QFRC2        16bit_0x6B5B 5214 91
E QPOSCMP1     32bit_0x6B06 6214 6
E QPOSCMP2     32bit_0x6B46 6214 70
E QPOSCNT1     32bit_0x6B00 6214 0
E QPOSCNT2     32bit_0x6B40 6214 64
E QPOSCTL1     16bit_0x6B17 5214 23
E QPOSCTL2     16bit_0x6B57 5214 87
E QPOSILAT1    32bit_0x6B08 6214 8
E QPOSILAT2    32bit_0x6B48 6214 72
E QPOSINIT1    32bit_0x6B02 6214 2
E QPOSINIT2    32bit_0x6B42 6214 66
E QPOSLAT1     32bit_0x6B0C 6214 12
E QPOSLAT2     32bit_0x6B4C 6214 76
E QPOSMAX1     32bit_0x6B04 6214 4
E QPOSMAX2     32bit_0x6B44 6214 68
E QPOSSLAT1    32bit_0x6B0A 6214 10
E QPOSSLAT2    32bit_0x6B4A 6214 74
E QUPRD1       32bit_0x6B10 6214 16
E QUPRD2       32bit_0x6B50 6214 80
E QUTMR1       32bit_0x6B0E 6214 14
E QUTMR2       32bit_0x6B4E 6214 78
E QWDPRD1      16bit_0x6B13 5214 19
E QWDPRD2      16bit_0x6B53 5214 83
E QWDTMR1      16bit_0x6B12 5214 18
E QWDTMR2      16bit_0x6B52 5214 82
D -2 McBSP-Register
E DRR1A        16bit_0x5001 5160 1
E DRR1B        16bit_0x5041 5160 65
E DRR2A        16bit_0x5000 5160 0
E DRR2B        16bit_0x5040 5160 64
E DXR1A        16bit_0x5003 5160 3
E DXR1B        16bit_0x5043 5160 67
E DXR2A        16bit_0x5002 5160 2
E DXR2B        16bit_0x5042 5160 66
E MCR1A        16bit_0x500D 5160 13
E MCR1B        16bit_0x504D 5160 77
E MCR2A        16bit_0x500C 5160 12
E MCR2B        16bit_0x504C 5160 76
E MFFINTA      16bit_0x5023 5160 35
E MFFINTB      16bit_0x5063 5160 99
E MFFSTA       16bit_0x5024 5160 36
E MFFSTB       16bit_0x5064 5160 100
E PCRA         16bit_0x5012 5160 18
E PCRB         16bit_0x5052 5160 82
E RCERAA       16bit_0x500E 5160 14
E RCERAB       16bit_0x504E 5160 78
E RCERBA       16bit_0x500F 5160 15
E RCERBB       16bit_0x504F 5160 79
E RCERCA       16bit_0x5013 5160 19
E RCERCB       16bit_0x5053 5160 83
E RCERDA       16bit_0x5014 5160 20
E RCERDB       16bit_0x5054 5160 84
E RCEREA       16bit_0x5017 5160 23
E RCEREB       16bit_0x5057 5160 87
E RCERFA       16bit_0x5018 5160 24
E RCERFB       16bit_0x5058 5160 88
E RCERGA       16bit_0x501B 5160 27
E RCERGB       16bit_0x505B 5160 91
E RCERHA       16bit_0x501C 5160 28
E RCERHB       16bit_0x505C 5160 92
E RCR1A        16bit_0x5007 5160 7
E RCR1B        16bit_0x5047 5160 71
E RCR2A        16bit_0x5006 5160 6
E RCR2B        16bit_0x5046 5160 70
E SPCR1A       16bit_0x5005 5160 5
E SPCR1B       16bit_0x5045 5160 69
E SPCR2A       16bit_0x5004 5160 4
E SPCR2B       16bit_0x5044 5160 68
E SRGR1A       16bit_0x500B 5160 11
E SRGR1B       16bit_0x504B 5160 75
E SRGR2A       16bit_0x500A 5160 10
E SRGR2B       16bit_0x504A 5160 74
E XCERAA       16bit_0x5010 5160 16
E XCERAB       16bit_0x5050 5160 80
E XCERBA       16bit_0x5011 5160 17
E XCERBB       16bit_0x5051 5160 81
E XCERCA       16bit_0x5015 5160 21
E XCERCB       16bit_0x5055 5160 85
E XCERDA       16bit_0x5016 5160 22
E XCERDB       16bit_0x5056 5160 86
E XCEREA       16bit_0x5019 5160 25
E XCEREB       16bit_0x5059 5160 89
E XCERFA       16bit_0x501A 5160 26
E XCERFB       16bit_0x505A 5160 90
E XCERGA       16bit_0x501D 5160 29
E XCERGB       16bit_0x505D 5160 93
E XCERHA       16bit_0x501E 5160 30
E XCERHB       16bit_0x505E 5160 94
E XCR1A        16bit_0x5009 5160 9
E XCR1B        16bit_0x5049 5160 73
E XCR2A        16bit_0x5008 5160 8
E XCR2B        16bit_0x5048 5160 72
D -1 Variablen
E _ActionInfo  16bit_0x0000be08 5380 8
E _ActionInfo  32bit_0x0000be08 6380 8
E _admParam    16bit_0x0000befc 5381 124
E _admParam    32bit_0x0000befc 6381 124
E _ATuningParam 16bit_0x0000c13a 5386 58
E _ATuningParam 32bit_0x0000c13a 6386 58
E _auiMotEncSerialNumber 16bit_0x0000c0ac 5385 44
E _auiMotEncSerialNumber 32bit_0x0000c0ac 6385 44
E _bAmpOff_OnEnd 16bit_0x0000c143 5386 67
E _bAmpOff_OnEnd 32bit_0x0000c143 6386 67
E _bCfgTransferLocked 16bit_0x0000c204 5388 4
E _bCfgTransferLocked 32bit_0x0000c204 6388 4
E _bCommandHmiAsked 16bit_0x0000c06b 5384 107
E _bCommandHmiAsked 32bit_0x0000c06b 6384 107
E _bCommandHmiDone 16bit_0x0000c06a 5384 106
E _bCommandHmiDone 32bit_0x0000c06a 6384 106
E _bDefaultParam 16bit_0x0000c030 5384 48
E _bDefaultParam 32bit_0x0000c030 6384 48
E _bEncoderModeFirstPowerUp 16bit_0x0000c144 5386 68
E _bEncoderModeFirstPowerUp 32bit_0x0000c144 6386 68
E _bHipDeactivateCyclicReading 16bit_0x0000c1a0 5387 32
E _bHipDeactivateCyclicReading 32bit_0x0000c1a0 6387 32
E _bHmiKeysFunctionDone 16bit_0x0000c1b2 5387 50
E _bHmiKeysFunctionDone 32bit_0x0000c1b2 6387 50
E _bInputsStable 16bit_0x0000b42d 5360 45
E _bInputsStable 32bit_0x0000b42d 6360 45
E _bInputsWorkingCopy 16bit_0x0000b42e 5360 46
E _bInputsWorkingCopy 32bit_0x0000b42e 6360 46
E _bKeypadProgPresent 16bit_0x0000c14f 5386 79
E _bKeypadProgPresent 32bit_0x0000c14f 6386 79
E _BLD_PRGNR   16bit_0x0000c166 5386 102
E _BLD_PRGNR   32bit_0x0000c166 6386 102
E _bMotorTypeFirstPowerUp 16bit_0x0000c145 5386 69
E _bMotorTypeFirstPowerUp 32bit_0x0000c145 6386 69
E _bNewEncoder 16bit_0x0000c0a8 5385 40
E _bNewEncoder 32bit_0x0000c0a8 6385 40
E _bwFlagsIhm  16bit_0x0000be0f 5380 15
E _bwFlagsIhm  32bit_0x0000be0f 6380 15
E _bWriteEnd   16bit_0x0000c068 5384 104
E _bWriteEnd   32bit_0x0000c068 6384 104
E _capParam    16bit_0x0000c16a 5386 106
E _capParam    32bit_0x0000c16a 6386 106
E _CardProcState 16bit_0x0000c02d 5384 45
E _CardProcState 32bit_0x0000c02d 6384 45
E _cComHmsReadPrmAccClt 16bit_0x0000c000 5384 0
E _cComHmsReadPrmAccClt 32bit_0x0000c000 6384 0
E _cComHmsWritePrmAccClt 16bit_0x0000c014 5384 20
E _cComHmsWritePrmAccClt 32bit_0x0000c014 6384 20
E _cComMbuSvcSysCom 16bit_0x0000c174 5386 116
E _cComMbuSvcSysCom 32bit_0x0000c174 6386 116
E _CMD_DataAndHeapEnd 16bit_0x0000c25c 5388 92
E _CMD_DataAndHeapEnd 32bit_0x0000c25c 6388 92
E _CMD_DataAndHeapStart 16bit_0x0000b000 5352 0
E _CMD_DataAndHeapStart 32bit_0x0000b000 6352 0
E _ComDevLocScannerSrv_bPlcOpenActive 16bit_0x0000bac1 5373 65
E _ComDevLocScannerSrv_bPlcOpenActive 32bit_0x0000bac1 6373 65
E _ComDevLocScannerSrv_sConfInputsObj 16bit_0x0000bb40 5374 64
E _ComDevLocScannerSrv_sConfInputsObj 32bit_0x0000bb40 6374 64
E _ComDevLocScannerSrv_sConfOutputsObj 16bit_0x0000bb80 5375 0
E _ComDevLocScannerSrv_sConfOutputsObj 32bit_0x0000bb80 6375 0
E _ComDevLocScannerSrv_u08ConfInputsCount 16bit_0x0000bac0 5373 64
E _ComDevLocScannerSrv_u08ConfInputsCount 32bit_0x0000bac0 6373 64
E _ComDevLocScannerSrv_u08ConfOutputsCount 16bit_0x0000bac2 5373 66
E _ComDevLocScannerSrv_u08ConfOutputsCount 32bit_0x0000bac2 6373 66
E _ComDevLocScannerSrv_u32InputValue 16bit_0x0000bac4 5373 68
E _ComDevLocScannerSrv_u32InputValue 32bit_0x0000bac4 6373 68
E _ComDevLocScannerSrv_u32OutputValue 16bit_0x0000bb00 5374 0
E _ComDevLocScannerSrv_u32OutputValue 32bit_0x0000bb00 6374 0
E _comioc_u32CfgTraDiag 16bit_0x0000c22a 5388 42
E _comioc_u32CfgTraDiag 32bit_0x0000c22a 6388 42
E _ComSysDiagnostic_u08LocalSrv 16bit_0x0000c044 5384 68
E _ComSysDiagnostic_u08LocalSrv 32bit_0x0000c044 6384 68
E _ComSysDiagnostic_u08MaxNbInstances 16bit_0x0000c042 5384 66
E _ComSysDiagnostic_u08MaxNbInstances 32bit_0x0000c042 6384 66
E _ComSysDiagnostic_u08NbInstances 16bit_0x0000c040 5384 64
E _ComSysDiagnostic_u08NbInstances 32bit_0x0000c040 6384 64
E _ComSysDiagnostic_u08RemoteClt 16bit_0x0000c045 5384 69
E _ComSysDiagnostic_u08RemoteClt 32bit_0x0000c045 6384 69
E _ComSysDiagnostic_u08RemotSrv 16bit_0x0000c043 5384 67
E _ComSysDiagnostic_u08RemotSrv 32bit_0x0000c043 6384 67
E _ComSysDiagnostic_u08SysInvalidAdd 16bit_0x0000c041 5384 65
E _ComSysDiagnostic_u08SysInvalidAdd 32bit_0x0000c041 6384 65
E _ComSysDiagnostic_u08SysMsg 16bit_0x0000c046 5384 70
E _ComSysDiagnostic_u08SysMsg 32bit_0x0000c046 6384 70
E _ComSysDiagnostic_u16BadMsgDelete 16bit_0x0000c048 5384 72
E _ComSysDiagnostic_u16BadMsgDelete 32bit_0x0000c048 6384 72
E _ComSysDiagnostic_u16DefaultMsg 16bit_0x0000c049 5384 73
E _ComSysDiagnostic_u16DefaultMsg 32bit_0x0000c049 6384 73
E _ComSysDiagnostic_u32ClientReqDownload 16bit_0x0000c066 5384 102
E _ComSysDiagnostic_u32ClientReqDownload 32bit_0x0000c066 6384 102
E _ComSysDiagnostic_u32ClientReqMess 16bit_0x0000c060 5384 96
E _ComSysDiagnostic_u32ClientReqMess 32bit_0x0000c060 6384 96
E _ComSysDiagnostic_u32ClientReqReadObj 16bit_0x0000c058 5384 88
E _ComSysDiagnostic_u32ClientReqReadObj 32bit_0x0000c058 6384 88
E _ComSysDiagnostic_u32ClientReqUpload 16bit_0x0000c064 5384 100
E _ComSysDiagnostic_u32ClientReqUpload 32bit_0x0000c064 6384 100
E _ComSysDiagnostic_u32ClientReqWriteObj 16bit_0x0000c05a 5384 90
E _ComSysDiagnostic_u32ClientReqWriteObj 32bit_0x0000c05a 6384 90
E _ComSysDiagnostic_u32LocalCltTimeout 16bit_0x0000c062 5384 98
E _ComSysDiagnostic_u32LocalCltTimeout 32bit_0x0000c062 6384 98
E _ComSysDiagnostic_u32LocalSrvTimeout 16bit_0x0000c04a 5384 74
E _ComSysDiagnostic_u32LocalSrvTimeout 32bit_0x0000c04a 6384 74
E _ComSysDiagnostic_u32RoutedMess 16bit_0x0000c04c 5384 76
E _ComSysDiagnostic_u32RoutedMess 32bit_0x0000c04c 6384 76
E _ComSysDiagnostic_u32RxSysMsg 16bit_0x0000c05c 5384 92
E _ComSysDiagnostic_u32RxSysMsg 32bit_0x0000c05c 6384 92
E _ComSysDiagnostic_u32ServerReqDownload 16bit_0x0000c04e 5384 78
E _ComSysDiagnostic_u32ServerReqDownload 32bit_0x0000c04e 6384 78
E _ComSysDiagnostic_u32ServerReqMess 16bit_0x0000c050 5384 80
E _ComSysDiagnostic_u32ServerReqMess 32bit_0x0000c050 6384 80
E _ComSysDiagnostic_u32ServerReqReadObj 16bit_0x0000c056 5384 86
E _ComSysDiagnostic_u32ServerReqReadObj 32bit_0x0000c056 6384 86
E _ComSysDiagnostic_u32ServerReqUpload 16bit_0x0000c054 5384 84
E _ComSysDiagnostic_u32ServerReqUpload 32bit_0x0000c054 6384 84
E _ComSysDiagnostic_u32ServerReqWriteObj 16bit_0x0000c052 5384 82
E _ComSysDiagnostic_u32ServerReqWriteObj 32bit_0x0000c052 6384 82
E _ComSysDiagnostic_u32TxSysMsg 16bit_0x0000c05e 5384 94
E _ComSysDiagnostic_u32TxSysMsg 32bit_0x0000c05e 6384 94
E _ComSysDiagnostic_uMax08SysMsg 16bit_0x0000c047 5384 71
E _ComSysDiagnostic_uMax08SysMsg 32bit_0x0000c047 6384 71
E _ComSysPort_tSysAdr 16bit_0x0000bd4c 5378 76
E _ComSysPort_tSysAdr 32bit_0x0000bd4c 6378 76
E _ComSysPort_tSysPhyConnn 16bit_0x0000bfc2 5383 66
E _ComSysPort_tSysPhyConnn 32bit_0x0000bfc2 6383 66
E _ComSysPort_u08MySystemAdr 16bit_0x0000bd44 5378 68
E _ComSysPort_u08MySystemAdr 32bit_0x0000bd44 6378 68
E _ControllerStatus 16bit_0x0000c1b1 5387 49
E _ControllerStatus 32bit_0x0000c1b1 6387 49
E _CpuTimer0   16bit_0x0000bef4 5381 116
E _CpuTimer0   32bit_0x0000bef4 6381 116
E _CpuTimer1   16bit_0x0000bee4 5381 100
E _CpuTimer1   32bit_0x0000bee4 6381 100
E _CpuTimer2   16bit_0x0000beec 5381 108
E _CpuTimer2   32bit_0x0000beec 6381 108
E _diaParam    16bit_0x0000c1c6 5387 70
E _diaParam    32bit_0x0000c1c6 6387 70
E _drvParam    16bit_0x0000c07f 5384 127
E _drvParam    32bit_0x0000c07f 6384 127
E _DUPLICATE_TRANSACTIONID 16bit_0x0000c22c 5388 44
E _DUPLICATE_TRANSACTIONID 32bit_0x0000c22c 6388 44
E _EmbeddedDisplayed 16bit_0x0000c1eb 5387 107
E _EmbeddedDisplayed 32bit_0x0000c1eb 6387 107
E _embeddedString 16bit_0x0000c193 5387 19
E _embeddedString 32bit_0x0000c193 6387 19
E _eprParam    16bit_0x0000c23c 5388 60
E _eprParam    32bit_0x0000c23c 6388 60
E _eprPtr      16bit_0x0000c23d 5388 61
E _eprPtr      32bit_0x0000c23d 6388 61
E _FresProcState 16bit_0x0000c032 5384 50
E _FresProcState 32bit_0x0000c032 6384 50
E _FScopeParam 16bit_0x0000c0e0 5385 96
E _FScopeParam 32bit_0x0000c0e0 6385 96
E _FSUState    16bit_0x0000c028 5384 40
E _FSUState    32bit_0x0000c028 6384 40
E _GfxCommonContext 16bit_0x0000c06e 5384 110
E _GfxCommonContext 32bit_0x0000c06e 6384 110
E _GfxStackPointer 16bit_0x0000c122 5386 34
E _GfxStackPointer 32bit_0x0000c122 6386 34
E _hos_Bits    16bit_0x0000c0c4 5385 68
E _hos_Bits    32bit_0x0000c0c4 6385 68
E _hos_iADWaitCnt 16bit_0x0000c0c2 5385 66
E _hos_iADWaitCnt 32bit_0x0000c0c2 6385 66
E _hos_sMemHeapIntern 16bit_0x0000c0da 5385 90
E _hos_sMemHeapIntern 32bit_0x0000c0da 6385 90
E _hos_uiModulMask 16bit_0x0000c0c0 5385 64
E _hos_uiModulMask 32bit_0x0000c0c0 6385 64
E _hos_uiNull  16bit_0x0000c0c8 5385 72
E _hos_uiNull  32bit_0x0000c0c8 6385 72
E _hos_uiSectUser 16bit_0x0000c0c3 5385 67
E _hos_uiSectUser 32bit_0x0000c0c3 6385 67
E _hos_uiSystemstart 16bit_0x0000c0c6 5385 70
E _hos_uiSystemstart 32bit_0x0000c0c6 6385 70
E _hos_uiTaskSchedCnt 16bit_0x0000c0c7 5385 71
E _hos_uiTaskSchedCnt 32bit_0x0000c0c7 6385 71
E _hos_uiTimeTick1ms 16bit_0x0000c0c5 5385 69
E _hos_uiTimeTick1ms 32bit_0x0000c0c5 6385 69
E _hos_uiTimeTick250us 16bit_0x0000c0c1 5385 65
E _hos_uiTimeTick250us 32bit_0x0000c0c1 6385 65
E _hos_uiTimeTick62us 16bit_0x0000c0c9 5385 73
E _hos_uiTimeTick62us 32bit_0x0000c0c9 6385 73
E _hos_ulDintTimeAdr 16bit_0x0000c0ce 5385 78
E _hos_ulDintTimeAdr 32bit_0x0000c0ce 6385 78
E _hos_ulDintTimeMax 16bit_0x0000c0d0 5385 80
E _hos_ulDintTimeMax 32bit_0x0000c0d0 6385 80
E _hos_ulEnableTmp 16bit_0x0000c0d4 5385 84
E _hos_ulEnableTmp 32bit_0x0000c0d4 6385 84
E _hos_ulHajime 16bit_0x0000c0ca 5385 74
E _hos_ulHajime 32bit_0x0000c0ca 6385 74
E _hos_ulMaxEnableTime 16bit_0x0000c0d2 5385 82
E _hos_ulMaxEnableTime 32bit_0x0000c0d2 6385 82
E _hos_ulMaxIqrefTime 16bit_0x0000c0d8 5385 88
E _hos_ulMaxIqrefTime 32bit_0x0000c0d8 6385 88
E _hos_ulNull  16bit_0x0000c0cc 5385 76
E _hos_ulNull  32bit_0x0000c0cc 6385 76
E _hos_ulStartUpTime 16bit_0x0000c0d6 5385 86
E _hos_ulStartUpTime 32bit_0x0000c0d6 6385 86
E _hwlParam    16bit_0x0000c1e6 5387 102
E _hwlParam    32bit_0x0000c1e6 6387 102
E _IndexForString 16bit_0x0000c14a 5386 74
E _IndexForString 32bit_0x0000c14a 6386 74
E _isBackgndUsed 16bit_0x0000c119 5386 25
E _isBackgndUsed 32bit_0x0000c119 6386 25
E _isGfxActionDone 16bit_0x0000c118 5386 24
E _isGfxActionDone 32bit_0x0000c118 6386 24
E _isGfxStackOverFlow 16bit_0x0000c11b 5386 27
E _isGfxStackOverFlow 32bit_0x0000c11b 6386 27
E _isHoldKeyGfx 16bit_0x0000c116 5386 22
E _isHoldKeyGfx 32bit_0x0000c116 6386 22
E _isIdRequestGFX 16bit_0x0000c11a 5386 26
E _isIdRequestGFX 32bit_0x0000c11a 6386 26
E _isNewProgram 16bit_0x0000c121 5386 33
E _isNewProgram 32bit_0x0000c121 6386 33
E _isUserEvent 16bit_0x0000c117 5386 23
E _isUserEvent 32bit_0x0000c117 6386 23
E _LD_PRGNR    16bit_0x0000c164 5386 100
E _LD_PRGNR    32bit_0x0000c164 6386 100
E _LI_forced   16bit_0x0000c1ce 5387 78
E _LI_forced   32bit_0x0000c1ce 6387 78
E _LI_mask     16bit_0x0000c1d0 5387 80
E _LI_mask     32bit_0x0000c1d0 6387 80
E _LO_forced   16bit_0x0000c1cf 5387 79
E _LO_forced   32bit_0x0000c1cf 6387 79
E _LO_mask     16bit_0x0000c1d1 5387 81
E _LO_mask     32bit_0x0000c1d1 6387 81
E _mdbParam    16bit_0x0000c1f2 5387 114
E _mdbParam    32bit_0x0000c1f2 6387 114
E _MotConfigParam 16bit_0x0000c1a1 5387 33
E _MotConfigParam 32bit_0x0000c1a1 6387 33
E _ms_auiEfmMonAccesslist__4CMdb 16bit_0x0000bf86 5383 6
E _ms_auiEfmMonAccesslist__4CMdb 32bit_0x0000bf86 6383 6
E _ms_uiDigOutRegMaskClear__7CHwlDio 16bit_0x0000c081 5385 1
E _ms_uiDigOutRegMaskClear__7CHwlDio 32bit_0x0000c081 6385 1
E _ms_uiDigOutRegMaskSet__7CHwlDio 16bit_0x0000c080 5385 0
E _ms_uiDigOutRegMaskSet__7CHwlDio 32bit_0x0000c080 6385 0
E _ms_uiEfmChangeCount__4CMdb 16bit_0x0000bf81 5383 1
E _ms_uiEfmChangeCount__4CMdb 32bit_0x0000bf81 6383 1
E _ms_uiEfmConfigChannel__4CMdb 16bit_0x0000bf80 5383 0
E _ms_uiEfmConfigChannel__4CMdb 32bit_0x0000bf80 6383 0
E _ms_uiEfmParamCount__4CMdb 16bit_0x0000bf82 5383 2
E _ms_uiEfmParamCount__4CMdb 32bit_0x0000bf82 6383 2
E _ms_uiObjRefPosEdge__16CAxfUmodeManTune 16bit_0x0000bfb1 5383 49
E _ms_uiObjRefPosEdge__16CAxfUmodeManTune 32bit_0x0000bfb1 6383 49
E _ms_ulEfmReadRequestActiveBitmask__4CMdb 16bit_0x0000bf84 5383 4
E _ms_ulEfmReadRequestActiveBitmask__4CMdb 32bit_0x0000bf84 6383 4
E _ms_ulSuppDriveModes__14CProfileCiA402 16bit_0x0000c256 5388 86
E _ms_ulSuppDriveModes__14CProfileCiA402 32bit_0x0000c256 6388 86
E _m_bDataSetRead 16bit_0x0000bcc5 5377 69
E _m_bDataSetRead 32bit_0x0000bcc5 6377 69
E _m_bDisPower 16bit_0x0000c0f6 5385 118
E _m_bDisPower 32bit_0x0000c0f6 6385 118
E _m_bExclusiveAccess 16bit_0x0000bcc2 5377 66
E _m_bExclusiveAccess 32bit_0x0000bcc2 6377 66
E _m_bHomingRead 16bit_0x0000bcc0 5377 64
E _m_bHomingRead 32bit_0x0000bcc0 6377 64
E _m_bLocked   16bit_0x0000c154 5386 84
E _m_bLocked   32bit_0x0000c154 6386 84
E _m_bPowerEnabled 16bit_0x0000c0f7 5385 119
E _m_bPowerEnabled 32bit_0x0000c0f7 6385 119
E _m_bQuickStop 16bit_0x0000c0f9 5385 121
E _m_bQuickStop 32bit_0x0000c0f9 6385 121
E _m_bRunning  16bit_0x0000c0fc 5385 124
E _m_bRunning  32bit_0x0000c0fc 6385 124
E _m_bStop     16bit_0x0000c0f8 5385 120
E _m_bStop     32bit_0x0000c0f8 6385 120
E _m_bTargetPosAbsRead 16bit_0x0000bcc6 5377 70
E _m_bTargetPosAbsRead 32bit_0x0000bcc6 6377 70
E _m_bTargetPosRelRead 16bit_0x0000bcc4 5377 68
E _m_bTargetPosRelRead 32bit_0x0000bcc4 6377 68
E _m_bTransferDone 16bit_0x0000c205 5388 5
E _m_bTransferDone 32bit_0x0000c205 6388 5
E _m_bTransferMSM32 16bit_0x0000bbc2 5375 66
E _m_bTransferMSM32 32bit_0x0000bbc2 6375 66
E _m_eFatalErrCtrl__15CHwlSuperVision 16bit_0x0000bd80 5379 0
E _m_eFatalErrCtrl__15CHwlSuperVision 32bit_0x0000bd80 6379 0
E _m_ErrFiFo__13CEprFileError 16bit_0x0000be80 5381 0
E _m_ErrFiFo__13CEprFileError 32bit_0x0000be80 6381 0
E _m_iOpStatus 16bit_0x0000be73 5380 115
E _m_iOpStatus 32bit_0x0000be73 6380 115
E _m_lTargetPosAbs 16bit_0x0000bcca 5377 74
E _m_lTargetPosAbs 32bit_0x0000bcca 6377 74
E _m_lTargetPosRel 16bit_0x0000bcc8 5377 72
E _m_lTargetPosRel 32bit_0x0000bcc8 6377 72
E _m_pDssEnc__7CEncBas 16bit_0x0000c238 5388 56
E _m_pDssEnc__7CEncBas 32bit_0x0000c238 6388 56
E _m_pProtEpr__11CEprFileMgr 16bit_0x0000c1da 5387 90
E _m_pProtEpr__11CEprFileMgr 32bit_0x0000c1da 6387 90
E _m_psFatalError__15CHwlSuperVision 16bit_0x0000bd86 5379 6
E _m_psFatalError__15CHwlSuperVision 32bit_0x0000bd86 6379 6
E _m_puiIrqStackAdr__15CHwlSuperVision 16bit_0x0000bd84 5379 4
E _m_puiIrqStackAdr__15CHwlSuperVision 32bit_0x0000bd84 6379 4
E _m_pWorkEprFAT__11CEprBasFile 16bit_0x0000c180 5387 0
E _m_pWorkEprFAT__11CEprBasFile 32bit_0x0000c180 6387 0
E _m_sRegEncAna__10CEncAnaBas 16bit_0x0000c236 5388 54
E _m_sRegEncAna__10CEncAnaBas 32bit_0x0000c236 6388 54
E _m_StoreMaskFiFo__11CEprBasFile 16bit_0x0000c185 5387 5
E _m_StoreMaskFiFo__11CEprBasFile 32bit_0x0000c185 6387 5
E _m_StoreMask__11CEprBasFile 16bit_0x0000c182 5387 2
E _m_StoreMask__11CEprBasFile 32bit_0x0000c182 6387 2
E _m_structSystemInfo__15CHwlSuperVision 16bit_0x0000bdc0 5379 64
E _m_structSystemInfo__15CHwlSuperVision 32bit_0x0000bdc0 6379 64
E _m_uiActionCounter 16bit_0x0000bbc4 5375 68
E _m_uiActionCounter 32bit_0x0000bbc4 6375 68
E _m_uiAtuneProgress 16bit_0x0000c208 5388 8
E _m_uiAtuneProgress 32bit_0x0000c208 6388 8
E _m_uiAtuneStatus 16bit_0x0000c209 5388 9
E _m_uiAtuneStatus 32bit_0x0000c209 6388 9
E _m_uiDataSet 16bit_0x0000bcc3 5377 67
E _m_uiDataSet 32bit_0x0000bcc3 6377 67
E _m_uiDig12__11CHwlHmi7Seg 16bit_0x0000c1e4 5387 100
E _m_uiDig12__11CHwlHmi7Seg 32bit_0x0000c1e4 6387 100
E _m_uiDig34__11CHwlHmi7Seg 16bit_0x0000c1e5 5387 101
E _m_uiDig34__11CHwlHmi7Seg 32bit_0x0000c1e5 6387 101
E _m_uiDOT__11CHwlHmi7Seg 16bit_0x0000c1e3 5387 99
E _m_uiDOT__11CHwlHmi7Seg 32bit_0x0000c1e3 6387 99
E _m_uiHomingMethod 16bit_0x0000bcc1 5377 65
E _m_uiHomingMethod 32bit_0x0000bcc1 6377 65
E _m_uiHomingStatus 16bit_0x0000c207 5388 7
E _m_uiHomingStatus 32bit_0x0000c207 6388 7
E _m_uiIdx     16bit_0x0000be72 5380 114
E _m_uiIdx     32bit_0x0000be72 6380 114
E _m_uiLED__11CHwlHmi7Seg 16bit_0x0000c1e2 5387 98
E _m_uiLED__11CHwlHmi7Seg 32bit_0x0000c1e2 6387 98
E _m_uiOldTime 16bit_0x0000c14e 5386 78
E _m_uiOldTime 32bit_0x0000c14e 6386 78
E _m_uiOpStatIdx 16bit_0x0000be74 5380 116
E _m_uiOpStatIdx 32bit_0x0000be74 6380 116
E _m_uiPageNo__8CEprFile 16bit_0x0000c1d7 5387 87
E _m_uiPageNo__8CEprFile 32bit_0x0000c1d7 6387 87
E _m_uiTmpData__8CEprFile 16bit_0x0000c1d8 5387 88
E _m_uiTmpData__8CEprFile 32bit_0x0000c1d8 6387 88
E _m_uiWritePageAdr__8CEprFile 16bit_0x0000c1d6 5387 86
E _m_uiWritePageAdr__8CEprFile 32bit_0x0000c1d6 6387 86
E _m_ulDispErrorHist 16bit_0x0000c232 5388 50
E _m_ulDispErrorHist 32bit_0x0000c232 6388 50
E _m_ulFault   16bit_0x0000c124 5386 36
E _m_ulFault   32bit_0x0000c124 6386 36
E _m_ulJogActivate 16bit_0x0000c0fe 5385 126
E _m_ulJogActivate 32bit_0x0000c0fe 6385 126
E _m_ulMaskWriteLock__15CMemCardFileMgr 16bit_0x0000c1d2 5387 82
E _m_ulMaskWriteLock__15CMemCardFileMgr 32bit_0x0000c1d2 6387 82
E _m_ulWarning 16bit_0x0000c126 5386 38
E _m_ulWarning 32bit_0x0000c126 6386 38
E _NbOfAxis    16bit_0x0000c1c5 5387 69
E _NbOfAxis    32bit_0x0000c1c5 6387 69
E _NB_PHY_CONNECTIONS 16bit_0x0000bfc0 5383 64
E _NB_PHY_CONNECTIONS 32bit_0x0000bfc0 6383 64
E _oscParam    16bit_0x0000bff0 5383 112
E _oscParam    32bit_0x0000bff0 6383 112
E _ParamDataInter_State 16bit_0x0000b7b0 5367 48
E _ParamDataInter_State 32bit_0x0000b7b0 6367 48
E _pFunctCommandHmi 16bit_0x0000c06c 5384 108
E _pFunctCommandHmi 32bit_0x0000c06c 6384 108
E _pMsgConfig  16bit_0x0000b43c 5360 60
E _pMsgConfig  32bit_0x0000b43c 6360 60
E _pMsgInputsStable 16bit_0x0000b43a 5360 58
E _pMsgInputsStable 32bit_0x0000b43a 6360 58
E _pMsgInputsWorking 16bit_0x0000b430 5360 48
E _pMsgInputsWorking 32bit_0x0000b430 6360 48
E _pMsgInputsWorkingCopy 16bit_0x0000b432 5360 50
E _pMsgInputsWorkingCopy 32bit_0x0000b432 6360 50
E _pMsgOutputsStable 16bit_0x0000b434 5360 52
E _pMsgOutputsStable 32bit_0x0000b434 6360 52
E _pMsgOutputsWorking 16bit_0x0000b438 5360 56
E _pMsgOutputsWorking 32bit_0x0000b438 6360 56
E _pMsgOutputsWorkingCopy 16bit_0x0000b436 5360 54
E _pMsgOutputsWorkingCopy 32bit_0x0000b436 6360 54
E _profPlcParam 16bit_0x0000bf00 5382 0
E _profPlcParam 32bit_0x0000bf00 6382 0
E _pText       16bit_0x0000c038 5384 56
E _pText       32bit_0x0000c038 6384 56
E _sHMIDataInterfaceWithCPDApp 16bit_0x0000b7b4 5367 52
E _sHMIDataInterfaceWithCPDApp 32bit_0x0000b7b4 6367 52
E _sHMIInternDataInterfaceApp 16bit_0x0000be0d 5380 13
E _sHMIInternDataInterfaceApp 32bit_0x0000be0d 6380 13
E _sInputsRefreshTimer 16bit_0x0000c1bc 5387 60
E _sInputsRefreshTimer 32bit_0x0000c1bc 6387 60
E _slSumVal    16bit_0x0000c036 5384 54
E _slSumVal    32bit_0x0000c036 6384 54
E _slValDisplay 16bit_0x0000c034 5384 52
E _slValDisplay 32bit_0x0000c034 6384 52
E _sm_instance__4COsc 16bit_0x0000c250 5388 80
E _sm_instance__4COsc 32bit_0x0000c250 6388 80
E _sm_uiInstanz__4CCom 16bit_0x0000c20d 5388 13
E _sm_uiInstanz__4CCom 32bit_0x0000c20d 6388 13
E _SScopeParam 16bit_0x0000bfb2 5383 50
E _SScopeParam 32bit_0x0000bfb2 6383 50
E _StackIhm    16bit_0x0000be40 5380 64
E _StackIhm    32bit_0x0000be40 6380 64
E _StackPointerIhm 16bit_0x0000be12 5380 18
E _StackPointerIhm 32bit_0x0000be12 6380 18
E _StateMachine_String 16bit_0x0000c140 5386 64
E _StateMachine_String 32bit_0x0000c140 6386 64
E _SubindexForString 16bit_0x0000c148 5386 72
E _SubindexForString 32bit_0x0000c148 6386 72
E _SW_DATE     16bit_0x0000c168 5386 104
E _SW_DATE     32bit_0x0000c168 6386 104
E _SW_PRGNR    16bit_0x0000c162 5386 98
E _SW_PRGNR    32bit_0x0000c162 6386 98
E _SW_REVISION 16bit_0x0000c161 5386 97
E _SW_REVISION 32bit_0x0000c161 6386 97
E _SW_VERSION  16bit_0x0000c160 5386 96
E _SW_VERSION  32bit_0x0000c160 6386 96
E _s_uiSupportedDataSets__4CAdm 16bit_0x0000c0bf 5385 63
E _s_uiSupportedDataSets__4CAdm 32bit_0x0000c0bf 6385 63
E _s_uiSupportedEprSize__4CAdm 16bit_0x0000c0be 5385 62
E _s_uiSupportedEprSize__4CAdm 32bit_0x0000c0be 6385 62
E _s_ulCreateSystemLoad__4CHwl 16bit_0x0000c1de 5387 94
E _s_ulCreateSystemLoad__4CHwl 32bit_0x0000c1de 6387 94
E _theAdm      16bit_0x0000babe 5373 62
E _theAdm      32bit_0x0000babe 6373 62
E _theAnalogInMgr 16bit_0x0000c246 5388 70
E _theAnalogInMgr 32bit_0x0000c246 6388 70
E _theAtu      16bit_0x0000bd7c 5378 124
E _theAtu      32bit_0x0000bd7c 6378 124
E _theAxf      16bit_0x0000c20e 5388 14
E _theAxf      32bit_0x0000c20e 6388 14
E _theAxfAnalog 16bit_0x0000c210 5388 16
E _theAxfAnalog 32bit_0x0000c210 6388 16
E _theAxfOpModeDss 16bit_0x0000c214 5388 20
E _theAxfOpModeDss 32bit_0x0000c214 6388 20
E _theAxfScaling 16bit_0x0000c216 5388 22
E _theAxfScaling 32bit_0x0000c216 6388 22
E _theBasFileDownloader 16bit_0x0000c220 5388 32
E _theBasFileDownloader 32bit_0x0000c220 6388 32
E _theBasFileUploader 16bit_0x0000c222 5388 34
E _theBasFileUploader 32bit_0x0000c222 6388 34
E _theBasNodeGuarding 16bit_0x0000c224 5388 36
E _theBasNodeGuarding 32bit_0x0000c224 6388 36
E _theCap      16bit_0x0000c228 5388 40
E _theCap      32bit_0x0000c228 6388 40
E _theCompManager 16bit_0x0000c218 5388 24
E _theCompManager 32bit_0x0000c218 6388 24
E _theDia      16bit_0x0000c22e 5388 46
E _theDia      32bit_0x0000c22e 6388 46
E _theDrive    16bit_0x0000c230 5388 48
E _theDrive    32bit_0x0000c230 6388 48
E _theDrvi     16bit_0x0000c21a 5388 26
E _theDrvi     32bit_0x0000c21a 6388 26
E _theEhm      16bit_0x0000c234 5388 52
E _theEhm      32bit_0x0000c234 6388 52
E _theEncMgr   16bit_0x0000c23a 5388 58
E _theEncMgr   32bit_0x0000c23a 6388 58
E _theEprFileMgr 16bit_0x0000c1dc 5387 92
E _theEprFileMgr 32bit_0x0000c1dc 6387 92
E _theErrorManager 16bit_0x0000c21c 5388 28
E _theErrorManager 32bit_0x0000c21c 6388 28
E _theFastScope 16bit_0x0000bd7a 5378 122
E _theFastScope 32bit_0x0000bd7a 6378 122
E _theFieldbus 16bit_0x0000c21e 5388 30
E _theFieldbus 32bit_0x0000c21e 6388 30
E _theFwUpdateMgr 16bit_0x0000c23e 5388 62
E _theFwUpdateMgr 32bit_0x0000c23e 6388 62
E _theHwl      16bit_0x0000c1e0 5387 96
E _theHwl      32bit_0x0000c1e0 6387 96
E _theHwlAdc   16bit_0x0000c128 5386 40
E _theHwlAdc   32bit_0x0000c128 6386 40
E _theHwlBrake 16bit_0x0000c248 5388 72
E _theHwlBrake 32bit_0x0000c248 6388 72
E _theHwlDio   16bit_0x0000c082 5385 2
E _theHwlDio   32bit_0x0000c082 6385 2
E _theHwlDSPtoPower 16bit_0x0000c240 5388 64
E _theHwlDSPtoPower 32bit_0x0000c240 6388 64
E _theHwlEsim  16bit_0x0000c242 5388 66
E _theHwlEsim  32bit_0x0000c242 6388 66
E _theHwlPDAB  16bit_0x0000c244 5388 68
E _theHwlPDAB  32bit_0x0000c244 6388 68
E _theHwlSuperVision 16bit_0x0000bd82 5379 2
E _theHwlSuperVision 32bit_0x0000bd82 6379 2
E _theIhm      16bit_0x0000b7b2 5367 50
E _theIhm      32bit_0x0000b7b2 6367 50
E _theIoc      16bit_0x0000c24c 5388 76
E _theIoc      32bit_0x0000c24c 6388 76
E _theMdbRtu   16bit_0x0000c24e 5388 78
E _theMdbRtu   32bit_0x0000c24e 6388 78
E _theMemCardFileMgr 16bit_0x0000c1d4 5387 84
E _theMemCardFileMgr 32bit_0x0000c1d4 6387 84
E _theMotConfig 16bit_0x0000c0aa 5385 42
E _theMotConfig 32bit_0x0000c0aa 6385 42
E _theParamAdmin 16bit_0x0000b080 5353 0
E _theParamAdmin 32bit_0x0000b080 6353 0
E _theParamCtrlGlob 16bit_0x0000b040 5352 64
E _theParamCtrlGlob 32bit_0x0000b040 6352 64
E _theParamCtrlSet 16bit_0x0000b060 5352 96
E _theParamCtrlSet 32bit_0x0000b060 6352 96
E _theParamFb  16bit_0x0000b002 5352 2
E _theParamFb  32bit_0x0000b002 6352 2
E _theParamHwInfo 16bit_0x0000b018 5352 24
E _theParamHwInfo 32bit_0x0000b018 6352 24
E _theParamManu 16bit_0x0000b180 5355 0
E _theParamManu 32bit_0x0000b180 6355 0
E _theParamMotor 16bit_0x0000b240 5356 64
E _theParamMotor 32bit_0x0000b240 6356 64
E _theParamMotorData 16bit_0x0000c0b2 5385 50
E _theParamMotorData 32bit_0x0000c0b2 6385 50
E _theParamPowerFail 16bit_0x0000b008 5352 8
E _theParamPowerFail 32bit_0x0000b008 6352 8
E _theParamUser 16bit_0x0000b340 5358 64
E _theParamUser 32bit_0x0000b340 6358 64
E _theParamUserNoReset 16bit_0x0000b0c0 5353 64
E _theParamUserNoReset 32bit_0x0000b0c0 6353 64
E _thePms      16bit_0x0000c252 5388 82
E _thePms      32bit_0x0000c252 6388 82
E _theProfileCiA402 16bit_0x0000c15e 5386 94
E _theProfileCiA402 32bit_0x0000c15e 6386 94
E _theProfilePlcOpen 16bit_0x0000c258 5388 88
E _theProfilePlcOpen 32bit_0x0000c258 6388 88
E _theSlowScope 16bit_0x0000bd7e 5378 126
E _theSlowScope 32bit_0x0000bd7e 6378 126
E _theStateMachine 16bit_0x0000c226 5388 38
E _theStateMachine 32bit_0x0000c226 6388 38
E _tMessagesRef 16bit_0x0000bd00 5378 0
E _tMessagesRef 32bit_0x0000bd00 6378 0
E _tPathNumbers 16bit_0x0000c1b3 5387 51
E _tPathNumbers 32bit_0x0000c1b3 6387 51
E _u08DestAdr  16bit_0x0000b42f 5360 47
E _u08DestAdr  32bit_0x0000b42f 6360 47
E _u08LocalSocketId 16bit_0x0000b42c 5360 44
E _u08LocalSocketId 32bit_0x0000b42c 6360 44
E _u32DebugChannel 16bit_0x0000bd4a 5378 74
E _u32DebugChannel 32bit_0x0000bd4a 6378 74
E _uAdcRaw__12CHwlAdc_C31x 16bit_0x0000c12a 5386 42
E _uAdcRaw__12CHwlAdc_C31x 32bit_0x0000c12a 6386 42
E _ucActiveBitIndicator 16bit_0x0000c142 5386 66
E _ucActiveBitIndicator 32bit_0x0000c142 6386 66
E _ucActualDisplayPos 16bit_0x0000c1ea 5387 106
E _ucActualDisplayPos 32bit_0x0000c1ea 6387 106
E _ucCfgActionsBuffer 16bit_0x0000bc00 5376 0
E _ucCfgActionsBuffer 32bit_0x0000bc00 6376 0
E _ucCfgCurrentLoaderId 16bit_0x0000c206 5388 6
E _ucCfgCurrentLoaderId 32bit_0x0000c206 6388 6
E _ucCodingWheelStatus 16bit_0x0000c155 5386 85
E _ucCodingWheelStatus 32bit_0x0000c155 6386 85
E _ucCommandKeysStatus 16bit_0x0000c14c 5386 76
E _ucCommandKeysStatus 32bit_0x0000c14c 6386 76
E _ucCurrentLanguage 16bit_0x0000c151 5386 81
E _ucCurrentLanguage 32bit_0x0000c151 6386 81
E _ucCurrentOrder 16bit_0x0000c1b9 5387 57
E _ucCurrentOrder 32bit_0x0000c1b9 6387 57
E _ucDirectionOfManual 16bit_0x0000c24b 5388 75
E _ucDirectionOfManual 32bit_0x0000c24b 6388 75
E _ucEmbeddedKeypadValue 16bit_0x0000c031 5384 49
E _ucEmbeddedKeypadValue 32bit_0x0000c031 6384 49
E _ucFilesStatus 16bit_0x0000c1b8 5387 56
E _ucFilesStatus 32bit_0x0000c1b8 6387 56
E _ucGfxConnectionMode 16bit_0x0000c11e 5386 30
E _ucGfxConnectionMode 32bit_0x0000c11e 6386 30
E _ucGfxFolderToUseCfg 16bit_0x0000c1cd 5387 77
E _ucGfxFolderToUseCfg 32bit_0x0000c1cd 6387 77
E _ucGfxTransferDataCfg 16bit_0x0000c1cc 5387 76
E _ucGfxTransferDataCfg 32bit_0x0000c1cc 6387 76
E _ucGfxTransferStateCfg 16bit_0x0000c1cb 5387 75
E _ucGfxTransferStateCfg 32bit_0x0000c1cb 6387 75
E _ucGfxTransferTypeCfg 16bit_0x0000c1ca 5387 74
E _ucGfxTransferTypeCfg 32bit_0x0000c1ca 6387 74
E _ucHmiKeysStatus 16bit_0x0000c14d 5386 77
E _ucHmiKeysStatus 32bit_0x0000c14d 6386 77
E _ucKeypadIsPresent 16bit_0x0000c153 5386 83
E _ucKeypadIsPresent 32bit_0x0000c153 6386 83
E _ucMenuPathLevel 16bit_0x0000c1b0 5387 48
E _ucMenuPathLevel 32bit_0x0000c1b0 6387 48
E _ucMotorIsMovingManual 16bit_0x0000c24a 5388 74
E _ucMotorIsMovingManual 32bit_0x0000c24a 6388 74
E _ucstring16  16bit_0x0000bcb0 5377 48
E _ucstring16  32bit_0x0000bcb0 6377 48
E _ucSumCnt    16bit_0x0000c02e 5384 46
E _ucSumCnt    32bit_0x0000c02e 6384 46
E _ucTempoAutoTun 16bit_0x0000c033 5384 51
E _ucTempoAutoTun 32bit_0x0000c033 6384 51
E _ucTempoHoldKeyGfxIhm 16bit_0x0000c11c 5386 28
E _ucTempoHoldKeyGfxIhm 32bit_0x0000c11c 6386 28
E _ucTempoHoldKeyIhm 16bit_0x0000be00 5380 0
E _ucTempoHoldKeyIhm 32bit_0x0000be00 6380 0
E _ucTempoString 16bit_0x0000c1ec 5387 108
E _ucTempoString 32bit_0x0000c1ec 6387 108
E _ucTempoSupervision 16bit_0x0000c02a 5384 42
E _ucTempoSupervision 32bit_0x0000c02a 6384 42
E _ucUmassDownloadTerminatedFiles 16bit_0x0000c1c3 5387 67
E _ucUmassDownloadTerminatedFiles 32bit_0x0000c1c3 6387 67
E _ucUmassUploadTerminatedFiles 16bit_0x0000c1c1 5387 65
E _ucUmassUploadTerminatedFiles 32bit_0x0000c1c1 6387 65
E _uiAdmFSUFlag 16bit_0x0000babc 5373 60
E _uiAdmFSUFlag 32bit_0x0000babc 6373 60
E _uiCfgFileSize_Actions 16bit_0x0000bbc1 5375 65
E _uiCfgFileSize_Actions 32bit_0x0000bbc1 6375 65
E _uiCfgSenderIdGp 16bit_0x0000c115 5386 21
E _uiCfgSenderIdGp 32bit_0x0000c115 6386 21
E _uiConnectedDigitsConsoleIdx 16bit_0x0000c192 5387 18
E _uiConnectedDigitsConsoleIdx 32bit_0x0000c192 6387 18
E _uiDS402Activate 16bit_0x0000c159 5386 89
E _uiDS402Activate 32bit_0x0000c159 6386 89
E _uiDS402CapControl 16bit_0x0000c158 5386 88
E _uiDS402CapControl 32bit_0x0000c158 6386 88
E _uiDS402CapControl1 16bit_0x0000c156 5386 86
E _uiDS402CapControl1 32bit_0x0000c156 6386 86
E _uiDS402CapControl2 16bit_0x0000c157 5386 87
E _uiDS402CapControl2 32bit_0x0000c157 6386 87
E _uiDS402CapControl3 16bit_0x0000c15c 5386 92
E _uiDS402CapControl3 32bit_0x0000c15c 6386 92
E _uiDS402CapControl4 16bit_0x0000c15a 5386 90
E _uiDS402CapControl4 32bit_0x0000c15a 6386 90
E _uiDS402ConfigParam 16bit_0x0000c15b 5386 91
E _uiDS402ConfigParam 32bit_0x0000c15b 6386 91
E _uiExportedKeypadValue 16bit_0x0000c25a 5388 90
E _uiExportedKeypadValue 32bit_0x0000c25a 6388 90
E _uiFSUentry  16bit_0x0000c02b 5384 43
E _uiFSUentry  32bit_0x0000c02b 6384 43
E _uiIHMevent  16bit_0x0000c1ee 5387 110
E _uiIHMevent  32bit_0x0000c1ee 6387 110
E _uiLastLanguageIdx 16bit_0x0000c150 5386 80
E _uiLastLanguageIdx 32bit_0x0000c150 6386 80
E _uiLEDstate  16bit_0x0000c029 5384 41
E _uiLEDstate  32bit_0x0000c029 6384 41
E _uiLEDTimer  16bit_0x0000c02c 5384 44
E _uiLEDTimer  32bit_0x0000c02c 6384 44
E _uiNumberOfActions 16bit_0x0000bbc3 5375 67
E _uiNumberOfActions 32bit_0x0000bbc3 6375 67
E _uiTempoBusyIhm 16bit_0x0000be09 5380 9
E _uiTempoBusyIhm 32bit_0x0000be09 6380 9
E _uiTempoEmbeddedKeypad 16bit_0x0000be05 5380 5
E _uiTempoEmbeddedKeypad 32bit_0x0000be05 6380 5
E _uiTempoInitBitmap 16bit_0x0000c11d 5386 29
E _uiTempoInitBitmap 32bit_0x0000c11d 6386 29
E _uiTempoParEntIhm 16bit_0x0000be01 5380 1
E _uiTempoParEntIhm 32bit_0x0000be01 6380 1
E _uiTempoProtectedIhm 16bit_0x0000be02 5380 2
E _uiTempoProtectedIhm 32bit_0x0000be02 6380 2
E _uiTempoScrollIhm 16bit_0x0000be03 5380 3
E _uiTempoScrollIhm 32bit_0x0000be03 6380 3
E _uiTempoSeqHmi 16bit_0x0000c069 5384 105
E _uiTempoSeqHmi 32bit_0x0000c069 6384 105
E _uiwarmstartCounter 16bit_0x0000be0b 5380 11
E _uiwarmstartCounter 32bit_0x0000be0b 6380 11
E _uiwarmstartOK 16bit_0x0000be0a 5380 10
E _uiwarmstartOK 32bit_0x0000be0a 6380 10
E _ulFSUSIdxIdx 16bit_0x0000c03a 5384 58
E _ulFSUSIdxIdx 32bit_0x0000c03a 6384 58
E _ulIncrement 16bit_0x0000be14 5380 20
E _ulIncrement 32bit_0x0000be14 6380 20
E _ulObjDbVersion 16bit_0x0000c254 5388 84
E _ulObjDbVersion 32bit_0x0000c254 6388 84
E _ulStartUp   16bit_0x0000b7b6 5367 54
E _ulStartUp   32bit_0x0000b7b6 6367 54
E _ulStartUpMessage 16bit_0x0000c03e 5384 62
E _ulStartUpMessage 32bit_0x0000c03e 6384 62
E _ulStopFault 16bit_0x0000c03c 5384 60
E _ulStopFault 32bit_0x0000c03c 6384 60
E _unionFftData 16bit_0x0000c1fe 5387 126
E _unionFftData 32bit_0x0000c1fe 6387 126
E _usUmassTranfertError 16bit_0x0000c1c2 5387 66
E _usUmassTranfertError 32bit_0x0000c1c2 6387 66
E _WarnProcState 16bit_0x0000c02f 5384 47
E _WarnProcState 32bit_0x0000c02f 6384 47
E __cleanup_ptr 16bit_0x0000c200 5388 0
E __cleanup_ptr 32bit_0x0000c200 6388 0
E __dtors_ptr  16bit_0x0000c202 5388 2
E __dtors_ptr  32bit_0x0000c202 6388 2
E __lock       16bit_0x0000c1fc 5387 124
E __lock       32bit_0x0000c1fc 6387 124
E __unlock     16bit_0x0000c1fa 5387 122
E __unlock     32bit_0x0000c1fa 6387 122
# Structures CPD
# Fri Jan 11 12:20:29 2013
#
#  (): not found
#
# ============ Interface_to_drive_component (0) ============
# CBasDrive {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  ToDrvCtrl {
#     UINT16   uiOpmRequest : 2
#     UINT16   uiAxModeInt : 3
#     INT32    lPosRef : 4
#     UINT16   uiPosRefRem : 6
#     INT32    i64BlshOffsPos : 8
#     INT32    lSpdRef : 12
#     INT32    lCurRef : 14
#     INT32    lSpdFeed : 16
#     INT32    lAccFeed : 18
#     INT32    lSpdLim : 20
#     INT32    lCurLim : 22
#     UINT16   bDoSpeedLimVar2 : 24
#     UINT16   bDoSwitchControlPara : 25
#     UINT16   bDoSpeedIntegralOff : 26
#     UINT16   bDoZeroClamp : 27
#     UINT32   ulActiveInFctBitCoded : 28
#     UINT16   uiBreakMotionActive : 30
#   }
#   struct  FromDrvCtrl {
#     INT32    lPosAct : 32
#     INT32    lITotalAct : 34
#     INT32    lIqAct : 36
#     INT32    lUkzAct : 38
#     UINT16   uiActionWordUser : 40
#     UINT16   uiStatus : 41
#     UINT16   uiUsrStateInfos : 42
#     UINT16   uiCmdRequest : 43
#     UINT16   uiPowerState : 44
#     INT32    iqImax : 46
#     UINT16   uiImaxPerCent : 48
#     INT32    iqImaxQStop : 50
#     INT32    iqImaxHalt : 52
#     UINT32   ulNmax : 54
#     UINT32   ulVelMaxIntern : 56
#     UINT16   bAbPosIsSet : 58
#     UINT16   bEnc1PosIsSet : 59
#     INT32*   iqpUkzFlt : 60
#     INT32*   iqpIqAct : 62
#     INT32*   iqpIqRef : 64
#     INT32*   iqpSpdPrRef : 66
#     INT32*   iqpSpeedRef : 68
#     INT32*   iqpPosRef : 70
#     INT32*   iqpPosDif : 72
#     UINT16   bSelErrIsSet : 74
#     UINT16   bSelWarnIsSet : 75
#     INT32    lRs422InCnt : 76
#     UINT16   uiRs422Fine : 78
#     UINT16   uiRefPulseCalcState : 79
#     INT32    lVelRs422Act_Inc_65536ms : 80
#     INT32    iqSpeedMax : 82
#   }
# };
#
# ============ adc_raw_current (1) ============
# ADC_RAW_STRUCT {
#   UINT16   Hifa_cos1 : 0
#   UINT16   Hifa_sin1 : 1
#   UINT16   Hifa_cos2 : 2
#   UINT16   Hifa_sin2 : 3
#   UINT16   Mot_iu1 : 4
#   UINT16   Mot_iv1 : 5
#   UINT16   Mot_iu2 : 6
#   UINT16   Mot_iv2 : 7
#   UINT16   Analog1 : 8
#   UINT16   Analog2 : 9
#   UINT16   Vref143_A : 10
#   UINT16   Vref143_B : 11
#   UINT16   Supply24V_buff : 12
#   UINT16   Supply24V : 13
#   UINT16   Hifa_10V : 14
#   UINT16   Cpu_temp : 15
# };
#
# ============ adc_raw_minimal (2) ============
# ADC_RAW_STRUCT {
#   UINT16   Hifa_cos1 : 0
#   UINT16   Hifa_sin1 : 1
#   UINT16   Hifa_cos2 : 2
#   UINT16   Hifa_sin2 : 3
#   UINT16   Mot_iu1 : 4
#   UINT16   Mot_iv1 : 5
#   UINT16   Mot_iu2 : 6
#   UINT16   Mot_iv2 : 7
#   UINT16   Analog1 : 8
#   UINT16   Analog2 : 9
#   UINT16   Vref143_A : 10
#   UINT16   Vref143_B : 11
#   UINT16   Supply24V_buff : 12
#   UINT16   Supply24V : 13
#   UINT16   Hifa_10V : 14
#   UINT16   Cpu_temp : 15
# };
#
# ============ adc_raw_maximal (3) ============
# ADC_RAW_STRUCT {
#   UINT16   Hifa_cos1 : 0
#   UINT16   Hifa_sin1 : 1
#   UINT16   Hifa_cos2 : 2
#   UINT16   Hifa_sin2 : 3
#   UINT16   Mot_iu1 : 4
#   UINT16   Mot_iv1 : 5
#   UINT16   Mot_iu2 : 6
#   UINT16   Mot_iv2 : 7
#   UINT16   Analog1 : 8
#   UINT16   Analog2 : 9
#   UINT16   Vref143_A : 10
#   UINT16   Vref143_B : 11
#   UINT16   Supply24V_buff : 12
#   UINT16   Supply24V : 13
#   UINT16   Hifa_10V : 14
#   UINT16   Cpu_temp : 15
# };
#
# ============ CHwlAdc (4) ============
# CHwlAdc_C31x {
#   UINT16   m_uiCalAOffset : 0
#   UINT16   m_uiCalBOffset : 1
#   INT16    m_iSinOffset : 2
#   INT16    m_iCosOffset : 3
#   INT16    m_iHifaVErrCnt : 4
#   UINT16   m_uiCpu_temp : 5
#   UINT16   m_uiVref143_A_avr : 6
#   UINT16   m_uiVref143_B_avr : 7
#   INT16    m_iIuOffset : 8
#   INT16    m_iIvOffset : 9
#   UINT16   m_uiCnt : 10
#   UINT16   m_bInitFinished : 11
#   UINT32   m_ulVref143Sum_A : 12
#   UINT32   m_ulVref143Sum_B : 14
#   UINT32   m_ulSumCpu_temp : 16
#   INT32    m_iqSinCosMeasGain : 18
#   INT32    m_iqHifa10V : 20
#   UINT32   m_ulHifaMonTime : 22
#   INT32    m_iqIuGain : 24
#   INT32    m_iqIvGain : 26
#   INT32    m_iqIuOffset : 28
#   INT32    m_iqIvOffset : 30
#   INT16    m_iCtrlIuOffset : 32
#   INT16    m_iCtrlIvOffset : 33
#   INT32    m_iqIuMeasGain : 34
#   INT32    m_iqIvMeasGain : 36
#   INT16    m_iAna1Offset : 38
#   INT16    m_iAna2Offset : 39
#   UINT16   m_uiAnaInToggle : 40
#   UINT16   m_bDisableOversampling : 41
#   UINT32   m_ulAnaIn1_Sum1 : 42
#   UINT32   m_ulAnaIn1_Sum2 : 44
#   UINT32   m_ulAnaIn2_Sum1 : 46
#   UINT32   m_ulAnaIn2_Sum2 : 48
#   INT32    m_iqAna1Gain : 50
#   INT32    m_iqAna2Gain : 52
#   INT32    m_iqAnaIn1Mean : 54
#   INT32    m_iqAnaIn2Mean : 56
#   INT32    m_iqFolAnaIn1 : 58
#   INT32    m_iqFolAnaIn2 : 60
#   INT32    m_iqPrmAFol1Anain : 62
#   INT32    m_iqPrmBFol1Anain : 64
#   INT32    m_iqPrmAFol2Anain : 66
#   INT32    m_iqPrmBFol2Anain : 68
# };
#
# ============ paramHwInfo (5) ============
# ParamHwInfoStruct {
#   struct  cpu {
#     UINT16   uiType : 0
#     UINT16   uiRevision : 1
#     UINT16   uiFeatures : 2
#     UINT16   uiForceFlag : 3
#   }
#   struct  power {
#     UINT16   uiType : 4
#     UINT16   uiRevision : 5
#     UINT16   uiFeatures : 6
#     UINT16   uiForceFlag : 7
#   }
#   struct  modCom {
#     UINT16   uiType : 8
#     UINT16   uiRevision : 9
#     UINT16   uiFeatures : 10
#     UINT16   uiForceFlag : 11
#   }
#   struct  modEnc {
#     UINT16   uiType : 12
#     UINT16   uiRevision : 13
#     UINT16   uiFeatures : 14
#     UINT16   uiForceFlag : 15
#   }
#   struct  modSlot1 {
#     UINT16   uiType : 16
#     UINT16   uiRevision : 17
#     UINT16   uiFeatures : 18
#     UINT16   uiForceFlag : 19
#   }
#   struct  custom {
#     UINT16   uiType : 20
#     UINT16   uiRevision : 21
#     UINT16   uiFeatures : 22
#     UINT16   uiForceFlag : 23
#   }
# };
#
# ============ paramManu (6) ============
# ParamManuStruct {
#   UINT32   ulMandVendor1 : 0
#   UINT32   ulMandVendor2 : 2
#   UINT32   ulMandVendor3 : 4
#   UINT32   ulMandVendor4 : 6
#   UINT32   ulMandVendor5 : 8
#   UINT32   ulMandMname1 : 10
#   UINT32   ulMandMname2 : 12
#   UINT32   ulMandMname3 : 14
#   UINT32   ulMandMname4 : 16
#   UINT16   uiSinCosGain2 : 18
#   UINT16   uiSinOffset2 : 19
#   UINT16   uiCosOffset2 : 20
#   UINT16   uiIOCPhySel : 21
#   UINT32   dummy2 : 22
#   UINT16   uiImaxPeak4 : 24
#   UINT16   uiInomPeak4 : 25
#   UINT16   uiTHswarn : 26
#   UINT16   uiTHsmax : 27
#   UINT16   uiUkzmax : 28
#   UINT16   uiI2tps_dt : 29
#   UINT16   uiI2tbal_dt : 30
#   UINT16   uiDefpwm : 31
#   UINT16   uiIu_usr_sc : 32
#   UINT16   uiI_sc_uv : 33
#   UINT16   uiUkz_usr_sc : 34
#   UINT16   uiUkzbal_l : 35
#   UINT16   uiUkzbal_h : 36
#   UINT16   uiUkzmin : 37
#   UINT16   uiUkzmin_stop : 38
#   UINT16   uiT_ntc_hs : 39
#   UINT16[] uiTab_ths : 40
#   UINT16[] uiTab_uhs : 48
#   UINT16   uiUmainsH : 56
#   UINT16   uiPhaseLine : 57
#   UINT16   uiDeadband : 58
#   UINT16   uiBalExt_Pmax : 59
#   UINT16   uiBal_Pnom : 60
#   UINT16   uiBal_res : 61
#   UINT16   uiImaxPeak8 : 62
#   UINT16   uiInomPeak8 : 63
#   UINT16   uiTCpumax : 64
#   UINT16   uiT_ntc_cpu : 65
#   UINT16[] uiTab_tcpu : 66
#   UINT16[] uiTab_ucpu : 74
#   UINT16   uiAna1Offset : 82
#   UINT16   uiAna2Offset : 83
#   UINT16   uiThR12 : 84
#   UINT16   uiThR3 : 85
#   UINT16   uiThTau3 : 86
#   UINT16   uiThR4 : 87
#   UINT16   uiThTau4 : 88
#   UINT16   uiThPlos4 : 89
#   UINT16   uiThPlos8 : 90
#   UINT16   uiPnom : 91
#   UINT16   uiDtPmax : 92
#   UINT16   uiUmainsL : 93
#   UINT16   uiUmains_sc : 94
#   UINT16   uiBalResMin : 95
#   UINT16   uiPowerTypeCfg : 96
#   UINT16   uiIuOffset : 97
#   UINT16   uiIvOffset : 98
#   INT16    iBinIoff : 99
#   UINT16   uiSinCosGain : 100
#   UINT16   uiSinOffset : 101
#   UINT16   uiCosOffset : 102
#   UINT16   uiTfan : 103
#   UINT16   uiInomPeak16 : 104
#   UINT16   uiImaxPeak16 : 105
#   UINT16   uiThPlos16 : 106
#   UINT16   uiPowerType : 107
#   UINT16   uiPowerDataRev : 108
#   UINT16   uiProcTrace : 109
#   UINT16   uiProcStatus : 110
#   INT16    iBinIcont : 111
#   INT16    iBinIpeak : 112
#   UINT16   uiBinIcontT : 113
#   UINT16   uiBinIpeakT : 114
#   UINT16   uiBinIbreakT : 115
#   UINT16   uiBinTLEmax : 116
#   UINT16   uiBinCPUmax : 117
#   INT16    iBinSpeedMin : 118
#   INT16    iBinSpeedMax : 119
#   UINT16   uiEnc1OffsetLim : 120
#   UINT16   uiEnc1GainLim : 121
#   UINT16   uiAnaOffsetLim : 122
#   UINT16   uiAnaGainLim : 123
#   UINT16   uiUkzminReduced : 124
#   UINT16   uiUkzmin_stopReduced : 125
#   UINT16   uiPnomChoke : 126
#   UINT16   uiPnomReduced : 127
#   UINT16   uiPnomReducedChoke : 128
#   UINT16   uiImaxPeak4Reduced : 129
#   UINT16   uiInomPeak4Reduced : 130
#   UINT16   uiImaxPeak8Reduced : 131
#   UINT16   uiInomPeak8Reduced : 132
#   UINT16   uiImaxPeak16Reduced : 133
#   UINT16   uiInomPeak16Reduced : 134
#   UINT16   uiLchoke : 135
#   UINT16   uiRchoke : 136
#   UINT16   uiChipTempMax : 137
#   UINT16   uiAna1Gain : 138
#   UINT16   uiAna2Gain : 139
#   UINT32   ulMandPname1 : 140
#   UINT32   ulMandPname2 : 142
#   UINT32   ulMandPname3 : 144
#   UINT32   ulMandPname4 : 146
#   INT16    iIcalib : 148
#   UINT16   uiIuvOffsetLim : 149
#   UINT16   uiIuScaleMin : 150
#   UINT16   uiIuScaleMax : 151
#   UINT32   ulMandSernum1 : 152
#   UINT32   ulMandSernum2 : 154
#   UINT32   ulMandSernum3 : 156
#   UINT32   ulMandSernum4 : 158
#   UINT32   ulMandPrCoEAN1 : 160
#   UINT32   ulMandPrCoEAN2 : 162
#   UINT32   ulMandPrCoEAN3 : 164
#   UINT32   ulMandPrCoEAN4 : 166
#   UINT16   uiForceModuleSlot : 168
#   UINT16   uiForceModuleType : 169
#   UINT16   uiIuvGainLim : 170
#   UINT16   uiBinIcheckFact : 171
#   UINT16   uiForceModuleRev : 172
#   UINT16   uiActivateModSup : 173
#   UINT16   uiPowerFeatures : 174
#   UINT16   uiUkzPowerUp : 175
#   UINT16   uiUkzPowerDown : 176
#   UINT16   uiUkzPowerUpReduced : 177
#   UINT16   uiUkzPowerDownReduced : 178
#   UINT16   END_OF_CPU_BLOCK_START_OF_POWER_BLOCK : 179
#   UINT16   END_OF_POWER_BLOCK : 180
#   UINT16[] uiEmptySpace : 181
# };
#
# ============ paramNoInit (7) ============
# ParamNoInitStruct {
#   UINT32   ulEncPosOffset : 0
# };
#
# ============ paramUser (8) ============
# ParamUserStruct {
#   UINT16   uiCompatibility : 0
#   UINT16   uiDcomSmcomp : 1
#   UINT16   uiPwmFreq : 2
#   UINT16   uiProtectedHMI : 3
#   UINT16   uiSupervisorVal : 4
#   UINT16   uiIOAutoEnable : 5
#   UINT16   uiDeviceIoGearMode : 6
#   UINT16   uiMotionSpvPosDeviat : 7
#   UINT16   uiMotionSpvCurrVal : 8
#   UINT16   uiMotionSpvChkWinTime : 9
#   UINT16   uiPosWinTime : 10
#   UINT16   uiPosWin : 11
#   INT32    lMotionNormPosNum : 12
#   INT32    lMotionNormPosDenom : 14
#   INT32    lMotionScalSpeedNum : 16
#   INT32    lMotionScalSpeedDenom : 18
#   UINT32   ulMotionUpRamp0 : 20
#   UINT32   ulMotionDownRamp0 : 22
#   UINT32   ulMotionQuStopRamp : 24
#   UINT16   uiJerkFilter : 26
#   UINT16   uiAxisType : 27
#   UINT16   uiMotionSpeedWinTime : 28
#   UINT16   uiGearPosChgMode : 29
#   UINT16   uiMotionEnaSwLim : 30
#   UINT16   uiMotionHomingReq : 31
#   INT32    lMotionSwLimN : 32
#   INT32    lMotionSwLimP : 34
#   UINT16   uiMotionSigRef : 36
#   UINT16   uiMotionSigLimN : 37
#   UINT16   uiMotionSigLimP : 38
#   INT16    iMotionHaltReaction : 39
#   INT16    iMotionQStopReaction : 40
#   UINT16   uiMotionPwinTout : 41
#   INT32    lGearDenom : 42
#   INT32    lGearNum : 44
#   UINT16   uiGearResGear : 46
#   UINT16   uiGearDirEnable : 47
#   UINT32   ulHomeSpeedToRef : 48
#   INT32    lHomePosOutRef : 50
#   INT32    lHomePosDistRef : 52
#   INT32    lHomeRefAppPos : 54
#   INT32    lHomePosSrchLimMax : 56
#   UINT32   ulManPosSpeedSlow : 58
#   INT32    lManPosStepPosDist : 60
#   UINT16   uiManPosStepWaitTime : 62
#   UINT16   uiModuloAbsHandling : 63
#   UINT16   uiDatSetGlobalCond : 64
#   UINT16   uiSupUmainsWait : 65
#   INT32    lPdifMax : 66
#   UINT16   uiErrVolt : 68
#   UINT16   uiFltpdiff : 69
#   UINT16   uiMainsMon : 70
#   UINT16   uiGndShortMon : 71
#   UINT16   uiSupComm : 72
#   INT16    iTBrakeOff : 73
#   UINT32   ulInertiaSystem : 74
#   INT16    iTBrakeOn : 76
#   UINT16   uiExtHmiLanguage : 77
#   INT32    lGearDenom2 : 78
#   INT32    lGearNum2 : 80
#   UINT16   uiIoRs422Invert : 82
#   UINT16   uiMotionCurrLimVar2 : 83
#   INT32    lGearOffset1 : 84
#   INT32    lGearOffset2 : 86
#   UINT16   uiExtBalOn : 88
#   UINT16   uiExtBalDt : 89
#   UINT16   uiExtBalPnom : 90
#   UINT16   uiExtBalRes : 91
#   UINT16   uiCtrlgImaxQstop : 92
#   UINT16   uiCtrlgImaxHalt : 93
#   UINT16   uiIMaxUsr : 94
#   UINT16   uiPdifWarn : 95
#   UINT16   uiSelError1 : 96
#   UINT16   uiSelError2 : 97
#   UINT16   uiSelWarn1 : 98
#   UINT16   uiSelWarn2 : 99
#   INT16    iSaveHomingMethod : 100
#   UINT16   uiEnaSpdProf : 101
#   UINT32   ulRampCurr : 102
#   UINT16   uiEnaCurProf : 104
#   UINT16   uiMsmStopSingleDataSet : 105
#   UINT16   uiMsmLeaveNoTransition : 106
#   UINT16   uiAddFaultResOnEnaInp : 107
#   UINT16   ui__Dummy_108__ : 108
#   UINT16   uiCPFastSpeedLim : 109
#   INT16    i__Dummy_110__ : 110
#   INT16    i__Dummy_111__ : 111
#   UINT16   uiFltAnaOut : 112
#   UINT16   ui__Dummy_113__ : 113
#   UINT16   ui__Dummy_114__ : 114
#   INT16    i__Dummy_115__ : 115
#   INT16    i__Dummy_116__ : 116
#   UINT16   uiMechVar8 : 117
#   UINT16   uiModuloMovOvr : 118
#   UINT16   uiMotionTorqWin : 119
#   UINT16   uiMotionTorqWinTime : 120
#   UINT16   uiEnaAbsPosOver : 121
#   UINT16   uiOpmChgType : 122
#   INT16    iDE_errClass : 123
#   INT16    iME_errClass : 124
#   UINT16   uiMotionSigLimMode : 125
#   INT32    lPosRegCh3PA : 126
#   INT32    lPosRegCh3PB : 128
#   INT32    lEncMachinePdiffLim : 130
#   UINT16   uiMechVar7 : 132
#   UINT16   uiMotionModeSwitch : 133
#   INT32    lMotionScalRampNum : 134
#   INT32    lMotionScalRampDenom : 136
#   UINT32   ulMotionSpeedLimProf : 138
#   UINT32   ulMotionSpeedWin : 140
#   UINT32   ulMotionSpvSpdDeviat : 142
#   UINT32   ulMotionSpvSpdVal : 144
#   UINT32   ulMotionSpeedLimVar2 : 146
#   UINT32   ulMotionSpdZeroClmp : 148
#   UINT32   ul__Dummy_150__ : 150
#   INT32    l__Dummy_152__ : 152
#   UINT32   ul__Dummy_154__ : 154
#   INT32    l__Dummy_156__ : 156
#   UINT32   ulNMaxUsr : 158
#   UINT32   ulHomeSpeedOutRef : 160
#   UINT32   ulManPosSpeedFast : 162
#   INT16    iMotionUsrPMf : 164
#   INT16    iMotionUsrPPu : 165
#   INT16    iMotionUsrVMf : 166
#   INT16    iMotionUsrVPu : 167
#   INT16    iMotionUsrAMf : 168
#   INT16    iMotionUsrAPu : 169
#   UINT16   uiDeviceIoJogMode : 170
#   UINT16   uiMechVar6 : 171
#   UINT32   ulGearOffsRamp : 172
#   UINT32   ulGearOffsVelTarget : 174
#   UINT16   uiPosRegCh1Mode : 176
#   UINT16   uiPosRegCh2Mode : 177
#   UINT16   uiPosRegCh1Source : 178
#   UINT16   uiPosRegCh2Source : 179
#   INT32    lPosRegCh1PA : 180
#   INT32    lPosRegCh1PB : 182
#   INT32    lPosRegCh2PA : 184
#   INT32    lPosRegCh2PB : 186
#   UINT16   uiErrI2tBal100 : 188
#   UINT16   uiQuasiAbs : 189
#   INT32    lModuloRngMin : 190
#   INT32    lModuloRngMax : 192
#   UINT16   uiGearJerkFilterUsage : 194
#   UINT16   uiMechVar5 : 195
#   INT32    lPdifMaxUsr : 196
#   INT32    lMotionSpvPosDeviatUsr : 198
#   INT32    lPosWinUsr : 200
#   INT32    lPosRegCh4PA : 202
#   INT32    lPosRegCh4PB : 204
#   UINT16   uiPosRegCh3Source : 206
#   UINT16   uiPosRegCh4Source : 207
#   UINT16   uiPosRegCh3Mode : 208
#   UINT16   uiPosRegCh4Mode : 209
#   UINT16   uiMechVar4 : 210
#   UINT16   uiMechVar3 : 211
#   UINT16   uiMechVar2 : 212
#   UINT16   uiMechVar1 : 213
#   INT32    lDistStopPosition : 214
#   INT32    lDistStopVelocityUser : 216
#   UINT16   uiDistStopReaction : 218
#   UINT16   uiDistStopSignalType : 219
#   UINT16   uiInternalLimitActive : 220
#   UINT16   uiStatusMapping : 221
#   UINT32   ulGearVelOutMax : 222
#   UINT16   uiWakesGain : 224
#   UINT16   uiMsmImmediate : 225
#   INT32    lDummy_226 : 226
#   UINT32   ulPrgNr : 228
#   UINT16   uiVersion : 230
#   UINT16   uiRevision : 231
#   UINT16   uiIgnQSOptCode : 232
#   INT16    i__Dummy_233__ : 233
#   UINT16   uiIoEnableMode : 234
#   UINT16   uiPosRegGroupStart : 235
# };
#
# ============ paramUserNoReset (9) ============
# ParamUserNoResetStruct {
#   UINT16   uiCompatibility : 0
#   UINT16   ui__Dummy_2__ : 1
#   UINT16   uiProgVers : 2
#   UINT16   uiParamUserSaveDone : 3
#   UINT16   uiDeviceDevControl : 4
#   UINT16   uiInvDir : 5
#   UINT16   uiDeviceIoDefaultMode : 6
#   UINT16   uiSerMbBaud : 7
#   UINT16   uiSerMbAdr : 8
#   UINT16   uiSerMbFormat : 9
#   UINT16   uiSerWordMod : 10
#   UINT16   uiIoLiInvert : 11
#   UINT16   uiIoLoInvert : 12
#   UINT16   uiShiftEncPosRange : 13
#   UINT16   uiEncCtrl : 14
#   UINT16   uiReserved : 15
#   UINT32   ulTypeMConfig : 16
#   UINT16   uiIofFuncDi0 : 18
#   UINT16   uiIofFuncDi1 : 19
#   UINT16   uiIofFuncDi2 : 20
#   UINT16   uiIofFuncDi3 : 21
#   UINT16   uiIofFuncDi4 : 22
#   UINT16   uiIofFuncDi5 : 23
#   UINT16   uiReserved_1 : 24
#   UINT16   uiReserved_2 : 25
#   UINT16   uiIofFuncDq0 : 26
#   UINT16   uiIofFuncDq1 : 27
#   UINT16   uiIofFuncDq2 : 28
#   UINT16   uiIofFuncDq3 : 29
#   UINT16   uiIofFuncDq4 : 30
#   UINT16   uiReserved_3 : 31
#   UINT16   uiDeviceEsimScale : 32
#   UINT16   uiDeviceEsimActivate : 33
#   UINT16   uiDeviceRs422IoMode : 34
#   UINT16   uiMainsChoke : 35
#   UINT16   uiEnc2type : 36
#   UINT16   uiFbusIocInhibitTime : 37
#   UINT32   ulUserAppName1 : 38
#   UINT32   ulUserAppName2 : 40
#   UINT32   ulUserAppName3 : 42
#   UINT32   ulUserAppName4 : 44
#   UINT16   uiIoDI0Debounce : 46
#   UINT16   uiIoDI1Debounce : 47
#   UINT16   uiIoDI2Debounce : 48
#   UINT16   uiIoDI3Debounce : 49
#   UINT16   uiIoDI4Debounce : 50
#   UINT16   uiIoDI5Debounce : 51
#   UINT16   uiMotEncSerialNumber1 : 52
#   UINT16   uiMotEncSerialNumber2 : 53
#   UINT16   uiMotEncSerialNumber3 : 54
#   UINT16   uiMotEncSerialNumber4 : 55
#   UINT16   uiMotEncSerialNumber5 : 56
#   UINT16   uiAppDataAddress : 57
#   UINT32   ulUserPositionOffset : 58
#   UINT32   ulUserPositionOffsetRevolutions : 60
#   UINT16   uiActivateHiddenMtp : 62
#   UINT16   uiAbsPosEncSource : 63
#   UINT32   ulParamPassw : 64
#   UINT16   ui__Dummy_66__ : 66
#   UINT16   uiModeEncMachine : 67
#   UINT16   uiSSIMultiturnResolution : 68
#   UINT16   uiSSICoding : 69
#   UINT16   Reserved : 70
#   UINT16   uiDigEncPowerSupply : 71
#   UINT16   uiAnaEncPowerSupply : 72
#   UINT16   uiSSIMaxFreq : 73
#   UINT16   uiABIMaxFreq : 74
#   UINT16   uiHmiEthFsuSuppress : 75
#   INT32    lPosOverflowMotRaw : 76
#   INT32    lPosOverflowMachRaw : 78
#   INT32    lPosOverflowMotInt : 80
#   INT32    lPosOverflowMachInt : 82
#   INT32    lABIMaxIndexTravel : 84
#   INT32    lEncMachineDenom : 86
#   INT32    lEncMachineNum : 88
#   UINT16   uiInvDirEncMachine : 90
#   UINT16   uiForceMtpRead : 91
#   UINT32   ulUserPositionOffset2 : 92
#   UINT32   ulUserPositionOffset2Revolutions : 94
#   UINT16   uiSSISingleturnResolution : 96
#   UINT16   ui__Dummy_97__ : 97
#   UINT16   uiBISSSingleturnResolution : 98
#   UINT16   uiBISSMultiturnResolution : 99
#   UINT16   uiBISSCoding : 100
#   UINT16   uiDCbusCompat : 101
#   INT32    lSinCosMaxIndexTravel : 102
#   UINT16   uiPTIFilterTime : 104
#   UINT16   uiResMultiUsed : 105
#   UINT16   uiLXMATVUdcBal : 106
#   UINT16   uiLXMATVUdcMax : 107
#   UINT16   uiAnalogOutputsType : 108
#   UINT16   uiAo11Mode : 109
#   UINT16   uiAo11CurrSet : 110
#   UINT16   uiAo11Inversion : 111
#   UINT16   uiAo12Mode : 112
#   UINT16   uiAo12CurrSet : 113
#   UINT16   uiAo12Inversion : 114
#   UINT16   uiDi1XInv : 115
#   UINT16   uiDq1XInv : 116
#   UINT16   uiDi10Debounce : 117
#   UINT16   uiDi11Debounce : 118
#   UINT16   uiDi12Debounce : 119
#   UINT16   uiDi13Debounce : 120
#   UINT16   uiIoFuncDi10 : 121
#   UINT16   uiIoFuncDi11 : 122
#   UINT16   uiIoFuncDi12 : 123
#   UINT16   uiIoFuncDi13 : 124
#   UINT16   uiIoFuncDq10 : 125
#   UINT16   uiIoFuncDq11 : 126
#   UINT16   uiAna1Tau : 127
#   UINT16   uiAna2Tau : 128
#   UINT16   uiAna2Mode : 129
#   UINT16   uiAna2LimCurr : 130
#   UINT16   uiAna2ZeroWin : 131
#   INT16    iAna2Offset : 132
#   INT16    iAna2IScal : 133
#   UINT16   uiAna1Mode : 134
#   UINT16   uiAna1LimCurr : 135
#   UINT16   uiAna1ZeroWin : 136
#   INT16    iAna1Offset : 137
#   INT16    iAna1IScal : 138
#   UINT16   ui__Dummy_139__ : 139
#   UINT32   ulAna1LimSpeed : 140
#   INT32    lAna1NScal : 142
#   UINT32   ulAna2LimSpeed : 144
#   INT32    lAna2NScal : 146
#   UINT32   ulDeviceEsimScaleHigh : 148
#   UINT32   ulSerMbBaud : 150
#   UINT16   uiBacklashMode : 152
#   UINT16   uiBacklashCorrTimeMs : 153
#   UINT32   lBacklashCorrPosUsr : 154
#   UINT16   uiAna2Win : 156
#   UINT16   uiAna2WinTime : 157
#   UINT16   uiAna2MinAccDec : 158
#   UINT16   ui__Dummy_159__ : 159
# };
#
# ============ paramMotor (10) ============
# ParamMotorStruct {
#   UINT16[] auiWord : 0
# };
#
# ============ paramPower (11) ============
# ParamPowerFailStruct {
#   INT16    iPosActMotUpper : 0
#   UINT16   uiLength : 1
#   UINT32   ulDiagOprHrCtr : 2
#   UINT32   ulDiagPowUpCnt : 4
#   UINT16   uiErrListPtr : 6
#   UINT16   uiErrListCnt : 7
#   UINT16   uiConfFilesCRC : 8
#   UINT16   uiCtrlBits : 9
#   INT32    lMassOffs1 : 10
#   INT32    lMassOffs2 : 12
#   INT16    iPosActMachUpper : 14
#   UINT16   uiCRC : 15
# };
#
# ============ paramCtrlG (12) ============
# ParamCtrlGlobStruct {
#   UINT16   uiKpIdUsr : 0
#   UINT16   uiKpIqUsr : 1
#   UINT16   uiTnIdUsr : 2
#   UINT16   uiTnIqUsr : 3
#   UINT16   uiIFluxWeak : 4
#   UINT16   uiZeroCoNRefUsr : 5
#   UINT16   uiTaunact : 6
#   UINT16   uiAccFfdGainUsr : 7
#   UINT16   uiNPidDT1Dpart : 8
#   UINT16   uiNPidDT1Time : 9
#   UINT16   uiTParaSwitch : 10
#   UINT16   uiGlobGain : 11
#   UINT16   uiParaSetCmdPers : 12
#   UINT16   uiDummy20 : 13
#   UINT16   uiParaSwitchCond : 14
#   UINT16   uiParaSetWinTime : 15
#   UINT16   uiParaSetPdif : 16
#   UINT16   uiDummy19 : 17
#   UINT16   uiDummy21 : 18
#   UINT16   uiDummy22 : 19
#   UINT16   uiDummy23 : 20
#   UINT16   uiDummy24 : 21
#   UINT32   ulSpeedFric : 22
#   UINT32   ulParaSetSpeed : 24
#   UINT16   uiSpdObsActive : 26
#   UINT16   uiSpdObsDynamic : 27
#   UINT32   ulSpdObsInertia : 28
#   INT32    lParaSetPdifUsr : 30
# };
#
# ============ paramCtrlS1 (13) ============
# ParamCtrlSetStruct {
#   UINT16   uiKpSpeedUsr : 0
#   UINT16   uiTnSpeedUsr : 1
#   UINT16   uiTauNRefUsr : 2
#   UINT16   uiOSupDampNUsr : 3
#   UINT16   uiOSupDelayNUsr : 4
#   UINT16   uiKPpUsr : 5
#   UINT16   uiKFPpUsr : 6
#   UINT16   uiTauIRefUsr : 7
#   UINT16   uiFrq1Usr : 8
#   UINT16   uiDamp1Usr : 9
#   UINT16   uiBandWidth1Usr : 10
#   UINT16   uiGainFric : 11
#   UINT16   uiFrq2Usr : 12
#   UINT16   uiDamp2Usr : 13
#   UINT16   uiBandWidth2Usr : 14
#   UINT16   ui_last_entry_not_even : 15
# };
#
# ============ paramCtrlS2 (14) ============
# ParamCtrlSetStruct {
#   UINT16   uiKpSpeedUsr : 0
#   UINT16   uiTnSpeedUsr : 1
#   UINT16   uiTauNRefUsr : 2
#   UINT16   uiOSupDampNUsr : 3
#   UINT16   uiOSupDelayNUsr : 4
#   UINT16   uiKPpUsr : 5
#   UINT16   uiKFPpUsr : 6
#   UINT16   uiTauIRefUsr : 7
#   UINT16   uiFrq1Usr : 8
#   UINT16   uiDamp1Usr : 9
#   UINT16   uiBandWidth1Usr : 10
#   UINT16   uiGainFric : 11
#   UINT16   uiFrq2Usr : 12
#   UINT16   uiDamp2Usr : 13
#   UINT16   uiBandWidth2Usr : 14
#   UINT16   ui_last_entry_not_even : 15
# };
#
# ============  (15) ============
# CHwlDSPtoPower {
#   struct  DSS_DspPower {
#     ???      uiCmdtoPower : 0
#     ???      uiIdtoPower : 1
#     UINT16   uiVDC : 2
#     UINT16   uiTemperatur : 3
#     UINT16   uiVL1 : 4
#     UINT16   uiVL2 : 5
#     UINT16   uiVL3 : 6
#     UINT16   uiStateFromPower : 7
#     UINT16   bIsDataOk : 8
#     UINT32   errCode : 10
#     UINT16   uiErrorLatch : 12
#   }
#   struct  DSS_DataIdent {
#     UINT16   IdentLength : 14
#     UINT16   PowerStageType : 15
#     UINT16   HardwareRevision : 16
#     UINT16   Features : 17
#     UINT16   SoftwareVersion : 18
#     UINT16   SerialNumberW4 : 19
#     UINT16   SerialNumberW3 : 20
#     UINT16   SerialNumberW2 : 21
#     UINT16   SerialNumberW1 : 22
#     UINT16   uiDummy1 : 23
#     UINT16   uiDummy2 : 24
#     UINT16   uiDummy3 : 25
#     UINT16   uiDummy4 : 26
#     UINT16   Checksum : 27
#   }
#   UINT16[] m_uiRxFiFo : 28
#   struct  m_uiRxFiFoWritePtr {
#     UINT16   cnt : 60
#   }
#   struct  m_uiRxFiFoReadPtr {
#     UINT16   cnt : 61
#   }
#   UINT16   m_uiState : 62
#   UINT16   m_uiConnectTimeout : 63
#   UINT16   m_ui62Cnt : 64
#   UINT16   m_uiIdentAdr : 65
#   UINT16   m_uiIdentCycle : 66
#   UINT16   m_uiLessBytes : 67
#   UINT16   m_uiIdentCycleNo : 68
#   UINT16   m_uiIdentChecksum : 69
#   UINT16   m_uiPSDataSize : 70
#   UINT16   m_uiCnt : 71
#   UINT16   m_b62Part1IsSync : 72
#   UINT32   m_ulSumPsTemp : 74
#   INT32    m_iqUkzMeasGain : 76
#   unknown* m_pCom : 78
#   UINT16*  m_puiDataAdr : 80
# };
#
# ============ detectedHwInfo (16) ============
# DetectedHwInfoStruct {
#   struct  modCom {
#     UINT16   uiType : 0
#     UINT16   uiRevision : 1
#     UINT16   uiFeatures : 2
#     UINT16   uiForceFlag : 3
#   }
#   struct  modEnc {
#     UINT16   uiType : 4
#     UINT16   uiRevision : 5
#     UINT16   uiFeatures : 6
#     UINT16   uiForceFlag : 7
#   }
#   struct  modSlot1 {
#     UINT16   uiType : 8
#     UINT16   uiRevision : 9
#     UINT16   uiFeatures : 10
#     UINT16   uiForceFlag : 11
#   }
# };
#
# ============ CDrive (17) ============
# CDrive {
#   struct  __b_CBasDrive {
#     struct  __b_CBasComponent {
#       unknown* __vptr : 0
#     }
#     struct  ToDrvCtrl {
#       UINT16   uiOpmRequest : 2
#       UINT16   uiAxModeInt : 3
#       INT32    lPosRef : 4
#       UINT16   uiPosRefRem : 6
#       INT32    i64BlshOffsPos : 8
#       INT32    lSpdRef : 12
#       INT32    lCurRef : 14
#       INT32    lSpdFeed : 16
#       INT32    lAccFeed : 18
#       INT32    lSpdLim : 20
#       INT32    lCurLim : 22
#       UINT16   bDoSpeedLimVar2 : 24
#       UINT16   bDoSwitchControlPara : 25
#       UINT16   bDoSpeedIntegralOff : 26
#       UINT16   bDoZeroClamp : 27
#       UINT32   ulActiveInFctBitCoded : 28
#       UINT16   uiBreakMotionActive : 30
#     }
#     struct  FromDrvCtrl {
#       INT32    lPosAct : 32
#       INT32    lITotalAct : 34
#       INT32    lIqAct : 36
#       INT32    lUkzAct : 38
#       UINT16   uiActionWordUser : 40
#       UINT16   uiStatus : 41
#       UINT16   uiUsrStateInfos : 42
#       UINT16   uiCmdRequest : 43
#       UINT16   uiPowerState : 44
#       INT32    iqImax : 46
#       UINT16   uiImaxPerCent : 48
#       INT32    iqImaxQStop : 50
#       INT32    iqImaxHalt : 52
#       UINT32   ulNmax : 54
#       UINT32   ulVelMaxIntern : 56
#       UINT16   bAbPosIsSet : 58
#       UINT16   bEnc1PosIsSet : 59
#       INT32*   iqpUkzFlt : 60
#       INT32*   iqpIqAct : 62
#       INT32*   iqpIqRef : 64
#       INT32*   iqpSpdPrRef : 66
#       INT32*   iqpSpeedRef : 68
#       INT32*   iqpPosRef : 70
#       INT32*   iqpPosDif : 72
#       UINT16   bSelErrIsSet : 74
#       UINT16   bSelWarnIsSet : 75
#       INT32    lRs422InCnt : 76
#       UINT16   uiRs422Fine : 78
#       UINT16   uiRefPulseCalcState : 79
#       INT32    lVelRs422Act_Inc_65536ms : 80
#       INT32    iqSpeedMax : 82
#     }
#   }
#   unknown* m_theSpeQStopHalt : 84
#   struct  DeltaParaSwitch {
#     INT32    iqCurrPT1PrmA : 86
#     INT32    iqCurrPT1PrmB : 88
#     INT32    iqLeadLagPrmA : 90
#     INT32    iqLeadLagPrmB : 92
#     INT32    iqKpSpeed : 94
#     INT32    iqKiSpeed : 96
#     INT32    iqKpp : 98
#     INT32    iqKppRecFrac : 100
#     INT32    iqSpdFfdCo : 102
#   }
#   struct  DeltaParaSetSwitch {
#     INT32    iqCurrPT1PrmA : 104
#     INT32    iqCurrPT1PrmB : 106
#     INT32    iqLeadLagPrmA : 108
#     INT32    iqLeadLagPrmB : 110
#     INT32    iqKpSpeed : 112
#     INT32    iqKiSpeed : 114
#     INT32    iqKpp : 116
#     INT32    iqKppRecFrac : 118
#     INT32    iqSpdFfdCo : 120
#   }
#   struct  DeltaParaSetSwitch2_1 {
#     INT32    iqCurrPT1PrmA : 122
#     INT32    iqCurrPT1PrmB : 124
#     INT32    iqLeadLagPrmA : 126
#     INT32    iqLeadLagPrmB : 128
#     INT32    iqKpSpeed : 130
#     INT32    iqKiSpeed : 132
#     INT32    iqKpp : 134
#     INT32    iqKppRecFrac : 136
#     INT32    iqSpdFfdCo : 138
#   }
#   UINT16   m_uiCtrlReg : 140
#   UINT16   m_uiCtrlSave : 141
#   UINT16   m_uiInvDir : 142
#   UINT16   m_uiStatusReg : 143
#   UINT16   m_uiStatus2Reg : 144
#   UINT16   m_uiMonMaskReg : 145
#   UINT16   m_uiNonUsrParamBitMask : 146
#   UINT16   m_uiUsrParamBitMask : 147
#   UINT32   m_uiUsrRevInConsistFlag : 148
#   UINT16   m_uiFreqSinUsr : 150
#   INT32    m_iqMagSin : 152
#   INT32    m_iqAglVoltVec : 154
#   INT32    m_iqMagVoltVec : 156
#   UINT16   m_uiSetActive : 158
#   UINT16   m_bFlagSwitchingInProcess : 159
#   UINT16   m_bFlagSwitchCondition : 160
#   UINT16   m_uiParaRescale : 161
#   INT32    m_lInCountParaSetWinTime : 162
#   INT32    m_lOutCountParaSetWinTime : 164
#   INT32    m_lParaSetPdif : 166
#   INT32    m_iqParaSetSpeed : 168
#   UINT16   m_uiTauNRefUsr100 : 170
#   UINT16   m_uiKpSpeedUsr100 : 171
#   UINT16   m_uiTnSpeedUsr100 : 172
#   UINT16   m_uiKPpUsr100 : 173
#   UINT16   m_uiTnSpeedUsr100NoIO : 174
#   UINT16   m_uiGlobGainOld : 175
#   UINT16[] m_uiTnSpeedUsrAct : 176
#   struct  PosCtrl {
#     INT32[]  m_iqSpdFfdCo : 178
#     INT32[]  m_iqKpp : 184
#     INT32[]  m_iqKppRecFrac : 190
#     INT32    m_iqPosActForPosCtrl : 196
#     INT32    m_iqPos_man : 198
#     INT32    m_iqPosDif : 200
#     INT32    m_iqPosRef : 202
#     INT32    m_iqPosAxf : 204
#     INT32    m_iqSpdPrRef : 206
#     INT32    m_iqSpeedPosCtrl : 208
#     INT32    m_iqAccFfdTerm : 210
#     INT32[]  m_iqGainAccFfdSpeed : 212
#     unknown* __vptr : 216
#   }
#   struct  Parascal {
#     unknown* __vptr : 218
#   }
#   struct  Statem {
#     UINT16   m_ulEnableDisableState : 220
#     UINT16   m_uiDriveEnable : 221
#     UINT16   m_uiDriveDisable : 222
#     UINT16   m_uiTripForced : 223
#     UINT16   m_bPwmChg1Flg : 224
#     UINT16   m_bQepChgFlg : 225
#     INT32    m_uiPwm1Prd : 226
#     INT32    m_uiQepPrd : 228
#     UINT16   m_uiEnaTimeSmp : 230
#     UINT16   m_uiDisTimeSmp : 231
#     INT32    m_iqHalfT1Per : 232
#     UINT16   m_uiTTick1msSmp : 234
#   }
#   struct  SpdCtrl {
#     struct  LeadLag {
#       struct  PT1part {
#         INT32    m_iqOutput : 236
#         INT32[]  m_iqPrmA : 238
#         INT32[]  m_iqPrmB : 244
#       }
#       INT32    m_iqOutput : 250
#       INT32    m_iqPrmK : 252
#       INT32[]  m_iqOutputLim : 254
#     }
#     struct  PidDT1part {
#       struct  PT1part {
#         INT32    m_iqOutput : 258
#         INT32    m_iqPrmA : 260
#         INT32    m_iqPrmB : 262
#       }
#       INT32    m_iqOutput : 264
#       INT32    m_iqLimit : 266
#       INT32    m_iqPrmK : 268
#     }
#     struct  OSup {
#       INT32    m_iqOutput : 270
#       INT32[]  m_iqDampRatio : 272
#       UINT16[] m_uiDelayTime : 276
#       UINT16   m_uiIdx : 278
#       INT32*   m_piqLoopMem : 280
#       UINT16   m_bFilterActive : 282
#     }
#     INT32[]  m_iqKpSpeed : 284
#     INT32[]  m_iqKiSpeed : 290
#     INT32    m_iqSpeedInteg : 296
#     INT32[]  m_iqIqFricMax : 298
#     INT32    m_iqSpeedRef : 302
#     INT32    m_iqSpeedDif : 304
#     INT32    m_iqYSpeed : 306
#     INT32    m_iqSpeedPpart : 308
#     INT32    m_iqSpeed_man : 310
#     INT32    m_iqSpdLim : 312
#     INT32    m_iqIqSpeedLimRef : 314
#     INT32    m_iqAccFfdTerm : 316
#     UINT16   m_bSwitchAccFfd : 318
#     INT32    m_iqGainAccFfdCurrent : 320
#     INT32    m_iqAccFfdLim : 322
#     INT32    m_iqIqRefCtrl : 324
#     UINT16   m_uiLimitFlg : 326
#     INT32    m_iqSpeedAxf : 328
#     INT32    m_iqSpeedFricConstInv : 330
#     INT32    m_iqSpeedFricConst : 332
#     INT32    m_iqIqFricTerm : 334
#     INT32    m_iqSpeedZeroClampHigh : 336
#     INT32    m_iqSpeedZeroClampLow : 338
#     UINT16   m_uiResetSpeedInteg : 340
#     INT32[]  m_plSpdMem : 342
#     UINT16   m_uiFilterFlushDone : 942
#   }
#   struct  Sensors {
#     INT32    m_iqEpsE_b : 944
#     UINT32   m_ulSetPosEncUsr : 946
#     INT32    m_iqUkzFlt : 948
#     INT32    m_iqIu : 950
#     INT32    m_iqIv : 952
#     INT32    m_iqIuUse : 954
#     INT32    m_iqIvUse : 956
#     INT32    m_iqIalpha : 958
#     INT32    m_iqIbeta : 960
#     INT32    m_iqIqActExport : 962
#     INT32    m_iqIdAct : 964
#     INT32    m_iqIqAct : 966
#     INT32    m_iqImag1ms : 968
#     INT32    m_iqImagSquared1ms : 970
#     INT32    m_iqIqActOld125 : 972
#     INT32    m_iqIqActOld : 974
#     INT32    m_iqIuSum : 976
#     INT32    m_iqIvSum : 978
#     INT32    m_iqIuMean : 980
#     INT32    m_iqIvMean : 982
#     INT32    m_iqEpsE : 984
#     INT32    m_iqEpsEExtra : 986
#     INT32    m_iqCosEpsE : 988
#     INT32    m_iqSinEpsE : 990
#     INT32    m_iqEpsE_man : 992
#     INT32    m_iqOmega_man : 994
#     UINT16   m_bFlagCalibCurrent : 996
#     unknown* __vptr : 998
#   }
#   struct  Monitoring {
#     struct  I2tSmoothPT1 {
#       INT32    m_iqOutput : 1000
#       INT32    m_iqPrmA : 1002
#       INT32    m_iqPrmB : 1004
#     }
#     INT32    m_iqSmoothBalance : 1006
#     UINT16   m_uiI2tSmoothCnt : 1008
#     INT32    m_iqPdifPeak : 1010
#     UINT16   m_uiPsImax : 1012
#     UINT16   m_uiPsInom : 1013
#     INT32    m_iqSpeedMax : 1014
#     INT32    m_iqIdLim : 1016
#     INT32    m_iqUkzMax : 1018
#     INT32    m_iqUkzMin : 1020
#     INT32    m_iqUkzQstop : 1022
#     UINT16   m_uiIMaxSysApk : 1024
#     UINT16   m_uiImaxSysPerCent : 1025
#     UINT16   m_uiBalBurnIn : 1026
#     INT32    m_iqI2tBal : 1028
#     INT32    m_iqI2tBalLim : 1030
#     INT32    m_iqI2tBalLim75 : 1032
#     INT32    m_iqLoadFactRes : 1034
#     INT32    m_iqI2tBalCatch_Lt : 1036
#     INT32    m_iqI2tBalCatch : 1038
#     INT32    m_iqKiBal : 1040
#     INT32    m_iqIOn2Bal : 1042
#     INT32    m_iqInom2Bal : 1044
#     INT32    m_iqBresUlimRec : 1046
#     INT32    m_iqIOn2RelBal : 1048
#     INT32    m_iqIactRelBal : 1050
#     UINT16   m_uiWaitTime : 1052
#     INT32    m_iqI2tBalFanSwitch : 1054
#     INT32    m_iqIon2BalAct : 1056
#     INT32    m_iqIon2RelBalAct : 1058
#     INT32    m_iqUkzBalH : 1060
#     INT32    m_iqUkzBalL : 1062
#     UINT16   m_uiBallastCnt : 1064
#     INT16    m_iBalWarnLim : 1065
#     INT32    m_iqI2tMot : 1066
#     INT32    m_iqI2tMotMax : 1068
#     INT32    m_iqIact2RelMot : 1070
#     INT32    m_iqI2MotDiff : 1072
#     INT32    m_iqLoadFactMot : 1074
#     INT32    m_iqI2tMotCatch_Lt : 1076
#     INT32    m_iqI2tMotCatch : 1078
#     INT32    m_iqInom2Mot : 1080
#     INT32    m_iqKiMot : 1082
#     INT32    m_iqI2tMotLimH : 1084
#     INT32    m_iqKpI2tMot : 1086
#     INT32    m_iqI2tMotIred : 1088
#     INT32    m_iqKiPs : 1090
#     INT32    m_iqInom2Ps : 1092
#     INT32    m_iqI2tPsLimH : 1094
#     INT32    m_iqI2tPs : 1096
#     INT32    m_iqI2tPsMax : 1098
#     INT32    m_iqI2PsDiff : 1100
#     INT32    m_iqIact2RelPs : 1102
#     INT32    m_iqLoadFactPs : 1104
#     INT32    m_iqAllRelPsCatch_Lt : 1106
#     INT32    m_iqAllRelPsCatch : 1108
#     INT32    m_iqKpI2tPs : 1110
#     INT32    m_iqI2tPsIred : 1112
#     INT32    m_iqOverloadIred : 1114
#     INT32    m_iqPnom2 : 1116
#     INT32    m_iqPow2t : 1118
#     INT32    m_iqKiPow : 1120
#     INT32    m_iqPow2tLimH : 1122
#     INT32    m_iqPow2tMax : 1124
#     INT32    m_iqKpPow2t : 1126
#     INT32    m_iqPow2tIred : 1128
#     INT32    m_iqPowAct : 1130
#     INT16    m_iPowActUsr : 1132
#     INT32    m_iqPPowSmooth : 1134
#     INT32    m_iqPthermKpR12 : 1136
#     struct  ThermModell1 {
#       INT32    m_iqOutput : 1138
#       INT32    m_iqPrmA : 1140
#       INT32    m_iqPrmB : 1142
#     }
#     struct  ThermModell2 {
#       INT32    m_iqOutput : 1144
#       INT32    m_iqPrmA : 1146
#       INT32    m_iqPrmB : 1148
#     }
#     INT32    m_iqPlosI : 1150
#     INT32    m_iqTempInteg : 1152
#     INT32    m_iqKpTempChip : 1154
#     INT32    m_iqKiTempChip : 1156
#     INT32    m_iqTempIred : 1158
#     INT32    m_iqI2tRelPs : 1160
#     INT32    m_iqPow2RelPs : 1162
#     INT32    m_iqTempRelPs : 1164
#     INT32    m_iqAllRelPs : 1166
#     INT32    m_lPosWin : 1168
#     INT32    m_lPosWinTime : 1170
#     INT32    m_lCountPosWin : 1172
#     UINT32   m_ulRoundingErrorPowUp : 1174
#     INT32    m_iqPdifMax : 1176
#     INT32    m_iqPosDifDynamic : 1178
#     INT32    m_iqPdifWarn : 1180
#     UINT32   m_ulPdifWarnTmp : 1182
#     INT16    m_iPosTrackErrCnt : 1184
#     INT32    m_lSupvPosDeviatLim : 1186
#     UINT16   m_uiSupvPosDeviatTimeDownCnt : 1188
#     INT32    m_iqSupvSpeedDeviatLim : 1190
#     UINT16   m_uiSupvSpeedDeviatTimeDownCnt : 1192
#     INT32    m_iqSupvSpeedValueLim : 1194
#     UINT16   m_uiSupvSpeedValueTimeDownCnt : 1196
#     INT32    m_iqSupvCurrValueLim : 1198
#     UINT16   m_uiSupvCurrValueTimeDownCnt : 1200
#     UINT16   m_uiPreSetValueTimeCnt : 1201
#     INT32    m_iqSpeedLimVar2 : 1202
#     INT32    m_iqSpeedLimVar2CurrCtrl : 1204
#     INT16    m_iTempHsMax : 1206
#     INT16    m_iTempHsWarn : 1207
#     INT16    m_iTempCpuMax : 1208
#     INT16    m_iTempHS : 1209
#     INT16    m_iTempCpu : 1210
#     INT32    m_iqDeltaUkzFol : 1212
#     INT16    m_iRelaisCnt : 1214
#     INT16    m_iRelaisNegativCnt : 1215
#     INT32    m_iqUupFol1Integ : 1216
#     INT32    m_iqUupFol2Integ : 1218
#     INT32    m_iqUdownFol1Integ : 1220
#     INT32    m_iqUdownFol2Integ : 1222
#     INT32    m_iqVupFol1Integ : 1224
#     INT32    m_iqVupFol2Integ : 1226
#     INT32    m_iqVdownFol1Integ : 1228
#     INT32    m_iqVdownFol2Integ : 1230
#     INT32    m_iqWupFol1Integ : 1232
#     INT32    m_iqWupFol2Integ : 1234
#     INT32    m_iqWdownFol1Integ : 1236
#     INT32    m_iqWdownFol2Integ : 1238
#     INT32    m_iqTempChip : 1240
#     INT32    m_iqTempChipUsr : 1242
#     INT32    m_iqChipTempMax : 1244
#     INT16    m_iCommutCnt : 1246
#     INT16    m_iCommutMaxCatch : 1247
#     INT16    m_iCommutCredit : 1248
#     INT16    m_iCommutLim : 1249
#     INT16    m_iTempFanSwitch : 1250
#     UINT32   m_ulFanCnt : 1252
#     INT16    m_iUmains_Scal : 1254
#     INT32    m_iqUmainsUx : 1256
#     INT32    m_iqUmainsUy : 1258
#     INT32    m_iqUmainsMag : 1260
#     INT32    m_iqUmainsMagFlt : 1262
#     INT32    m_iqUmainsRho : 1264
#     INT32    m_iqUmainsFreq : 1266
#     INT32    m_iqUmainsFqFol : 1268
#     INT32    m_iqUmainsKi : 1270
#     INT32    m_iqUmainsPllDiff : 1272
#     INT32    m_iqUmainsPllPpart : 1274
#     INT32    m_iqUmainsPllIpart : 1276
#     INT32    m_iqUmainsLimL : 1278
#     INT32    m_iqUmainsLimH : 1280
#     INT16    m_iUmainsCnt : 1282
#     INT16    m_iUmainsOkCnt : 1283
#     UINT16   m_bUmainsSettled : 1284
#     INT32    m_iqUmainsRectAvr : 1286
#     UINT16   m_uiUmainsFlg : 1288
#     INT16    m_iUmainsHyCnt : 1289
#     INT32    m_iqDeltaUmainsFol : 1290
#     UINT16   m_bTriggerTaskMainUmains : 1292
#     UINT16   m_uiDeviceType : 1293
#     UINT16   m_bUmainsStableCheck : 1294
#     INT16    m_iUmainsStableCnt : 1295
#     UINT16   m_uiMthDoIt : 1296
#     UINT16   m_uiMthermToggle : 1297
#     INT16    m_iMthermCnt1 : 1298
#     struct  m_i64ImagSquMean1 {
#       UINT32   L : 1300
#       INT32    H : 1302
#     }
#     INT32    m_iqSpeedMean1 : 1304
#     INT16    m_iMthermCnt2 : 1306
#     struct  m_i64ImagSquMean2 {
#       UINT32   L : 1308
#       INT32    H : 1310
#     }
#     INT32    m_iqSpeedMean2 : 1312
#     ???      m_dPv1Hot : 1314
#     ???      m_dPv1Hot_Old1 : 1316
#     ???      m_dPv1Hot_Old2 : 1318
#     ???      m_dMthBeta : 1320
#     ???      m_dMthRhot : 1322
#     INT16    m_iMThetaCnt : 1324
#     INT16    m_iMthDelta_A : 1325
#     INT16    m_iMthDelta_B : 1326
#     ???      m_ldMthSho_den : 1328
#     ???      m_ldMthSho_num : 1332
#     ???      m_ldTheta31Sho : 1336
#     ???      m_ldTheta31Sho_Old1 : 1340
#     INT16    m_iMThetaSho : 1344
#     INT16    m_iTheta31Sho : 1345
#     UINT32   m_ulMthDuration : 1346
#     UINT16   m_bMotI2tOff : 1348
#     UINT16   m_uiCntOvercur : 1349
#     INT32    m_iqSpeedActMax : 1350
#     UINT16   m_uiSpdMaxCnt : 1352
#     UINT16   m_uiLXMATVUdcMax : 1353
#     UINT16   m_uiDCbusCompat : 1354
#     UINT16   m_uiUkzbalH : 1355
#     UINT16   m_uiUkzbalL : 1356
#   }
#   struct  CurrCtrl {
#     struct  CurrPT1 {
#       INT32    m_iqOutput : 1358
#       INT32[]  m_iqPrmA : 1360
#       INT32[]  m_iqPrmB : 1366
#     }
#     struct  Notch1 {
#       INT32    m_iqOutput : 1372
#       INT32    m_iqLast : 1374
#       INT32    m_iqLast2nd : 1376
#       INT32    m_iqLastInput : 1378
#       INT32    m_iqLast2ndInput : 1380
#       INT32[]  m_iqPrmA1 : 1382
#       INT32[]  m_iqPrmA2 : 1386
#       INT32[]  m_iqPrmB2 : 1390
#       INT32[]  m_iqPrmB1 : 1394
#       INT32[]  m_iqPrmB0 : 1398
#     }
#     struct  Notch2 {
#       INT32    m_iqOutput : 1402
#       INT32    m_iqLast : 1404
#       INT32    m_iqLast2nd : 1406
#       INT32    m_iqLastInput : 1408
#       INT32    m_iqLast2ndInput : 1410
#       INT32[]  m_iqPrmA1 : 1412
#       INT32[]  m_iqPrmA2 : 1416
#       INT32[]  m_iqPrmB2 : 1420
#       INT32[]  m_iqPrmB1 : 1424
#       INT32[]  m_iqPrmB0 : 1428
#     }
#     struct  PWM {
#       INT32    m_iqTa : 1432
#       INT32    m_iqTb : 1434
#       INT32    m_iqTc : 1436
#     }
#     INT32    m_iqYIdOut : 1438
#     INT32    m_iqYIqOut : 1440
#     INT32    m_iqUmag : 1442
#     INT32    m_iqIdRef : 1444
#     INT32    m_iqIqRef : 1446
#     INT32    m_iqIdDif : 1448
#     INT32    m_iqIqDif : 1450
#     INT32    m_iqYId : 1452
#     INT32    m_iqYIq : 1454
#     INT32    m_iqUdReg2 : 1456
#     INT32    m_iqUqReg2 : 1458
#     INT32    m_iqGainCo : 1460
#     INT32    m_iqIqRefOld : 1462
#     INT32    m_iqIqRefOld125 : 1464
#     INT32    m_iqUDif : 1466
#     INT32    m_iqUInteg : 1468
#     INT32    m_iqUPpart : 1470
#     INT32    m_iqYU : 1472
#     INT32    m_iqKpU : 1474
#     INT32    m_iqKiU : 1476
#     INT32    m_iqIdInteg : 1478
#     INT32    m_iqIqInteg : 1480
#     INT32    m_iqIdPpart : 1482
#     INT32    m_iqIqPpart : 1484
#     INT32    m_iqKpIdATG : 1486
#     INT32    m_iqKpIqATG : 1488
#     INT32    m_iqKpId : 1490
#     INT32    m_iqKiId : 1492
#     INT32    m_iqKpIq : 1494
#     INT32    m_iqKiIq : 1496
#     INT32    m_iqIdMct : 1498
#     INT32    m_iqUdMct : 1500
#     INT32    m_iqPxLq : 1502
#     INT32    m_iqPxLd : 1504
#     INT32    m_iqPxEMF : 1506
#     INT32    m_iqPxEMFmodified1 : 1508
#     INT32    m_iqPxEMFmodified2 : 1510
#     INT32    m_iqR : 1512
#     INT32    m_iqRsquare : 1514
#     INT32    m_iqInvId0 : 1516
#     INT32    m_iqIdFFTerm : 1518
#     INT32    m_iqIqFFTerm : 1520
#     INT32    m_iqId_man : 1522
#     INT32    m_iqIq_man : 1524
#     INT32    m_iqUd_man : 1526
#     INT32    m_iqUq_man : 1528
#     INT32    m_iqIqAxf : 1530
#     INT32[]  m_piqCrtSat : 1532
#     INT32    m_iqUdStatic : 1542
#     INT32    m_iqUqStatic : 1544
#     INT32    m_iqUdSet : 1546
#     INT32    m_iqUqSet : 1548
#     INT32    m_iqIqSet : 1550
#     INT32    m_iqIdSet : 1552
#     INT32    m_iqUphLimReduced : 1554
#     INT32    m_iqUphLimReducedSquare : 1556
#     INT32    m_iqUkzRec : 1558
#     INT32    m_iqUphLim : 1560
#     INT32    m_iqVoltUtil : 1562
#     INT32    m_iqCosEpsEExtra : 1564
#     INT32    m_iqSinEpsEExtra : 1566
#     INT32    m_iqUalfa : 1568
#     INT32    m_iqUbeta : 1570
#     INT32    m_iqIqLim : 1572
#     INT32    m_iqCrtAxfLim : 1574
#     INT32    m_iqItotLim : 1576
#     UINT32   m_ulCmpU_Sum : 1578
#     UINT32   m_ulCmpV_Sum : 1580
#     UINT32   m_ulCmpW_Sum : 1582
#     UINT16   m_uiCmpU_Mean : 1584
#     UINT16   m_uiCmpV_Mean : 1585
#     UINT16   m_uiCmpW_Mean : 1586
#     INT16    m_iCmpSumCnt : 1587
#     INT16    m_iDutyUExcept : 1588
#     INT16    m_iDutyVExcept : 1589
#     INT16    m_iDutyWExcept : 1590
#     INT32    m_iqKpULimReduce : 1592
#     unknown* __vptr : 1594
#   }
#   struct  WakeShake {
#     UINT16   m_uiWakeShakeState : 1596
#     INT32    m_iqStartSpeedLimWakes : 1598
#     INT32    m_iqEpsE_wakes : 1600
#     INT32    m_iqUdWakes : 1602
#     INT32    m_iqUqWakes : 1604
#     INT32    m_iqIdWakes : 1606
#     INT32    m_iqIqWakes : 1608
#     INT32    m_iqKdWakes : 1610
#     INT32    m_iqKpWakes : 1612
#     INT32    m_iqKiWakes : 1614
#     INT32    m_iqKdWakes0 : 1616
#     INT32    m_iqKpWakes0 : 1618
#     INT32    m_iqKiWakes0 : 1620
#     INT32    m_iqTei : 1622
#     INT32    m_iqKpPart : 1624
#     INT32    m_iqKiPart : 1626
#     INT32    m_iqKdPart : 1628
#     INT32    m_iqKpPartCorrection : 1630
#     INT32    m_iqEpsWakesDif : 1632
#     INT32    m_iqEpsWakesStart : 1634
#     INT32    m_iqEpsWakesEnd : 1636
#     INT32    m_iqEpsEwakesFltEnd : 1638
#     INT32    m_iqEpsEwakesDifEnd : 1640
#     INT32    m_iqEpsEwakesFlt : 1642
#     INT32    m_iqKeepKiId : 1644
#     INT32    m_iqKeepKiIq : 1646
#     UINT16   m_uiSlidingGain : 1648
#     UINT16   m_uiSlidingShift : 1649
#     UINT16   m_uiWakesCnt : 1650
#     UINT16   m_uiPhasingOffset : 1651
#     UINT16   m_uiTauNactRemind : 1652
#     UINT16   m_uiTaunactWakes : 1653
#     INT32    m_iqUmagRefWakes : 1654
#     INT32    m_iqUmagRefWakes0 : 1656
#     INT32    m_iqImagWakes0 : 1658
#     INT32    m_iqIdWakes_0 : 1660
#     INT32    m_iqImagWakesMax : 1662
#     INT32    m_uiKpImagReduction : 1664
#     UINT32   m_ulAccAbility : 1666
#     UINT16   m_uiMassRatio : 1668
#     UINT32   m_ulSliderMass : 1670
#     UINT16   m_uiWakesGain : 1672
#     INT32    m_iqCurrentMeanEnd : 1674
#     INT32    m_iqCurrentMaxEnd : 1676
#     INT32    m_iqCurrentMinEnd : 1678
#     INT32    m_iqCurrentSum : 1680
#     INT32    m_iqEpsEwakesFltMinPosEnd : 1682
#     INT32    m_iqEpsEwakesFltMinNegEnd : 1684
#     INT32    m_iqEpsEwakesFltMaxPosEnd : 1686
#     INT32    m_iqEpsEwakesFltMaxNegEnd : 1688
#     INT32    m_iqKdManAdaption : 1690
#     INT32    m_iqKpManAdaption : 1692
#     INT32    m_iqKiManAdaption : 1694
#   }
#   struct  ParamUsrIx19StructPending {
#     UINT16   uiTauIRefUsr : 1696
#     UINT16   uiKpSpeedUsr : 1697
#     UINT16   uiTnSpeedUsr : 1698
#     UINT16   uiTauNRefUsr : 1699
#     UINT16   uiKPpUsr : 1700
#     UINT16   uiKFPpUsr : 1701
#   }
#   struct  ParamUsrIx18StructPending {
#     UINT16   uiTauIRefUsr : 1702
#     UINT16   uiKpSpeedUsr : 1703
#     UINT16   uiTnSpeedUsr : 1704
#     UINT16   uiTauNRefUsr : 1705
#     UINT16   uiKPpUsr : 1706
#     UINT16   uiKFPpUsr : 1707
#   }
#   struct  ParamUsrGlobGainPending {
#     UINT16   uiTauIRefUsr : 1708
#     UINT16   uiKpSpeedUsr : 1709
#     UINT16   uiTnSpeedUsr : 1710
#     UINT16   uiTauNRefUsr : 1711
#     UINT16   uiKPpUsr : 1712
#     UINT16   uiKFPpUsr : 1713
#   }
#   UINT16   m_bFlagSwitchTimeConst : 1714
#   UINT16   m_bFlagGlobGain : 1715
#   UINT16   m_uiFlagCopyParaSet : 1716
#   UINT16   m_uiFlagParaSetSwitch : 1717
#   UINT16   m_uiParaSwitchCnt : 1718
#   UINT16   m_bIx19RescalingStart : 1719
#   UINT16   m_bIx19RescalingReady : 1720
#   UINT16   m_bIx18RescalingStart : 1721
#   UINT16   m_bIx18RescalingReady : 1722
#   UINT16   m_bGlobGainRescalingStart : 1723
#   UINT16   m_bGlobGainRescalingReady : 1724
#   UINT16   m_uiParaSetSwitch : 1725
#   UINT16   m_bCopyInPocess : 1726
#   UINT16   m_bTimeConstChangeInProcess : 1727
#   UINT16   m_uiGlobGain : 1728
#   UINT16   m_uiTParaSwitch : 1729
#   UINT16   m_uiParaSetCmd : 1730
#   UINT16   m_uiParaSetCmdAct : 1731
#   UINT16   m_bParamWriteIntParaSetCmd : 1732
#   UINT16   m_uiParaIx18 : 1733
#   UINT16   m_uiParaIx19 : 1734
#   UINT16   m_bIntegralOffIO : 1735
#   UINT32   m_ulTrace0 : 1736
#   INT32    m_iqOmegaT : 1738
#   INT32    m_iqSinGenOut : 1740
# };
#
# ============ CSensors (18) ============
# CSensors {
#   INT32    m_iqEpsE_b : 0
#   UINT32   m_ulSetPosEncUsr : 2
#   INT32    m_iqUkzFlt : 4
#   INT32    m_iqIu : 6
#   INT32    m_iqIv : 8
#   INT32    m_iqIuUse : 10
#   INT32    m_iqIvUse : 12
#   INT32    m_iqIalpha : 14
#   INT32    m_iqIbeta : 16
#   INT32    m_iqIqActExport : 18
#   INT32    m_iqIdAct : 20
#   INT32    m_iqIqAct : 22
#   INT32    m_iqImag1ms : 24
#   INT32    m_iqImagSquared1ms : 26
#   INT32    m_iqIqActOld125 : 28
#   INT32    m_iqIqActOld : 30
#   INT32    m_iqIuSum : 32
#   INT32    m_iqIvSum : 34
#   INT32    m_iqIuMean : 36
#   INT32    m_iqIvMean : 38
#   INT32    m_iqEpsE : 40
#   INT32    m_iqEpsEExtra : 42
#   INT32    m_iqCosEpsE : 44
#   INT32    m_iqSinEpsE : 46
#   INT32    m_iqEpsE_man : 48
#   INT32    m_iqOmega_man : 50
#   UINT16   m_bFlagCalibCurrent : 52
#   unknown* __vptr : 54
# };
#
# ============ CCurrentCtrl (19) ============
# CCurrentCtrl {
#   struct  CurrPT1 {
#     INT32    m_iqOutput : 0
#     INT32[]  m_iqPrmA : 2
#     INT32[]  m_iqPrmB : 8
#   }
#   struct  Notch1 {
#     INT32    m_iqOutput : 14
#     INT32    m_iqLast : 16
#     INT32    m_iqLast2nd : 18
#     INT32    m_iqLastInput : 20
#     INT32    m_iqLast2ndInput : 22
#     INT32[]  m_iqPrmA1 : 24
#     INT32[]  m_iqPrmA2 : 28
#     INT32[]  m_iqPrmB2 : 32
#     INT32[]  m_iqPrmB1 : 36
#     INT32[]  m_iqPrmB0 : 40
#   }
#   struct  Notch2 {
#     INT32    m_iqOutput : 44
#     INT32    m_iqLast : 46
#     INT32    m_iqLast2nd : 48
#     INT32    m_iqLastInput : 50
#     INT32    m_iqLast2ndInput : 52
#     INT32[]  m_iqPrmA1 : 54
#     INT32[]  m_iqPrmA2 : 58
#     INT32[]  m_iqPrmB2 : 62
#     INT32[]  m_iqPrmB1 : 66
#     INT32[]  m_iqPrmB0 : 70
#   }
#   struct  PWM {
#     INT32    m_iqTa : 74
#     INT32    m_iqTb : 76
#     INT32    m_iqTc : 78
#   }
#   INT32    m_iqYIdOut : 80
#   INT32    m_iqYIqOut : 82
#   INT32    m_iqUmag : 84
#   INT32    m_iqIdRef : 86
#   INT32    m_iqIqRef : 88
#   INT32    m_iqIdDif : 90
#   INT32    m_iqIqDif : 92
#   INT32    m_iqYId : 94
#   INT32    m_iqYIq : 96
#   INT32    m_iqUdReg2 : 98
#   INT32    m_iqUqReg2 : 100
#   INT32    m_iqGainCo : 102
#   INT32    m_iqIqRefOld : 104
#   INT32    m_iqIqRefOld125 : 106
#   INT32    m_iqUDif : 108
#   INT32    m_iqUInteg : 110
#   INT32    m_iqUPpart : 112
#   INT32    m_iqYU : 114
#   INT32    m_iqKpU : 116
#   INT32    m_iqKiU : 118
#   INT32    m_iqIdInteg : 120
#   INT32    m_iqIqInteg : 122
#   INT32    m_iqIdPpart : 124
#   INT32    m_iqIqPpart : 126
#   INT32    m_iqKpIdATG : 128
#   INT32    m_iqKpIqATG : 130
#   INT32    m_iqKpId : 132
#   INT32    m_iqKiId : 134
#   INT32    m_iqKpIq : 136
#   INT32    m_iqKiIq : 138
#   INT32    m_iqIdMct : 140
#   INT32    m_iqUdMct : 142
#   INT32    m_iqPxLq : 144
#   INT32    m_iqPxLd : 146
#   INT32    m_iqPxEMF : 148
#   INT32    m_iqPxEMFmodified1 : 150
#   INT32    m_iqPxEMFmodified2 : 152
#   INT32    m_iqR : 154
#   INT32    m_iqRsquare : 156
#   INT32    m_iqInvId0 : 158
#   INT32    m_iqIdFFTerm : 160
#   INT32    m_iqIqFFTerm : 162
#   INT32    m_iqId_man : 164
#   INT32    m_iqIq_man : 166
#   INT32    m_iqUd_man : 168
#   INT32    m_iqUq_man : 170
#   INT32    m_iqIqAxf : 172
#   INT32[]  m_piqCrtSat : 174
#   INT32    m_iqUdStatic : 184
#   INT32    m_iqUqStatic : 186
#   INT32    m_iqUdSet : 188
#   INT32    m_iqUqSet : 190
#   INT32    m_iqIqSet : 192
#   INT32    m_iqIdSet : 194
#   INT32    m_iqUphLimReduced : 196
#   INT32    m_iqUphLimReducedSquare : 198
#   INT32    m_iqUkzRec : 200
#   INT32    m_iqUphLim : 202
#   INT32    m_iqVoltUtil : 204
#   INT32    m_iqCosEpsEExtra : 206
#   INT32    m_iqSinEpsEExtra : 208
#   INT32    m_iqUalfa : 210
#   INT32    m_iqUbeta : 212
#   INT32    m_iqIqLim : 214
#   INT32    m_iqCrtAxfLim : 216
#   INT32    m_iqItotLim : 218
#   UINT32   m_ulCmpU_Sum : 220
#   UINT32   m_ulCmpV_Sum : 222
#   UINT32   m_ulCmpW_Sum : 224
#   UINT16   m_uiCmpU_Mean : 226
#   UINT16   m_uiCmpV_Mean : 227
#   UINT16   m_uiCmpW_Mean : 228
#   INT16    m_iCmpSumCnt : 229
#   INT16    m_iDutyUExcept : 230
#   INT16    m_iDutyVExcept : 231
#   INT16    m_iDutyWExcept : 232
#   INT32    m_iqKpULimReduce : 234
#   unknown* __vptr : 236
# };
#
# ============ CMonitoring (20) ============
# CMonitoring {
#   struct  I2tSmoothPT1 {
#     INT32    m_iqOutput : 0
#     INT32    m_iqPrmA : 2
#     INT32    m_iqPrmB : 4
#   }
#   INT32    m_iqSmoothBalance : 6
#   UINT16   m_uiI2tSmoothCnt : 8
#   INT32    m_iqPdifPeak : 10
#   UINT16   m_uiPsImax : 12
#   UINT16   m_uiPsInom : 13
#   INT32    m_iqSpeedMax : 14
#   INT32    m_iqIdLim : 16
#   INT32    m_iqUkzMax : 18
#   INT32    m_iqUkzMin : 20
#   INT32    m_iqUkzQstop : 22
#   UINT16   m_uiIMaxSysApk : 24
#   UINT16   m_uiImaxSysPerCent : 25
#   UINT16   m_uiBalBurnIn : 26
#   INT32    m_iqI2tBal : 28
#   INT32    m_iqI2tBalLim : 30
#   INT32    m_iqI2tBalLim75 : 32
#   INT32    m_iqLoadFactRes : 34
#   INT32    m_iqI2tBalCatch_Lt : 36
#   INT32    m_iqI2tBalCatch : 38
#   INT32    m_iqKiBal : 40
#   INT32    m_iqIOn2Bal : 42
#   INT32    m_iqInom2Bal : 44
#   INT32    m_iqBresUlimRec : 46
#   INT32    m_iqIOn2RelBal : 48
#   INT32    m_iqIactRelBal : 50
#   UINT16   m_uiWaitTime : 52
#   INT32    m_iqI2tBalFanSwitch : 54
#   INT32    m_iqIon2BalAct : 56
#   INT32    m_iqIon2RelBalAct : 58
#   INT32    m_iqUkzBalH : 60
#   INT32    m_iqUkzBalL : 62
#   UINT16   m_uiBallastCnt : 64
#   INT16    m_iBalWarnLim : 65
#   INT32    m_iqI2tMot : 66
#   INT32    m_iqI2tMotMax : 68
#   INT32    m_iqIact2RelMot : 70
#   INT32    m_iqI2MotDiff : 72
#   INT32    m_iqLoadFactMot : 74
#   INT32    m_iqI2tMotCatch_Lt : 76
#   INT32    m_iqI2tMotCatch : 78
#   INT32    m_iqInom2Mot : 80
#   INT32    m_iqKiMot : 82
#   INT32    m_iqI2tMotLimH : 84
#   INT32    m_iqKpI2tMot : 86
#   INT32    m_iqI2tMotIred : 88
#   INT32    m_iqKiPs : 90
#   INT32    m_iqInom2Ps : 92
#   INT32    m_iqI2tPsLimH : 94
#   INT32    m_iqI2tPs : 96
#   INT32    m_iqI2tPsMax : 98
#   INT32    m_iqI2PsDiff : 100
#   INT32    m_iqIact2RelPs : 102
#   INT32    m_iqLoadFactPs : 104
#   INT32    m_iqAllRelPsCatch_Lt : 106
#   INT32    m_iqAllRelPsCatch : 108
#   INT32    m_iqKpI2tPs : 110
#   INT32    m_iqI2tPsIred : 112
#   INT32    m_iqOverloadIred : 114
#   INT32    m_iqPnom2 : 116
#   INT32    m_iqPow2t : 118
#   INT32    m_iqKiPow : 120
#   INT32    m_iqPow2tLimH : 122
#   INT32    m_iqPow2tMax : 124
#   INT32    m_iqKpPow2t : 126
#   INT32    m_iqPow2tIred : 128
#   INT32    m_iqPowAct : 130
#   INT16    m_iPowActUsr : 132
#   INT32    m_iqPPowSmooth : 134
#   INT32    m_iqPthermKpR12 : 136
#   struct  ThermModell1 {
#     INT32    m_iqOutput : 138
#     INT32    m_iqPrmA : 140
#     INT32    m_iqPrmB : 142
#   }
#   struct  ThermModell2 {
#     INT32    m_iqOutput : 144
#     INT32    m_iqPrmA : 146
#     INT32    m_iqPrmB : 148
#   }
#   INT32    m_iqPlosI : 150
#   INT32    m_iqTempInteg : 152
#   INT32    m_iqKpTempChip : 154
#   INT32    m_iqKiTempChip : 156
#   INT32    m_iqTempIred : 158
#   INT32    m_iqI2tRelPs : 160
#   INT32    m_iqPow2RelPs : 162
#   INT32    m_iqTempRelPs : 164
#   INT32    m_iqAllRelPs : 166
#   INT32    m_lPosWin : 168
#   INT32    m_lPosWinTime : 170
#   INT32    m_lCountPosWin : 172
#   UINT32   m_ulRoundingErrorPowUp : 174
#   INT32    m_iqPdifMax : 176
#   INT32    m_iqPosDifDynamic : 178
#   INT32    m_iqPdifWarn : 180
#   UINT32   m_ulPdifWarnTmp : 182
#   INT16    m_iPosTrackErrCnt : 184
#   INT32    m_lSupvPosDeviatLim : 186
#   UINT16   m_uiSupvPosDeviatTimeDownCnt : 188
#   INT32    m_iqSupvSpeedDeviatLim : 190
#   UINT16   m_uiSupvSpeedDeviatTimeDownCnt : 192
#   INT32    m_iqSupvSpeedValueLim : 194
#   UINT16   m_uiSupvSpeedValueTimeDownCnt : 196
#   INT32    m_iqSupvCurrValueLim : 198
#   UINT16   m_uiSupvCurrValueTimeDownCnt : 200
#   UINT16   m_uiPreSetValueTimeCnt : 201
#   INT32    m_iqSpeedLimVar2 : 202
#   INT32    m_iqSpeedLimVar2CurrCtrl : 204
#   INT16    m_iTempHsMax : 206
#   INT16    m_iTempHsWarn : 207
#   INT16    m_iTempCpuMax : 208
#   INT16    m_iTempHS : 209
#   INT16    m_iTempCpu : 210
#   INT32    m_iqDeltaUkzFol : 212
#   INT16    m_iRelaisCnt : 214
#   INT16    m_iRelaisNegativCnt : 215
#   INT32    m_iqUupFol1Integ : 216
#   INT32    m_iqUupFol2Integ : 218
#   INT32    m_iqUdownFol1Integ : 220
#   INT32    m_iqUdownFol2Integ : 222
#   INT32    m_iqVupFol1Integ : 224
#   INT32    m_iqVupFol2Integ : 226
#   INT32    m_iqVdownFol1Integ : 228
#   INT32    m_iqVdownFol2Integ : 230
#   INT32    m_iqWupFol1Integ : 232
#   INT32    m_iqWupFol2Integ : 234
#   INT32    m_iqWdownFol1Integ : 236
#   INT32    m_iqWdownFol2Integ : 238
#   INT32    m_iqTempChip : 240
#   INT32    m_iqTempChipUsr : 242
#   INT32    m_iqChipTempMax : 244
#   INT16    m_iCommutCnt : 246
#   INT16    m_iCommutMaxCatch : 247
#   INT16    m_iCommutCredit : 248
#   INT16    m_iCommutLim : 249
#   INT16    m_iTempFanSwitch : 250
#   UINT32   m_ulFanCnt : 252
#   INT16    m_iUmains_Scal : 254
#   INT32    m_iqUmainsUx : 256
#   INT32    m_iqUmainsUy : 258
#   INT32    m_iqUmainsMag : 260
#   INT32    m_iqUmainsMagFlt : 262
#   INT32    m_iqUmainsRho : 264
#   INT32    m_iqUmainsFreq : 266
#   INT32    m_iqUmainsFqFol : 268
#   INT32    m_iqUmainsKi : 270
#   INT32    m_iqUmainsPllDiff : 272
#   INT32    m_iqUmainsPllPpart : 274
#   INT32    m_iqUmainsPllIpart : 276
#   INT32    m_iqUmainsLimL : 278
#   INT32    m_iqUmainsLimH : 280
#   INT16    m_iUmainsCnt : 282
#   INT16    m_iUmainsOkCnt : 283
#   UINT16   m_bUmainsSettled : 284
#   INT32    m_iqUmainsRectAvr : 286
#   UINT16   m_uiUmainsFlg : 288
#   INT16    m_iUmainsHyCnt : 289
#   INT32    m_iqDeltaUmainsFol : 290
#   UINT16   m_bTriggerTaskMainUmains : 292
#   UINT16   m_uiDeviceType : 293
#   UINT16   m_bUmainsStableCheck : 294
#   INT16    m_iUmainsStableCnt : 295
#   UINT16   m_uiMthDoIt : 296
#   UINT16   m_uiMthermToggle : 297
#   INT16    m_iMthermCnt1 : 298
#   struct  m_i64ImagSquMean1 {
#     UINT32   L : 300
#     INT32    H : 302
#   }
#   INT32    m_iqSpeedMean1 : 304
#   INT16    m_iMthermCnt2 : 306
#   struct  m_i64ImagSquMean2 {
#     UINT32   L : 308
#     INT32    H : 310
#   }
#   INT32    m_iqSpeedMean2 : 312
#   ???      m_dPv1Hot : 314
#   ???      m_dPv1Hot_Old1 : 316
#   ???      m_dPv1Hot_Old2 : 318
#   ???      m_dMthBeta : 320
#   ???      m_dMthRhot : 322
#   INT16    m_iMThetaCnt : 324
#   INT16    m_iMthDelta_A : 325
#   INT16    m_iMthDelta_B : 326
#   ???      m_ldMthSho_den : 328
#   ???      m_ldMthSho_num : 332
#   ???      m_ldTheta31Sho : 336
#   ???      m_ldTheta31Sho_Old1 : 340
#   INT16    m_iMThetaSho : 344
#   INT16    m_iTheta31Sho : 345
#   UINT32   m_ulMthDuration : 346
#   UINT16   m_bMotI2tOff : 348
#   UINT16   m_uiCntOvercur : 349
#   INT32    m_iqSpeedActMax : 350
#   UINT16   m_uiSpdMaxCnt : 352
#   UINT16   m_uiLXMATVUdcMax : 353
#   UINT16   m_uiDCbusCompat : 354
#   UINT16   m_uiUkzbalH : 355
#   UINT16   m_uiUkzbalL : 356
# };
#
# ============  (21) ============
# CEprFileMgr {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  m_theErrorFifo {
#     UINT16*  m_puiBuffer : 2
#     UINT16   m_uiRead : 4
#     UINT16   m_uiWrite : 5
#     UINT16   m_uiLength : 6
#     UINT16   m_uiEntries : 7
#     UINT16   m_uiOverrun : 8
#     UINT16   m_uiError : 9
#     UINT16   m_uiNoOfCall : 10
#   }
#   ???      m_uiFileInstance : 12
#   UINT16   m_uiErrListPtr : 13
#   UINT16   m_uiErrListCnt : 14
#   UINT16   m_uiErrReadListCnt : 15
#   UINT16   m_uiErrReadListPtr : 16
#   UINT16   m_uiAmpOnCnt : 17
#   UINT16   m_uiParamComReset : 18
#   UINT16   m_uiPreviousProgVers : 19
#   UINT16   m_bitWriteInProgress : 20
#   struct  m_CopyReadBuffer {
#     UINT16   uiNumber : 22
#     UINT16   uiDetail : 23
#     UINT32   ulClassTime : 24
#     UINT16[] uiAddInfo : 26
#   }
#   unknown*[] m_pEprFileList : 32
#   UINT32   m_ulTimeAmpOn : 58
# };
#
# ============  (22) ============
# CHwlDio {
#   UINT16   m_uiDigIn : 0
#   UINT16   m_uiDigOut : 1
#   UINT16   m_uiForceHighMaskIn : 2
#   UINT16   m_uiForceLowMaskIn : 3
#   UINT16   m_uiForceHighMaskOut : 4
#   UINT16   m_uiForceLowMaskOut : 5
#   UINT16   m_uiInHwInvertMask : 6
#   UINT16   m_uiInForceCnf : 7
#   UINT16   m_uiOutForceCnf : 8
#   UINT16   m_uiInIvertCnf : 9
#   UINT16   m_uiDigInSTOAB : 10
#   UINT16   m_uiDigInAvailable : 11
#   UINT16   m_uiDigOutAvailable : 12
#   UINT16   m_uiDigOutRd : 13
#   UINT16   m_uiDigInOut : 14
#   UINT16   m_uiDigOutLed : 15
#   unknown* m_pCtrlReg : 16
#   struct  m_cDioSwDeb {
#     ???      m_sDebounce : 18
#     UINT16   m_uiDeb0 : 25
#     UINT16[] m_uiDebBuf : 26
#     UINT16   m_uiInDebounceMask : 33
#   }
# };
#
# ============  (23) ============
# CIhm {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   UINT32   ulParameterValue : 2
#   UINT16   uiIHMlock : 4
#   UINT32   ulIHMdisp : 6
#   UINT16   uiIHMdot : 8
#   UINT16   uiIHMUserName : 9
# };
#
# ============  (24) ============
# CProfileCiA402 {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   UINT16   m_bWasInState6 : 2
#   UINT16   m_uiHaltSum : 3
#   ???      m_opmChannel : 4
#   INT16    m_iOpModeOld : 5
#   UINT16   m_uiCtrlWordDC_act : 6
#   UINT16   m_uiStatWordDC_act : 7
#   UINT16   m_uiCountNewSetpoint : 8
#   UINT16   m_uiDcomRefmanual : 9
#   UINT16   m_uiPosOption : 10
#   UINT16   m_uiDcomRefgear : 11
#   UINT16   m_uiDcomRefTorq : 12
#   UINT16   m_uiDcomRefVel : 13
#   INT16    m_iDcomRefValOfTorq : 14
#   INT16    m_iDcomHomeMethod : 15
#   UINT16   m_bContinuePending : 16
#   UINT16   m_uiSuppressHaltBit : 17
#   UINT16   m_uiDataSetToBeStarted : 18
#   UINT16   m_uiProbesConfig : 19
#   UINT16   m_uiProbesStatus : 20
#   INT32    l_TargetPosOld : 22
#   INT32    m_lDcomRefProfVel : 24
#   INT32    m_lDcomTargetPos : 26
#   INT32    m_lHomeSetpos : 28
#   UINT32   m_ulDcomTargetVel : 30
#   UINT32   m_ulContinueParam : 32
#   UINT32   m_ulContinueValue : 34
#   UINT32   m_ulMainLoopBlkCnt : 36
# };
#
# ============  (25) ============
# CProfilePlcOpen {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   UINT16[] m_uiIndexOfBasicElements : 2
#   UINT16   m_uiME_errCode : 5
#   UINT16   m_uiME_errInfo : 6
#   UINT16   m_uiDE_errCode : 7
#   UINT16   m_uiDE_errInfo : 8
#   UINT16   m_uiPLCopenActive : 9
#   UINT16   m_bSkipNextMainloop : 10
#   ???      m_basChannel : 11
#   UINT16   m_uiRxCtrlBits : 12
#   UINT16   m_uiTxCtrlBits : 13
#   UINT16   m_uiShiftFactor : 14
#   UINT32   m_ulStatusWordBL : 16
#   UINT16   m_bTakeoverMtIndependantDataAfterLogout : 18
#   unknown* MyPLCopenWorkingData : 20
#   unknown* m_pMyPLCopenDataInterface : 22
#   unknown* m_pMyPLCopenMTdepData : 24
#   unknown* m_pMyPLCopenMTindepData : 26
#   unknown* m_psParamChannelMS : 28
#   unknown* m_psParamChannelSM : 30
#   unknown* m_pdmControl : 32
#   unknown* m_prefA : 34
#   unknown* m_prefB : 36
# };
#
# ============  (26) ============
# CIoc {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  m_sCtrlBits {
#     UINT16   bitFaultReset : 2
#   }
#   struct  m_sCtrlBits_B {
#     UINT16   bitOpModeActive : 3
#   }
#   UINT16   m_uiIofFuncDq0 : 4
#   UINT16   m_uiIofFuncDq1 : 5
#   UINT16   m_uiIofFuncDq2 : 6
#   UINT16   m_uiIofFuncDq3 : 7
#   UINT16   m_uiIofFuncDq4 : 8
#   UINT16   m_uiUsrDirectOutputVal : 9
#   UINT16   m_uiStrtMotnSeqState : 10
#   UINT16   m_uiNextIoOpmodeReqByOpmSwitch : 11
#   UINT16   m_uiJogStartParam : 12
#   UINT16   m_uiOldOpmMode : 13
#   UINT16   m_uiOpModeReq : 14
#   UINT16   m_uiFaultResetDelay250usCnt : 15
#   UINT32   m_ulClkInternTimeStampAtChgToState6 : 16
#   UINT32   m_ulLastParam : 18
#   UINT32   m_ulLastParamValue : 20
#   UINT32   m_ulActiveInFctBitCoded0to31 : 22
#   UINT32   m_ulActiveInFctBitCoded32to63 : 24
#   UINT32   m_ulHwLimpDigInBitMask : 26
#   UINT32   m_ulHwLimnDigInBitMask : 28
#   UINT32   m_ulHwRefDigInBitMask : 30
#   UINT32   m_ulFaultResetDigInBitMask : 32
#   UINT32   m_ulEnable1DigInBitMask : 34
#   UINT32   m_ulHaltDigInBitMask : 36
#   UINT32   m_ulCanCtrlStartDigInBitMask : 38
#   UINT32   m_ulDataSetStartReqDigInBitMask : 40
#   UINT32   m_ulDataSetDataSelDigInBitMask : 42
#   UINT32   m_ulLimSpeedValueDigInBitMask : 44
#   UINT32   m_ulJogPosDirDigInBitMask : 46
#   UINT32   m_ulJogNegDirDigInBitMask : 48
#   UINT32   m_ulJogFastDigInBitMask : 50
#   UINT32   m_ulAna1InvertDigInBitMask : 52
#   UINT32   m_ulAna2InvertDigInBitMask : 54
#   UINT32   m_ulDataSetDataData0DigInBitMask : 56
#   UINT32   m_ulDataSetDataData1DigInBitMask : 58
#   UINT32   m_ulDataSetDataData2DigInBitMask : 60
#   UINT32   m_ulDataSetDataData3DigInBitMask : 62
#   UINT32   m_ulStrtMotnSeqDigInBitMask : 64
#   UINT32   m_ulLimCurrValueDigInBitMask : 66
#   UINT32   m_ulZeroClampDigInBitMask : 68
#   UINT32   m_ulGearRatioSwitchDigInBitMask : 70
#   UINT32   m_ulGearOffsetValue1DigInBitMask : 72
#   UINT32   m_ulGearOffsetValue2DigInBitMask : 74
#   UINT32   m_ulCtrlLpParamSwitchDigInBitMask : 76
#   UINT32   m_ulOpModeSwitchDigInBitMask : 78
#   UINT32   m_ulProportionalCtrlDigInBitMask : 80
#   UINT32   m_ulDisStopCommandDigInBitMask : 82
#   UINT32   m_ulDisStopEnableDigInBitMask : 84
#   UINT32   m_ulActivateOpModeDigInBitMask : 86
#   UINT32   m_ulDataSetDataData4DigInBitMask : 88
#   UINT32   m_ulDataSetDataData5DigInBitMask : 90
#   UINT32   m_ulDataSetDataData6DigInBitMask : 92
#   UINT32   m_ulInvIom1Ana11DigInBitMask : 94
#   UINT32   m_ulInvIom1Ana12DigInBitMask : 96
#   UINT32   m_ulBrakeOpenInBitMask : 98
#   UINT32   m_ulJogPosDirEnableDigInBitMask : 100
#   UINT32   m_ulJogNegDirEnableDigInBitMask : 102
#   ???      m_eEnableModeStartUp : 104
#   ???      m_eEnableModeNormalProc : 105
# };
#
# ============  (27) ============
# CMdbRtu {
#   struct  __b_CMdb {
#     struct  __b_CBasComponent {
#       unknown* __vptr : 0
#     }
#     ???      m_uiActiveChannel : 2
#     UINT16   m_uiRcvState : 3
#     UINT16   m_uiRcvBytes : 4
#     UINT16[] m_uiRcvBuf : 5
#     UINT16   m_uiRcvCRC : 261
#     UINT16   m_uiRcvFC : 262
#     UINT16   m_uiRcvTemp : 263
#     UINT16   m_uiRcvErr : 264
#     UINT16   m_uiRcvAdr : 265
#     UINT16   m_uiExcErr : 266
#     UINT16   m_uiListenonly : 267
#     UINT16   m_uiFastMonitorModbusAdr : 268
#     UINT16   m_uiEhmRequestForConfig : 269
#     UINT32   m_ulfbuscnt : 270
#     UINT16   m_uicrcerrcnt : 272
#     UINT16   m_uiexepterrcnt : 273
#     UINT16   m_uinakerrcnt : 274
#     UINT16   m_uibsyerrcnt : 275
#     UINT16   m_uiovrerrcnt : 276
#     UINT16   m_uierrorcnt : 277
#     UINT16   m_uidiagerrreg : 278
#     UINT16   m_uiLoginState : 279
#     UINT16   m_uiActAdr : 280
#     struct  m_umas {
#       UINT16   uiResID : 282
#       UINT16   uiReqCode : 283
#       UINT16   uiIdendity : 284
#       UINT16   uiTypeInfo : 285
#       UINT16   uiVersionInfo : 286
#       UINT16   uiMaxSize : 287
#       UINT16   uiRetLen : 288
#       UINT16   uiHandle : 289
#       UINT16   uiPacketNo : 290
#       UINT16   uiInternalRptCnt : 291
#       UINT32   ulSizeOfApx : 292
#       UINT16*  pData : 294
#       UINT16   uiState : 296
#       UINT16   btSegment : 297
#     }
#     struct  m_monacess {
#       UINT16   uiState : 298
#       UINT16   uiActCRC : 299
#       UINT16   uiNumAct : 300
#       UINT16   uiNumMax : 301
#       UINT16   uiZbuf : 302
#     }
#     struct  m_paracess {
#       UINT16   uiState : 304
#       ???      uiAccessChannel : 305
#       UINT32   ulStartTime : 306
#       UINT16[] uiaReceiveBuffer : 308
#     }
#     struct  m_ioc {
#       UINT16   uiLastMasterSeq : 380
#       UINT16   uiSlaveAck : 381
#       UINT16   uiDuplicateSeg : 382
#       UINT16   uiInvalidAck : 383
#       UINT16   bTrfInProg : 384
#       UINT8    ucMsgToSendSize : 385
#       UINT8    ucMsgToListenSize : 386
#       UINT8*   pucMsgToSend : 388
#       UINT8*   pucMsgToListen : 390
#       unknown* piSendNode : 392
#       unknown* piListenNode : 394
#     }
#     UINT16   m_uiCRC : 396
#     UINT16[] m_uiNoCRC : 397
#     UINT16   m_uiCRCStart : 399
#     UINT16   m_bWordOrderLH : 400
#     UINT16   m_bSendPartialFrames : 401
#   }
#   unknown* m_pCom : 402
#   UINT16   m_uiDataformat : 404
#   UINT16   m_uiStopbits : 405
#   UINT16   m_uiParity : 406
#   UINT16   m_uiTimeOutChar : 407
#   UINT16   m_uiTimeOutFrame : 408
# };
#
# ============  (28) ============
# CMdbTcpIoc {
#   struct  __b_CMdb {
#     struct  __b_CBasComponent {
#       unknown* __vptr : 0
#     }
#     ???      m_uiActiveChannel : 2
#     UINT16   m_uiRcvState : 3
#     UINT16   m_uiRcvBytes : 4
#     UINT16[] m_uiRcvBuf : 5
#     UINT16   m_uiRcvCRC : 261
#     UINT16   m_uiRcvFC : 262
#     UINT16   m_uiRcvTemp : 263
#     UINT16   m_uiRcvErr : 264
#     UINT16   m_uiRcvAdr : 265
#     UINT16   m_uiExcErr : 266
#     UINT16   m_uiListenonly : 267
#     UINT16   m_uiFastMonitorModbusAdr : 268
#     UINT16   m_uiEhmRequestForConfig : 269
#     UINT32   m_ulfbuscnt : 270
#     UINT16   m_uicrcerrcnt : 272
#     UINT16   m_uiexepterrcnt : 273
#     UINT16   m_uinakerrcnt : 274
#     UINT16   m_uibsyerrcnt : 275
#     UINT16   m_uiovrerrcnt : 276
#     UINT16   m_uierrorcnt : 277
#     UINT16   m_uidiagerrreg : 278
#     UINT16   m_uiLoginState : 279
#     UINT16   m_uiActAdr : 280
#     struct  m_umas {
#       UINT16   uiResID : 282
#       UINT16   uiReqCode : 283
#       UINT16   uiIdendity : 284
#       UINT16   uiTypeInfo : 285
#       UINT16   uiVersionInfo : 286
#       UINT16   uiMaxSize : 287
#       UINT16   uiRetLen : 288
#       UINT16   uiHandle : 289
#       UINT16   uiPacketNo : 290
#       UINT16   uiInternalRptCnt : 291
#       UINT32   ulSizeOfApx : 292
#       UINT16*  pData : 294
#       UINT16   uiState : 296
#       UINT16   btSegment : 297
#     }
#     struct  m_monacess {
#       UINT16   uiState : 298
#       UINT16   uiActCRC : 299
#       UINT16   uiNumAct : 300
#       UINT16   uiNumMax : 301
#       UINT16   uiZbuf : 302
#     }
#     struct  m_paracess {
#       UINT16   uiState : 304
#       ???      uiAccessChannel : 305
#       UINT32   ulStartTime : 306
#       UINT16[] uiaReceiveBuffer : 308
#     }
#     struct  m_ioc {
#       UINT16   uiLastMasterSeq : 380
#       UINT16   uiSlaveAck : 381
#       UINT16   uiDuplicateSeg : 382
#       UINT16   uiInvalidAck : 383
#       UINT16   bTrfInProg : 384
#       UINT8    ucMsgToSendSize : 385
#       UINT8    ucMsgToListenSize : 386
#       UINT8*   pucMsgToSend : 388
#       UINT8*   pucMsgToListen : 390
#       unknown* piSendNode : 392
#       unknown* piListenNode : 394
#     }
#     UINT16   m_uiCRC : 396
#     UINT16[] m_uiNoCRC : 397
#     UINT16   m_uiCRCStart : 399
#     UINT16   m_bWordOrderLH : 400
#     UINT16   m_bSendPartialFrames : 401
#   }
#   UINT16   m_uiTcpState : 402
#   UINT16   m_uiTcpRequestLength : 403
#   UINT16   m_uiTcpResponseLength : 404
#   UINT16   m_bTcpWordOrderLH : 405
#   ???      m_uiTcpChannel : 406
#   UINT16   m_uiTcpBufSize : 407
#   UINT16*  m_uiTcpBufPtr : 408
#   UINT16   m_uiSavedUnitId : 410
# };
#
# ============ CAxf (29) ============
# CAxf {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32    m_lMotionSpeedLimProf : 2
#   INT32    m_lMotionSpeedLimProfWithReducedMaxVal : 4
#   unknown* m_theSpg : 6
#   struct  m_sNextOpModePrepVal {
#     UINT32   ulReqNextAxMode : 8
#     UINT32   ulIxSix : 10
#     UINT32   ulIntStateWordChkBitMask : 12
#     INT32    lTargetValue : 14
#     UINT16   bIsAxfInternalCall : 16
#     UINT16   uiSubMode : 17
#   }
#   UINT16   m_bStartup : 18
#   unknown* m_opmDummy : 20
#   unknown* m_opmManPos : 22
#   unknown* m_opmProfileTorque : 24
#   unknown* m_opmProfileVelocity : 26
#   unknown* m_opmManTune : 28
#   unknown* m_opmGear : 30
#   unknown* m_opmHome : 32
#   unknown* m_opmPosPrf : 34
#   unknown* m_opmActInt : 36
#   unknown* m_opmActUser : 38
#   unknown* m_opmOldSave : 40
#   unknown* m_theJerkFilter : 42
#   unknown* m_theOffsPos : 44
#   unknown* m_theSpeSpeed : 46
#   unknown* m_theSpeTorque : 48
#   unknown*[] m_theDS402OpModes : 50
#   unknown* m_pcAxfDistStop : 78
#   unknown* m_pcAxfBackLashComp : 80
#   UINT16   m_uiLockCounter : 82
#   UINT16   m_uiAxModeUser : 83
#   UINT16   m_uiUserActionWord : 84
#   UINT16   m_uiBergerAxisMode : 85
#   UINT32   m_ulBergerStatusWordBits : 86
#   INT32    m_lPactUsrCycCalc : 88
#   INT32    m_lPactUsrNoModuloCorrCycCalc : 90
#   INT32    m_lPactIntInSpgInternUnits : 92
#   INT32    m_lPactIntBasedOnOneMotRevCycCalc : 94
#   ???      m_sCyclicCalcEnc1PactUsr : 96
#   ???      m_sCyclicCalcEnc2PactUsr : 97
#   INT32    m_lEnc1PactUsr : 98
#   INT32    m_lEnc2PactUsr : 100
#   UINT16   m_bEnc1PactUsrCalculated : 102
#   UINT16   m_bEnc2PactUsrCalculated : 103
#   unknown* m_psSpgDss : 104
#   UINT16   m_uiAxInternMode : 106
#   struct  m_sGlbFlags {
#     UINT16   bitUseProfileForHalt : 107
#   }
#   UINT16   m_bCheckOnPosPref : 108
#   UINT16   m_uiGenFeedForwardType : 109
#   UINT16   m_bModeWithJerkFilter : 110
#   ???      m_eProfilGenType : 111
#   UINT16   m_bModeWithPosWinCheck : 112
#   UINT16   m_bDoMoveModeShortesWayRequestRmac : 113
#   UINT16   m_bInternalFaultResetReq : 114
#   UINT16   m_bSupressSWLimError : 115
#   UINT16   m_bPosNumDenumChanged : 116
#   ???      m_sIntState : 118
#   struct  m_sTask250usValSaved {
#     UINT16   uiLatchedErrClassesWithOutWarnings : 120
#     INT32    lPosSwLimOverrunCheck : 122
#     UINT16   uiExtSigDirectSr : 124
#     UINT16   uiExtSigDirectAndEnaSr : 125
#     ???      sIntState : 126
#     UINT32   ulBergerStatusWordBits : 128
#     INT32    lSpdFeed : 130
#     UINT16   uiUserActionWord : 132
#     INT32    lPosAct : 134
#     INT32    lPosRef : 136
#   }
#   ???      m_uMainloopValSaved : 138
#   UINT16   m_uiTask1msValSaved : 140
#   struct  m_sSwLimitPos {
#     INT32    lSwLimP_Intern : 142
#     INT32    lSwLimN_Intern : 144
#   }
#   struct  m_signal {
#     UINT16   uiMarkerBits : 146
#     UINT16   uiEnableBits : 147
#   }
#   struct  m_ExtSigChgLatchVal {
#     struct  sLimP {
#       UINT16   uiCnt : 148
#       INT32    lPactPosVal : 150
#       INT32    lPrefPosVal : 152
#     }
#     struct  sLimN {
#       UINT16   uiCnt : 154
#       INT32    lPactPosVal : 156
#       INT32    lPrefPosVal : 158
#     }
#     struct  sRef {
#       UINT16   uiCnt : 160
#       INT32    lPactPosVal : 162
#       INT32    lPrefPosVal : 164
#     }
#   }
#   struct  m_sExtSigSupVis {
#     UINT16   uiActual : 166
#     UINT16   uiEnableUser : 167
#     UINT16   uiDisableForExtHoming : 168
#     UINT16   uiEnableIntern : 169
#     UINT16   uiInvert : 170
#     UINT16   uiActualAndInvert : 171
#     UINT16   uiActualFiltered : 172
#     UINT16   uiDirectSr : 173
#     UINT16   uiDirectAndEnaSr : 174
#     UINT16   uiClearSr : 175
#     UINT16   uiDrvErrReactEnaMask : 176
#     UINT16   uiDrvErrReactSigSr : 177
#     UINT16   uiDrvErrReactSigActual : 178
#     UINT16   uiEnableMaskFromFlexIoFunc : 179
#     UINT16   uiRetrigger : 180
#     UINT16   bDisLimSwitchHandling : 181
#     UINT32   ulHwDssBitMaskForRef : 182
#     UINT32   ulHwDssBitMaskForLimN : 184
#     UINT32   ulHwDssBitMaskForLimP : 186
#   }
#   UINT16   m_uiBreakMotionRequestMode : 188
#   UINT16   m_uiBreakMotionActiveMode : 189
#   UINT16   m_bReleaseBreakMotion : 190
#   UINT16   m_uiReqPosAdjustState : 191
#   UINT16   m_uiDisMotionDirByLimSwitch : 192
#   UINT16   m_uiDisMotionDirBySwLimSwitch : 193
#   UINT16   m_bStateOpEnaActiveMinOneTime : 194
#   UINT16   m_bTempLPosRef : 195
#   INT32    m_lDifPosAct_Ref : 196
#   INT32    m_iqMotionSpeedLimProf : 198
#   INT32    m_iqMotionSpeedLimProfWithReducedMaxVal : 200
#   INT32    m_iqAna2LimSpeedValMin : 202
#   INT32    m_iqCurrLimVar2 : 204
#   UINT16   m_uiPwinToutChkActCnt : 206
#   UINT16   m_uiPwinToutChkMaxCnt : 207
#   UINT16   m_uiSpeedWinTimeDownCnt : 208
#   INT32    m_iqMotionSpeedWinIntern : 210
#   UINT16   m_bSpeedTargetReached : 212
#   INT32    m_iqSpeedToBeContinued : 214
#   UINT16   m_uiTorqWinTimeDownCnt : 216
#   INT32    m_iqMotionTorqWinIntern : 218
#   UINT16   m_bTorqueTargetReached : 220
#   struct  m_i64PosRefNew {
#     UINT32   L : 222
#     INT32    H : 224
#   }
#   struct  m_i64PosRefGrid1msOld {
#     UINT32   L : 226
#     INT32    H : 228
#   }
#   struct  m_i64DiffPosRefGrid1ms_0_25 {
#     UINT32   L : 230
#     INT32    H : 232
#   }
#   struct  m_i64DiffPosRefGrid1ms_0_5 {
#     UINT32   L : 234
#     INT32    H : 236
#   }
#   INT32    m_iqVelRefGrid1msBase250usOld : 238
#   INT32    m_iqVelRefGrid1msBase250usNew : 240
#   INT32    m_iqVelRefGrid1msBase250usDiff : 242
#   INT32    m_iqAccRefGrid1msBase250usOld : 244
#   INT32    m_iqAccRefGrid1msBase250usNew : 246
#   INT32    m_iqAccRefGrid1msBase250usDiff : 248
#   UINT32   m_ul250usCounter : 250
#   UINT32   m_ulFastIrqProcessedCounter : 252
#   UINT32   m_ulCycFastXEnd0CntStart : 254
#   UINT32   m_ulCycFastXEnd0CntMeasured : 256
#   UINT16   m_uiMotionBlendType : 258
#   UINT16   m_bBlendedModeIsActive : 259
#   UINT16   m_bBlendedWaitProfChgActive : 260
#   UINT16   m_bBlendedMovChkDirNeg : 261
#   INT32    m_lBlendedAbsPosUser : 262
#   INT32    m_lBlendedProfChgPosSpgIntern : 264
#   INT32    m_lBlendedUsrDefPosSpgIntern : 266
#   INT32    m_lBlendedRangeStartPosSpgIntern : 268
#   INT32    m_lPosBlendCondFoundSpgIntern : 270
#   UINT16   m_uiDiagActSpgStateChk : 272
#   UINT16   m_uiDiagTimeSpgChgAcc : 273
#   UINT16   m_uiDiagTimeSpgChgCnst : 274
#   UINT16   m_uiDiagTimeSpgChgDec : 275
#   UINT16   m_uiDiagTimeSpgChgStand : 276
#   INT32    m_lDiagPosSpgChgAcc : 278
#   INT32    m_lDiagPosSpgChgCnst : 280
#   INT32    m_lDiagPosSpgChgDec : 282
#   INT32    m_lDiagPosSpgChgStand : 284
#   UINT16   m_bCurrLimInputActive : 286
#   UINT16   m_uiAxisType : 287
#   INT32    m_lModuloRngMin : 288
#   INT32    m_lModuloRngMax : 290
#   INT32    m_lModuloRng : 292
#   INT32    m_lModuloMp : 294
#   INT32    m_lModuloKovrMotor : 296
#   INT32    m_lModuloKovrMach : 298
#   UINT16   m_uiModuloPosSetReq : 300
#   INT32    m_lModuloRngOld : 302
#   UINT16   m_uiAxisTypeOld : 304
#   INT32    m_lPosNumOld : 306
#   INT32    m_lPosDenumOld : 308
#   UINT32   m_ulMcHaltRampUser : 310
#   UINT32   m_lMcHaltRampIntern : 312
#   UINT32   m_ulMcStopRampUser : 314
#   UINT32   m_lMcStopRampIntern : 316
#   struct  m_sPosData {
#     INT32    lContIntern : 318
#     INT32    lTargetIntern : 320
#     INT32    lTargUsrPrep : 322
#     INT32    lTargUsr : 324
#     INT32    lUsrCalcIntRemainder : 326
#     UINT16   bTargUsrDefined : 328
#     UINT16   bUsrSetposDone : 329
#     UINT16   bUsrSetnormDone : 330
#   }
#   struct  m_sVelData {
#     INT32    lSystemVelAbsLimitIntern : 332
#     INT32    lVelStartIntern : 334
#     INT32    lVelTargInitIntern : 336
#     INT32    lVelRampTableGridIntern : 338
#   }
#   struct  m_sRampData {
#     INT32    lUpRampAccIntern : 340
#     INT32    lDownRampAccIntern : 342
#     INT32    lQuStpAccIntern : 344
#     struct  sUpRamp {
#       UINT16   uiActiveDescrIndex : 346
#       UINT16   uiPrepDescrIndex : 347
#       ???      asDescription : 348
#     }
#     struct  sDownRamp {
#       UINT16   uiActiveDescrIndex : 504
#       UINT16   uiPrepDescrIndex : 505
#       ???      asDescription : 506
#     }
#   }
# };
#
# ============ Profile (30) ============
# CSpg {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  m_sSpgDss {
#     INT32    lPosTarg : 2
#     INT32    lVelTarg : 4
#     UINT16   uiMode : 6
#     UINT16   uiBreakRequest : 7
#     UINT16   bDisableRequest : 8
#     UINT16   bChgRampTabRequest : 9
#     UINT16   uiMoveState : 10
#     UINT16   uiGlobalState : 11
#     INT32    lVelMax : 12
#     INT32    lVelActAbs : 14
#     INT32    lVelActInclDirSign : 16
#     INT32    lPosAct : 18
#     UINT16   uiPosActRem : 20
#   }
#   UINT16   m_bDoMoveModeShortesWay : 22
#   UINT16   m_bReqMoveDirIsNegAtStandstill : 23
#   INT32    m_l_v_ist_abs : 24
#   INT32    m_lAccValAct : 26
#   UINT32   m_ul_bremsweg : 28
#   UINT32   m_ul_bremsweg_nk : 30
#   UINT16   m_uiInternStateAct : 32
#   UINT16   m_uiInternStateNext : 33
#   INT32    m_lChgVelModCalcDownRamp : 34
#   INT32    m_lChgVelModCalcUpRamp : 36
#   INT32    m_lVelDownRampFirstRow : 38
#   INT32    m_lVelUpRampFirstRow : 40
#   unknown* m_psUpRampTabRowZero : 42
#   unknown* m_psDownRampNormalTabRowZero : 44
#   unknown* m_psUpRampTabRowAct : 46
#   unknown* m_psDownRampTabRowAct : 48
#   INT32    m_lVelDiff : 50
#   INT32    m_lAccValDownRamp : 52
#   INT32    m_l_v_soll_abs : 54
#   ???      m_s_a_tab_linear : 56
# };
#
# CAxfInterpolation (CAxfInterpolation): not found
#
# CAxfUmodeDatSet (CAxfUmodeDatSet): not found
#
# CHwlSyncMotion (CHwlSyncMotion): not found
#
# CSyncCan (CSyncCan): not found
#
# CSyncMotionDss (CSyncMotionDss): not found
#
# ============  (36) ============
# CSlowScope {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   unknown*[] m_Source : 2
#   unknown* m_TriggerSource : 10
#   UINT32   m_ulTimer : 12
#   UINT32   m_ulSamplingTime : 14
#   UINT32[] m_aulChannelData : 16
#   UINT32   m_ulTriggerData : 24
#   ???      m_ScopeStatus : 26
#   UINT16   m_bCriticalSection : 27
#   UINT16   m_bRecorded : 28
# };
#
# ============  (37) ============
# CCap {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   UINT16   m_uiCapEventOnBoard : 2
#   UINT16   m_uiCapEventASIC : 3
#   UINT16   m_uiLastSchedCnt : 4
#   UINT16   m_uiActSmpCapCounterAt62 : 5
#   UINT16   m_uiActSmpEPWM4CounterAt62 : 6
#   UINT16   m_uiActSmpCapCounterAt250 : 7
#   UINT16   m_uiActSmpEPWM4CounterAt250 : 8
#   UINT16   m_uiLastpSmpCapCounter : 9
#   UINT16   m_uiLastSmpEPWM4Counter : 10
#   UINT16   m_uiActSchedCntAt250 : 11
#   UINT16   m_uiProbesStatus : 12
#   UINT16   m_bSyncIsActive : 13
#   UINT16   m_uiLastProbe1ActiveState : 14
#   UINT16   m_uiLastProbe2ActiveState : 15
#   ???      eCaptureControlWord : 16
#   ???      eCaptureControlWordOld : 17
#   INT32    m_iqPosLastEnc1 : 18
#   INT32    m_iqPosLastEnc2 : 20
#   ???      m_sProbeConfig : 22
#   unknown* m_CapUnit : 30
#   unknown* m_pCapAsic : 32
# };
#
# ============  (38) ============
# CMotConfig {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   unknown* theDataUtil : 2
#   unknown* theEncInterface : 4
#   UINT16*  m_pauiSendBuffer : 6
#   UINT16*  m_pauiRecBuffer : 8
#   UINT16*  m_pauiAltTelegramBuffer : 10
#   UINT32   m_ulMotorfilenameOld : 12
#   UINT32   m_ulMotorfilenameNew : 14
#   UINT32   m_ulMotorfilenameConfig : 16
#   struct  m_Flags {
#     UINT16   bitDiff : 18
#   }
# };
#
# ============  (39) ============
# CEncMgr {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  SpeedObserver {
#     INT32    m_iqSpeedActDachCtrl : 2
#     INT32    m_iqSpeedActDach : 4
#     INT32    m_iqIqSpdObsFeed : 6
#     INT32    m_iqSpeedDif : 8
#     INT32    m_iqSpeedActDachOld : 10
#     INT32    m_iqTorqueStoerDachOld : 12
#     INT32    m_iqTorqueStoerDach : 14
#     INT32    m_iqPosActDachOld : 16
#     INT32    m_iqPosActDach : 18
#     INT32    m_iqObserverGain1 : 20
#     INT32    m_iqObserverGain2 : 22
#     INT32    m_iqObserverGain3 : 24
#     INT32    m_iqObserverIqAct : 26
#     UINT16   m_uiI0Observer : 28
#     UINT16   m_uiM0Observer : 29
#     INT32    m_iqScaling3 : 30
#     INT32    m_iqScaling4 : 32
#     INT32    m_iqScaling6 : 34
#     INT32    m_iqScaling7 : 36
#     INT32    m_iqScaling8 : 38
#     INT32    m_iqScaling10 : 40
#     INT32    m_iqPosDachRemainder : 42
#     INT32    m_iqSpeedDachRemainder : 44
#     INT32    m_iqTorqueDachRemainder : 46
#     INT32    m_iqCalcTime : 48
#     UINT16   m_bSpdObsDeactivated : 50
#     INT32*   m_iqpSpeedActCtrlSave : 52
#     INT32*   m_iqpSpeedActCtrlNoInvDirSave : 54
#     unknown* __vptr : 56
#   }
#   unknown* m_ptheHipMotor : 58
#   unknown* m_ptheHipMachine : 60
#   INT32    m_iqDummyVarZero : 62
#   struct  m_DssEnc {
#     INT32    iqEps : 64
#     INT32    iqEps32 : 66
#     INT32    iqEpsE_b : 68
#     INT32    iqEpsE_b0 : 70
#     INT32    iqAlphaEnc : 72
#     INT32    iqAlphaMean : 74
#     INT16    iThetaEnc : 76
#     UINT16   bUseWakes : 77
#     INT32    iqSpeedEncRawMotor : 78
#     INT32    iqSpeedEncRawMachine : 80
#     INT32    m_iqSpeedActCtrlMotor : 82
#     INT32*   iqpSpeedActCtrlLoop : 84
#     INT32*   iqpSpeedActCtrlLoopNoInvDir : 86
#     INT32*   lpSpeedActCtrlLoopTrace : 88
#     INT32*   iqpSpeedActCtrlEnc1 : 90
#     INT32*   iqpSpeedActCtrlEnc1NoInvDir : 92
#     INT32*   lpSpeedActCtrlEnc1Trace : 94
#     INT32*   iqpSpeedActCtrlEnc2 : 96
#     INT32*   iqpSpeedActCtrlEnc2NoInvDir : 98
#     INT32*   lpSpeedActCtrlEnc2Trace : 100
#     INT32*   iqpSpeedEncRawEnc1 : 102
#     INT32*   iqpSpeedEncRawEnc2 : 104
#     INT32    lSpeedActMotorTrace : 106
#     INT32    lSpeedActMachineTrace : 108
#     INT32*   iqpPosActCtrlLoop : 110
#     INT32*   iqpPosActCtrlLoopNoInvDir : 112
#     INT32*   iqpPosActCtrlEnc1 : 114
#     INT32*   iqpPosActCtrlEnc1NoInvDir : 116
#     INT32*   iqpPosActCtrlEnc2 : 118
#     INT32*   iqpPosActCtrlEnc2NoInvDir : 120
#     UINT32   m_ulPactAbsRangeEnc1 : 122
#     UINT32   m_ulPactAbsRangeEnc2 : 124
#     INT32*   iqpPosActHighResEnc1 : 126
#     INT32*   iqpPosActHighResEnc2 : 128
#     INT32    iqPosActHighResMotor : 130
#     INT32    iqPosActHighResMachine : 132
#     INT32    iqPosEncRawMotor : 134
#     INT32    iqPosEncRawMachine : 136
#     INT32    m_iqPosActCtrlMotor250 : 138
#     INT32    m_iqPosActCtrlMachine250 : 140
#     INT32    iqZeroPosMachine : 142
#     UINT16   bZeroCapStatus : 144
#     UINT16   uiZeroPulse : 145
#     INT32    lPhysicalZeroMaxTravel : 146
#     ???      uCommOffIdenWS : 148
#     INT32    m_lEncMachineDenom : 150
#     INT32    m_lEncMachineNum : 152
#     UINT16   m_uiInvDirEncMachine : 154
#     UINT16   m_bMatchedPos : 155
#     INT32    m_lEncMachRemain : 156
#     UINT16   m_uiTimeSpeedSmooth : 158
#     UINT16   m_uiEncCtrl : 159
#     INT32    m_iqEncMachPdif : 160
#     ???      m_uiEnc1TypeOfUse : 162
#     ???      m_uiEnc2TypeOfUse : 163
#     ???      m_uiLocOfPosCtrl : 164
#     UINT16   uiAbsPosEncSource : 165
#     UINT16   bMachineEncIsMultiturn : 166
#     UINT16   bSetAbsPosEn2NotSuport : 167
#     UINT16   m_uiResMultiUsed : 168
#   }
#   unknown* pEncMotor : 170
#   unknown* pEncMachine : 172
#   struct  m_uiEncMotorFeature {
#     UINT16   FeatPosition : 174
#   }
#   struct  m_uiEncMachineFeature {
#     UINT16   FeatPosition : 175
#   }
#   struct  TaunactMotor {
#     INT32    m_iqOutput : 176
#     INT32    m_iqPrmA : 178
#     INT32    m_iqPrmB : 180
#   }
#   struct  TaunactMachine {
#     INT32    m_iqOutput : 182
#     INT32    m_iqPrmA : 184
#     INT32    m_iqPrmB : 186
#   }
#   struct  SpeedActTraceMotor {
#     INT32    m_iqOutput : 188
#     INT32    m_iqPrmA : 190
#     INT32    m_iqPrmB : 192
#   }
#   struct  SpeedActTraceMachine {
#     INT32    m_iqOutput : 194
#     INT32    m_iqPrmA : 196
#     INT32    m_iqPrmB : 198
#   }
#   ???      m_bcCommutOffIdentChannel : 200
#   INT32    m_iqPosActCtrlMotor : 202
#   INT32    m_iqSpeedActCtrlMachine : 204
#   INT32    m_iqPosEncRawMachine : 206
#   INT32    m_iqSpeedEncRawMotorOld62 : 208
#   INT32    m_iqSpeedEncRawMotorAvr : 210
#   INT32    m_iqSpeedEncRawMotorAvr2 : 212
#   INT32    m_iqSpeedEncRawMotorAvr2Old : 214
#   UINT16   m_bUseWakesSave : 216
#   INT16    m_iStepperSpeed : 217
#   UINT16   m_uiStepperMode : 218
#   INT32    m_lPosActCtrlMotorSPGold : 220
#   INT32    m_lPosActCtrlMachineSPGold : 222
# };
#
# ============  (40) ============
# CEncOnBoardSinCosHip {
#   struct  __b_CEncSinCosHipBas {
#     struct  __b_CEncBas {
#       struct  m_CallBitMask {
#         UINT16   Call62 : 0
#       }
#       ???      m_uiEncKind : 1
#       ???      m_uiEncLocation : 2
#       ???      m_uiEncTypeOfUse : 3
#       INT32    m_lEncRawInc : 4
#       UINT32   m_ulSetPosEnc2Usr : 6
#       INT32    m_lDiffPactToSetEncPosValSave2 : 8
#       unknown* __vptr : 10
#     }
#     unknown* m_pHiperface : 12
#     UINT16[] m_auiHipRecData : 14
#     UINT16[] m_auiHipSendData : 24
#     UINT16   m_uiHipAck : 34
#     UINT16   m_uiHipDataLen : 35
#     ???      m_pDriveCall : 36
#     UINT32   m_ulDigIncrPerRev : 38
#     UINT16   m_uiSHLInc : 40
#     UINT16   m_uiSHRHiRes : 41
#     UINT32   m_ulHiResPer : 42
#     UINT32   m_ulHiResMask : 44
#     UINT32   m_ulAbsPhaseTol : 46
#     INT32    m_lQepIncr : 48
#     INT32    m_lDeltaQepIncr : 50
#     INT32    m_lQposlatOld : 52
#     INT32    m_iqSincSin : 54
#     INT32    m_iqSincCos : 56
#     INT32    m_iqHrPhase : 58
#     INT16    m_iQdCor : 60
#     INT16    m_iQdDir : 61
#     INT16    m_iLatchQep : 62
#     INT16    m_iEpsIsUsable : 63
#     UINT16   m_bFinalLatchIn : 64
#     INT32    m_iqPhaseComp : 66
#     INT32    m_iqPaseShiftComp1 : 68
#     INT32    m_iqSpeedUf : 70
#     UINT32   m_ulPhaseDiff : 72
#     UINT32   m_ulPhaseDiffCatch : 74
#     INT32    m_iqTempComp : 76
#     INT32    m_iqTempCompFakt1 : 78
#     INT32    m_iqTempCompFakt2 : 80
#     INT32    m_iqTempCompFakt3 : 82
#     INT32    m_iqCompSum : 84
#     INT16    m_iPositionCorrection_A : 86
#     INT16    m_iPositionCorrection_B : 87
#     INT16    m_iPositionCorrection_C : 88
#     INT32    m_iqEps32_0 : 90
#     INT32[]  m_iqEps32Buf : 92
#     INT32    m_iqEps0 : 124
#     INT32    m_iqEps0Old : 126
#     INT32    m_iqSpeedOld : 128
#     UINT16   m_uiSpeedUfRemain : 130
#     INT32    m_iqAlphaOld1 : 132
#     INT32    m_iqAlphaOld2 : 134
#     INT32    m_iqAlphaOld3 : 136
#     INT32    m_iqMaxSpeedForAbsPos : 138
#     UINT32   m_ulAbsPosReso : 140
#     UINT16   m_uiResoPactToAbsPos : 142
#     UINT32   m_ulAbsPosMask : 144
#     UINT32   m_ulAbsToEps : 146
#     UINT16   m_uiRdAbsState : 148
#     UINT32   m_ulCpuT0_smp : 150
#     INT32    m_iqEps32K0 : 152
#     INT32    m_iqEps32K1 : 154
#     INT32    m_iqEps32Cap : 156
#     UINT32   m_ulTstamp1 : 158
#     UINT16   m_uiRdAbsFlags : 160
#     UINT32   m_ulSincosAbsPos : 162
#     UINT16   m_uiWaitIpoCnt : 164
#     UINT16   m_uiAbortCnt : 165
#     INT32    m_iqPosAct0 : 166
#     INT32    m_iqPosActHighRes0 : 168
#     INT32    m_lHiResAbsPos : 170
#     UINT32   m_ulCpuT0_Read05 : 172
#     INT32    m_iqDeltaEps0Lim : 174
#     UINT16   m_uiAmpMonCnt : 176
#     UINT16   m_uiAmpMonHiCnt : 177
#     INT32    m_iqAmpMonPos : 178
#     INT32    m_iqAmpMonPosLim : 180
#     INT32    m_iqAmpMonSpdLim : 182
#     INT32    m_iqSinCosMinCatch : 184
#     INT32    m_iqSincosSqr_D48 : 186
#     INT32    m_iqSincosSqr_LimH : 188
#     UINT16   m_uiEncTempCnt : 190
#     INT16    m_iThetaEncCrit : 191
#     UINT16   m_uiHipStatus : 192
#     INT32    m_iqEpsE_b_Diff : 194
#     INT32    m_iqEpsE_b_DiffCatch : 196
#     UINT16   m_uiUseAbsPosForMonitor : 198
#     INT16    m_iEpsE_b_Cnt : 199
#     INT32    m_iqEpsE_b_DiffWarn : 200
#     INT32    m_iqEpsE_b_DiffLim : 202
#     INT32    m_iqEpsE_bOld : 204
#     INT16    m_iSpikeCnt : 206
#     UINT16   m_uiToggleRead : 207
#     INT32    m_lDiffPactToSetEncPosValSave : 208
#     UINT32   m_ulSetPosEncUsr : 210
#   }
#   INT32    m_iqPosActMotorOld : 212
#   INT32    m_iqPosActMachineOld : 214
#   INT32    m_iqPosActReset : 216
#   UINT16   m_bPdifMachResetSupress : 218
# };
#
# ============  (41) ============
# CAtu {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32[]  m_iqCurrQpos : 2
#   INT32[]  m_iqCurrQneg : 12
#   INT32[]  m_iqNdiff2 : 22
#   UINT16   m_uiTestTime_Moment : 62
#   INT32    m_lEndSpeedUmin : 64
#   INT32    m_iqMinCurrQ : 66
#   INT32[]  m_iqEquation : 68
#   INT32    m_lSpeedMaxUmin : 72
#   INT32[]  m_aiqInertiaTest : 74
#   UINT16   m_uiTestLoop : 84
#   UINT16   m_uiStimCurrentLoad : 85
#   UINT16   m_uiStimCurrentMin : 86
#   UINT16   m_uiStimCurrentMax : 87
#   INT32    m_lTestSpeedMax : 88
#   INT32    m_iqTestSpeedMax : 90
#   UINT32   m_ulFailedTestPoints : 92
#   UINT32   m_ulFailedTestDebug : 94
#   UINT32   m_ulTestPoints : 96
#   UINT32   m_ulActWaitTime : 98
#   UINT32   m_ulActCntrTime : 100
#   UINT16   m_uiActCtrlParamSet : 102
#   UINT16   m_uiFirstCtrlParamSet : 103
#   UINT16   m_uiTestTime_Paramset : 104
#   UINT16   m_bTest : 105
#   INT32    m_iqTheoKpn : 106
#   INT32    m_iqTheoTnn : 108
#   INT32    m_iqTheoKpp : 110
#   UINT16   m_uiEquivalentTimeConst : 112
#   UINT16   m_uiAdjustDelay : 113
#   INT32    m_iqDeltaKpn : 114
#   INT32    m_iqDeltaKpp : 116
#   INT32    m_iq16Kpn : 118
#   INT32    m_iq16Tnn : 120
#   INT32    m_iq16Kpp : 122
#   UINT16   m_uiTimeTickms : 124
#   UINT16   m_uiN : 125
#   INT32    m_iqSpeedFactor : 126
#   ???      m_sInfoFlags : 128
#   INT16    m_iActDriveSense : 130
#   ???      m_channel : 131
#   UINT16   m_uiSetHalt : 132
#   UINT16   m_uiXEnd : 133
#   UINT16   m_uiStartTime : 134
#   UINT32   m_ulStandPWinTime : 136
#   INT32    m_lFiltOutSpeed : 138
#   INT32    m_lFiltOutCurr : 140
#   INT32    m_lFiltW1Speed : 142
#   INT32    m_lFiltW1Curr : 144
#   INT32    m_lFiltW2Speed : 146
#   INT32    m_lFiltW2Curr : 148
#   INT32    m_lPosMaxMoment : 150
#   INT32    m_lPosMinMoment : 152
#   INT32    m_lPosMaxInertia : 154
#   INT32    m_lPosMinInertia : 156
#   INT32    m_lPosMax : 158
#   INT32    m_lPosMin : 160
#   INT32    m_lStartPositionUsr : 162
#   INT32    m_lStartPosition : 164
#   UINT16   m_uiPosRangeIntern : 166
#   UINT16   m_bPosControlActiv : 167
#   UINT32   m_ulIMaxQStop : 168
#   UINT32   m_ulIMaxHalt : 170
#   UINT32   m_ulIMaxMotor : 172
#   UINT32   m_ulIMaxUser : 174
#   UINT32   m_ulIHalt : 176
#   UINT32   m_ulProfileAcc : 178
#   UINT32   m_ulHaltDeceleration : 180
#   UINT32   m_ulProfileSpd : 182
#   INT32    m_lProfilePos : 184
#   ???      m_State : 186
#   ???      m_SubState : 187
#   ???      m_SubStateMoment : 188
#   ???      m_SubStateParamset : 189
#   ???      m_SubStateInertia : 190
#   ???      m_SubStateInit : 191
#   ???      m_SubStateCmftune : 192
#   UINT16   m_uiState : 193
#   UINT16   m_uiPosRange : 194
#   UINT16   m_uiRotSense : 195
#   INT32    m_lStimCurrent : 196
#   UINT16   m_uiRotSpeed : 198
#   UINT16   m_uiFrictionMoment : 199
#   INT16    m_iMoment : 200
#   UINT16   m_uiWaitTime : 201
#   UINT16   m_uiOptimize : 202
#   INT32    m_iqInertia : 204
#   UINT16   m_uiRotSpeedTolerance : 206
#   UINT16   m_uiCoupling : 207
#   UINT16   m_uiOptimizeMax : 208
#   INT32    m_lPosRangeUsr : 210
#   INT32    m_lRotSpeedUsr : 212
#   INT32    m_lRotSpeedUsrTolerance : 214
#   UINT16   m_uiNonUsrParamBitMask : 216
#   UINT16   m_uiUsrParamBitMask : 217
#   UINT32   m_uiUsrRevInConsistFlag : 218
#   UINT32   m_ulInertiaRatio : 220
#   UINT32   m_ulTParaSwitchUsr : 222
#   UINT16   m_uiCntFFT : 224
#   UINT16   m_uiStepCritical : 225
#   UINT16   m_uiStepProgress : 226
#   struct  m_sFft {
#     INT32*   ipcbptr : 228
#     INT32*   tfptr : 230
#     INT16    size : 232
#     INT16    nrstage : 233
#     INT32*   magptr : 234
#     INT32*   winptr : 236
#     INT32    peakmag : 238
#     INT16    peakfrq : 240
#     INT16    ratio : 241
#     ???      init : 242
#     ???      calc : 244
#     ???      split : 246
#     ???      mag : 248
#     ???      win : 250
#   }
#   UINT16*  m_puiManualTuningTrig : 252
#   UINT16   m_uiIdxOverShoot : 254
#   UINT16   m_uiPosiCastDmp : 255
#   INT32    m_iqRotSpeed : 256
#   INT32[]  m_plMechCpl : 258
#   ???      m_punionFftData : 268
# };
#
# paramMotorCorr (ParamMotorCorrStruct): not found
#
# ============ CSpeedCtrl (43) ============
# CSpeedCtrl {
#   struct  LeadLag {
#     struct  PT1part {
#       INT32    m_iqOutput : 0
#       INT32[]  m_iqPrmA : 2
#       INT32[]  m_iqPrmB : 8
#     }
#     INT32    m_iqOutput : 14
#     INT32    m_iqPrmK : 16
#     INT32[]  m_iqOutputLim : 18
#   }
#   struct  PidDT1part {
#     struct  PT1part {
#       INT32    m_iqOutput : 22
#       INT32    m_iqPrmA : 24
#       INT32    m_iqPrmB : 26
#     }
#     INT32    m_iqOutput : 28
#     INT32    m_iqLimit : 30
#     INT32    m_iqPrmK : 32
#   }
#   struct  OSup {
#     INT32    m_iqOutput : 34
#     INT32[]  m_iqDampRatio : 36
#     UINT16[] m_uiDelayTime : 40
#     UINT16   m_uiIdx : 42
#     INT32*   m_piqLoopMem : 44
#     UINT16   m_bFilterActive : 46
#   }
#   INT32[]  m_iqKpSpeed : 48
#   INT32[]  m_iqKiSpeed : 54
#   INT32    m_iqSpeedInteg : 60
#   INT32[]  m_iqIqFricMax : 62
#   INT32    m_iqSpeedRef : 66
#   INT32    m_iqSpeedDif : 68
#   INT32    m_iqYSpeed : 70
#   INT32    m_iqSpeedPpart : 72
#   INT32    m_iqSpeed_man : 74
#   INT32    m_iqSpdLim : 76
#   INT32    m_iqIqSpeedLimRef : 78
#   INT32    m_iqAccFfdTerm : 80
#   UINT16   m_bSwitchAccFfd : 82
#   INT32    m_iqGainAccFfdCurrent : 84
#   INT32    m_iqAccFfdLim : 86
#   INT32    m_iqIqRefCtrl : 88
#   UINT16   m_uiLimitFlg : 90
#   INT32    m_iqSpeedAxf : 92
#   INT32    m_iqSpeedFricConstInv : 94
#   INT32    m_iqSpeedFricConst : 96
#   INT32    m_iqIqFricTerm : 98
#   INT32    m_iqSpeedZeroClampHigh : 100
#   INT32    m_iqSpeedZeroClampLow : 102
#   UINT16   m_uiResetSpeedInteg : 104
#   INT32[]  m_plSpdMem : 106
#   UINT16   m_uiFilterFlushDone : 706
# };
#
# ============  (44) ============
# CHwlEsim {
#   unknown* sEsim : 0
#   INT32    m_iqInputPosRef24 : 2
#   INT32    m_iqEsimSpdRef : 4
#   INT32    m_iqEsimPosRef : 6
#   INT16    m_iEsimRefPosOffset : 8
#   INT32    m_iqEsimPosActInt : 10
#   INT32    m_iqEsimPosAct : 12
#   INT32    m_iqEsimPosActExt : 14
#   INT32    m_iqEsimSpdAct : 16
#   INT32    m_iqEsimSpdActOld : 18
#   INT32    m_iqEsimPosDif : 20
#   INT32    m_iqEsimPosDifExt : 22
#   INT32    m_iqEsimPllKp : 24
#   INT32    m_iqEsimOneRev : 26
#   INT32    m_iqEsimHalfRev : 28
#   INT32    m_iqSpdInputToEsimScal : 30
#   UINT16   m_uiEsimState : 32
#   UINT16   m_bActive : 33
#   UINT16   m_bJustNoPuls : 34
#   UINT16   m_uiModePulsOld : 35
#   UINT16   m_uiEsimCtrl : 36
#   UINT16   m_uiHwReload : 37
#   UINT16   m_uiHwReloadOld : 38
#   UINT16   m_uiHwCounter : 39
#   UINT16   m_uiEsimRes : 40
#   UINT16   m_uiQepCntOld : 41
#   UINT16   m_uiInitialABState : 42
#   UINT16   m_uiInitialIdxCnt : 43
#   UINT16   m_uiQepAtInit : 44
#   UINT16   m_uiCapTimerLat : 45
#   UINT16   m_uiEPWM4_smp : 46
#   UINT16   m_uiQepStatus : 47
#   UINT16   m_uiDigitsAftDp : 48
#   UINT16   m_uiEsimCorrection : 49
# };
#
# ============  (45) ============
# CHwlSuperVision {
#   struct  m_CtrlBits {
#     UINT16   bSchedCtrl : 0
#   }
#   UINT16   m_uiMax62usTime : 1
#   UINT16   m_uiMin62usTime : 2
#   UINT16   m_uiMax250usTime : 3
#   UINT16   m_uiMin250usTime : 4
#   UINT16   m_uiMax1msTime : 5
#   UINT16   m_uiMin1msTime : 6
#   UINT16   m_uiMaxFBSchedTime : 7
#   UINT16   m_uiMinFBSchedTime : 8
#   UINT16   m_uiMsTics : 9
#   UINT16   m_uiMsTicOld : 10
#   UINT16   m_uiTime12V : 11
#   UINT16   m_uiMaxPosCtrl : 12
#   UINT16   m_uiReadPtrArr : 13
#   UINT16*  m_puiCheckStack : 14
#   UINT16*  m_pui0Pointer : 16
#   UINT32   m_ulAverageFBSchedTime : 18
#   UINT32   m_ulLoadCtrl : 20
#   UINT32   m_uiTmp : 22
#   UINT32   m_ulMainFBTimeSmp : 24
#   UINT32   m_uiMaxFBMainTime : 26
#   UINT32   m_uiMinFBMainTime : 28
#   UINT32   m_ulAverageFBMainTime : 30
#   UINT32   m_ul1msSmp : 32
#   UINT32   m_ulAverage1msTime : 34
#   UINT32   m_ulMainTimeSmp : 36
#   UINT32   m_uiMaxMainTime : 38
#   UINT32   m_uiMinMainTime : 40
#   UINT32   m_ulAverageMainTime : 42
#   UINT32   m_ulFBSchedSmp : 44
#   UINT32   m_ulAverage62usTime : 46
#   UINT32   m_ulPosCtrlSmp : 48
#   UINT32   m_ul250usSmp : 50
#   UINT32   m_ulAverage250usTime : 52
#   UINT32   m_ulScheduleTimeCtrl : 54
#   UINT32   m_ul62usSmp : 56
# };
#
# ============  (46) ============
# CHwlPDAB {
#   UINT16   m_uiPulseOld : 0
#   UINT16   m_uiTimeAtPulse_smp : 1
#   UINT16   m_uiPulseIn_smp : 2
#   UINT16   m_uiTimePLD_smp : 3
#   UINT16   m_uiTimeEpwm4_smp : 4
#   INT16    m_iPulseDif : 5
#   UINT16   m_uiRefPulseFine : 6
#   UINT16   m_uiRefPulseCalcState : 7
#   UINT16   m_uiNoNewPulseTime : 8
#   UINT16   m_uiPulszustand : 9
#   UINT16   m_uiMaxPulseWarnLevel : 10
#   UINT16   m_uiMaxPulseErrLevel : 11
#   UINT16   m_bSinglestep : 12
#   unknown* m_sEnc : 14
#   UINT32   m_ulTimeCapAct : 16
#   UINT32   m_ulTimeCapOld : 18
#   UINT32   m_ulTimeCapDif : 20
#   UINT32   m_ulTimeCmprAct : 22
#   UINT32   m_ulTimeBase_smp : 24
#   INT32    m_lF_act : 26
#   INT32    m_lPulseInteg : 28
#   INT32    m_lRefPulsCoarse : 30
#   INT32    m_lTestVar : 32
#   UINT16   m_uiEncCtrlReg_smp : 34
#   INT16    m_iSigErrCnt : 35
#   UINT16   m_uiPulseOccured : 36
# };
#
#  (CSbi): not found
#
#  (CEprSimFileMgr): not found
#
# ============ CPms (49) ============
# CPms {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   unknown* m_compatibility : 2
#   unknown* m_UsrRescale : 4
#   ???      m_ChannelInfoList : 6
#   ???      m_eAccessChannel : 40
#   UINT16   m_bAccessExclusive : 41
#   UINT16   m_bFreezeAccess : 42
#   UINT32   m_ulBlockInitUp : 44
#   UINT32   m_ulBlockInitDown : 46
#   UINT32   m_ulBlockLength : 48
#   UINT32   m_ulBlockDownloadOffset : 50
#   unknown* m_configTransfer : 52
# };
#
# ============ CPmsConfigTransfer (50) ============
# CPmsConfigTransfer {
#   struct  __b_CBasFileTransferAccess {
#     unknown* __vptr : 0
#   }
#   UINT16   m_bIsCompatible : 2
#   UINT16   m_uiConfigLockState : 3
#   ???      m_configLockChannel : 4
#   UINT16*  m_puiBuffer : 6
#   UINT16   m_uiBufferLen : 8
#   UINT16   m_uiFileLength : 9
#   UINT32   m_ulFileIdOfBuffer : 10
#   UINT16   m_uiUploadState : 12
#   UINT16   m_uiUploadDefIdx : 13
#   UINT16   m_uiUploadDefLen : 14
#   UINT16*  m_puiUploadDefPtr : 16
#   unknown* m_psUploadData : 18
#   UINT16   m_uiUploadDsetNum : 20
#   UINT16   m_uiUploadDsetEnd : 21
#   UINT16*  m_puiUploadDsetData : 22
#   UINT16   m_uiDownloadMotorEnd : 24
#   UINT32   m_ulDownloadErrCode : 26
#   UINT32   m_ulDownloadEepromBits : 28
# };
#
# ============ CSpe_Speedprofile (51) ============
# CSpe {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32    m_l_act : 2
#   INT32    m_l_actnew : 4
#   INT32    m_l_targetnew : 6
#   INT32    m_l_acc : 8
#   INT32    m_l_decc : 10
#   INT32    m_l_deccact : 12
#   UINT16   m_ui_state : 14
#   UINT16   m_ui_actionstat : 15
# };
#
# ============ CSpe_Currentprofile (52) ============
# CSpe {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32    m_l_act : 2
#   INT32    m_l_actnew : 4
#   INT32    m_l_targetnew : 6
#   INT32    m_l_acc : 8
#   INT32    m_l_decc : 10
#   INT32    m_l_deccact : 12
#   UINT16   m_ui_state : 14
#   UINT16   m_ui_actionstat : 15
# };
#
# ============ CAxfOpModeDss (53) ============
# CAxfOpModeDss {
#   struct  FromAxfAnalog {
#     INT32    lSpdRefAnalog : 0
#     INT32    lTrqRefAnalogPerCent : 2
#     INT32    iqSpdLimAnalog : 4
#     INT32    iqTrqLimAnalog : 6
#     UINT16   uiAnaInModesProcessed : 8
#   }
#   struct  ToAxfAnalog {
#     UINT16   uiAnaInModesRequested : 10
#     INT32    iqSpdScalAna1 : 12
#     INT16    iTrqScalAna1PerCent : 14
#     INT32    iqSpdLimAna1 : 16
#     INT32    iqTrqLimAna1 : 18
#     INT32    iqSpdScalAna2 : 20
#     INT16    iTrqScalAna2PerCent : 22
#     INT32    iqSpdLimAna2 : 24
#     INT32    iqTrqLimAna2 : 26
#   }
# };
#
# ============ CAxfAnalog (54) ============
# CAxfAnalog {
#   INT32    m_iqAnaInVal_1 : 0
#   INT32    m_iqAnaInVal_2 : 2
#   UINT16   m_uiAnalogInputModesAna1 : 4
#   UINT16   m_uiAnalogInputModesAna2 : 5
#   UINT32   m_ulAna2VoltageWindowTime : 6
#   INT32    m_iqAna2InFilt : 8
#   INT32    m_iqAna2VoltageWindow : 10
#   INT32    m_iqAna2InputMax : 12
#   INT32    m_iqAna2InputMin : 14
#   UINT32   m_ulAna2VoltageWindowCnt : 16
#   INT32    m_iqAna2Voltage4AccMin : 18
#   INT32    m_lAccAct : 20
#   INT32    m_lDecAct : 22
# };
#
# ============ CAxfUmodeProfileVelocity (55) ============
# CAxfUmodeProfileVelocity {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitQuickStop : 4
#   UINT16   m_uiProfileVelocityStartUser : 5
#   UINT16   m_uiProfileVelocityStartIntern : 6
#   INT32    m_lTargetVelocityUsr : 8
#   INT32    m_iqTargetVelocityIQ : 10
# };
#
# ============ CAxfUmodeProfileTorque (56) ============
# CAxfUmodeProfileTorque {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitQStop : 4
#   UINT16   m_uiProfileTorqueStartUser : 5
#   UINT16   m_uiProfileTorqueStartIntern : 6
#   INT16    m_iTargetTorqueUsr : 7
#   INT32    m_iqTargetTorqueContIQ : 8
# };
#
# ============ CAxfUmodeGear (57) ============
# CAxfUmodeGear {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitDenomChanged : 4
#   UINT16   m_uiGearStartUser : 5
#   UINT16   m_uiGearStartIntern : 6
#   INT32    m_lNum : 8
#   INT32    m_lDenom : 10
#   INT32    m_lNum_GearRes : 12
#   INT32    m_lDenom_GearRes : 14
#   INT32    m_lNum_Set1 : 16
#   INT32    m_lDenom_Set1 : 18
#   INT32    m_lNum_Set2 : 20
#   INT32    m_lDenom_Set2 : 22
#   INT32    m_lRemainder : 24
#   INT32    m_lGearInCntOld : 26
#   UINT16   m_uiGearInCntFineOld : 28
#   INT32    m_lPosAddGear : 30
#   INT32    m_lPosAddGearOld : 32
#   UINT16   m_uiPosAddGearFine : 34
#   INT32    m_lPosRefGear : 36
#   UINT16   m_uiPosRefGearFine : 38
#   INT32    m_lFeedForwardVelSpgInternOld : 40
#   INT32    m_lAccFeedForwardSpgInternOld : 42
#   INT32    m_lMaxAllowedChgOfPosInternInclRemAbs : 44
#   INT32    m_lSpeefForLibraryTest : 46
# };
#
# CAxfUmodeCsp (CAxfUmodeCsp): not found
#
# ============ CAxfUmodePosPrf (59) ============
# CAxfUmodePosPrf {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitContinueMovePossible : 4
#   UINT16   m_uiSpeedTargetUserRpm : 5
#   INT32    m_lStartAbsPosUser : 6
#   INT32    m_lStartRelPosPrefUser : 8
#   UINT32   m_ulSpeedTargetUser : 10
#   INT32    m_lStartRelPosPactUser : 12
#   UINT32   m_ulSpeedTargetNextUser : 14
#   INT32    m_lPosTargetIntern : 16
#   INT32    m_lSpeedTargetIntern : 18
#   INT32    m_lSpeedTargetNextIntern : 20
#   INT32    m_lCaptPosUser : 22
# };
#
# ============ CAxfUmodeHome (60) ============
# CAxfUmodeHome {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitDoHomeCycFctCall : 4
#   UINT16   m_uiHomeStartUser : 5
#   UINT16   m_uiHomeStartIntern : 6
#   UINT16   m_uiTimeTick1msFctCallSave : 7
#   UINT16   m_uiHomeStateIntern : 8
#   UINT16   m_uiAckData : 9
#   UINT16   m_uiHomeStateInternSave : 10
#   UINT16   m_uiHardTimeFaultResetBegin : 11
#   UINT16   m_uiHomeStateInternAfterFaultRes : 12
#   UINT16   m_uiTargetLimit : 13
#   UINT16   m_uiActiveLimit : 14
#   UINT16   m_uiIndexSearchDir : 15
#   UINT16   m_uiSignalLevelStartSave : 16
#   UINT16   m_uiEnabledSigsStartSave : 17
#   UINT16   m_uiEnaSigsWorkSave : 18
#   UINT16   m_uiSigLevWorkSave : 19
#   UINT16   m_uiLimitsWorked : 20
#   UINT16   m_uiIndexSearchType : 21
#   UINT16   m_uiSubStatePhysIndex : 22
#   UINT16   m_uiHomeRefSwitchMod : 23
#   INT32    m_lDspPosStartSearchIndex : 24
#   INT32    m_lHomeSpeedOutRefWithCorrStartSpeedIntern : 26
#   INT32    m_lPosDiffSwitchToIndex : 28
#   INT32    m_lSetPosValueUser : 30
#   INT32    m_lHomeSpeedToRefIntern : 32
#   INT32    m_lHomeSpeedOutRefIntern : 34
#   INT32    m_lHomePosOutRefIntern : 36
#   INT32    m_lHomePosDistRefIntern : 38
#   INT32    m_lHomeRefAppPosIntern : 40
#   INT32    m_lHomePosSrchLimMaxIntern : 42
# };
#
# CMTest (CMTest): not found
#
# ============ CSpe_QStopHalt (62) ============
# CSpe {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32    m_l_act : 2
#   INT32    m_l_actnew : 4
#   INT32    m_l_targetnew : 6
#   INT32    m_l_acc : 8
#   INT32    m_l_decc : 10
#   INT32    m_l_deccact : 12
#   UINT16   m_ui_state : 14
#   UINT16   m_ui_actionstat : 15
# };
#
#  (CEncAnaSinCos): not found
#
#  (CEncAnaSinCosHall): not found
#
#  (CEncAnaSinCosHip): not found
#
#  (): not found
#
# ============  (67) ============
# CAxfUmodeManPos {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_bitManPosStartUserChg : 4
#   UINT16   m_uiManPosStartUser : 5
#   UINT16   m_uiManPosMethod : 6
#   UINT16   m_uiTimeTick1msFctCallSave : 7
#   INT32    m_lManPosSpeedSlowIntern : 8
#   INT32    m_lManPosSpeedFastIntern : 10
#   INT32    m_lManPosStepPosDistIntern : 12
#   UINT16   m_uiManPosStateIntern : 14
#   UINT16   m_uiAckData : 15
#   UINT16   m_uiManPosStateInternSave : 16
#   UINT16   m_uiManuStateCtrl : 17
#   UINT16   m_uiManMotionInWork : 18
#   UINT16   m_uiDelayTimeStartValue : 19
#   UINT16   m_uiManPosStartReqForRestart : 20
# };
#
# ============  (68) ============
# CMemCardFileMgr {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   unknown* m_pProtMemCard : 2
#   struct  m_AdminBlock {
#     UINT16   uiAdrFat : 4
#     UINT16   uiConfFilesCRC : 5
#     UINT16   uiAdminFlags : 6
#     UINT16   uiCardComp : 7
#     UINT32   ulDeviceID : 8
#     UINT32[] ulDeviceSerNumber : 10
#     UINT32[] ulMandMName : 18
#   }
#   ???      m_FatBlock : 26
#   UINT16   m_uiState : 92
#   UINT16   m_uiFileSize : 93
#   UINT16   m_uiFileMemCardAdr : 94
#   UINT16   m_uiSizeUpDown : 95
#   UINT16[] m_uiBuffer : 96
#   UINT16   m_uiDownSizeAct : 112
#   UINT16   m_uiDownAdrAct : 113
#   UINT16   m_uiMemCardRequest : 114
#   UINT16   m_uiCardState : 115
#   UINT16*  m_puiFileData : 116
#   UINT16*  m_puiDataUpDown : 118
#   UINT32   m_ulFatFileID : 120
#   UINT32   m_ulBitsWriteConfFile : 122
#   UINT32   m_ulBitsReadConfFile : 124
#   UINT16   m_bMemCardReadyToUse : 126
#   UINT16   m_bRead : 127
# };
#
#  (CEncDigInc): not found
#
#  (CEncResolver): not found
#
# ============ CHwlHip (71) ============
# CHwlHip {
#   unknown* m_theHipCom : 0
#   UINT16[] m_auiTelegrammBuffer : 2
#   UINT16   m_uiMaxTelLen : 27
#   UINT16   m_uiUserDataLength : 28
#   UINT16   m_uiTelTimeout : 29
#   UINT16   m_uiSendChar : 30
#   UINT16   m_uiReceiveChar : 31
#   UINT16   m_uiTelOutDataLen : 32
#   UINT16   m_uiCrcReceived : 33
#   UINT16   m_uiCrcCheckFailed : 34
#   struct  m_Flags {
#     UINT16   bitSendCmdFinished : 35
#   }
#   UINT16   m_uiFault2xCounter : 36
#   UINT16   m_uiFault2xMax : 37
#   UINT16   m_bFault2xOccurs : 38
#   UINT16   m_uiFault20Counter : 39
#   UINT16   m_uiFault20Max : 40
#   UINT16   m_bFault20Occurs : 41
#   UINT16   m_uiEncoderStatusErrCount : 42
#   UINT16   m_uiEncoderStatusLastErr : 43
#   ???      m_MState : 44
#   ???      m_SSInit : 45
#   ???      m_SSCmd : 46
#   UINT16   m_PF_uiErrCounter : 47
#   UINT16   m_PF_uiCommand : 48
#   UINT16   m_PF_uiSendDataLength : 49
#   UINT16*  m_PF_puiResponseCmd : 50
#   UINT16*  m_PF_puiResponseData : 52
#   UINT16*  m_puiResponseDataLen : 54
#   UINT16*  m_PF_puiSendData : 56
#   ???      m_psData : 58
#   UINT32   m_PF_errErrMem : 60
#   UINT32   m_PF_ulTOCounter : 62
#   unknown* __vptr : 64
# };
#
# ============ CEncSpeedObserver (72) ============
# CEncSpeedObserver {
#   INT32    m_iqSpeedActDachCtrl : 0
#   INT32    m_iqSpeedActDach : 2
#   INT32    m_iqIqSpdObsFeed : 4
#   INT32    m_iqSpeedDif : 6
#   INT32    m_iqSpeedActDachOld : 8
#   INT32    m_iqTorqueStoerDachOld : 10
#   INT32    m_iqTorqueStoerDach : 12
#   INT32    m_iqPosActDachOld : 14
#   INT32    m_iqPosActDach : 16
#   INT32    m_iqObserverGain1 : 18
#   INT32    m_iqObserverGain2 : 20
#   INT32    m_iqObserverGain3 : 22
#   INT32    m_iqObserverIqAct : 24
#   UINT16   m_uiI0Observer : 26
#   UINT16   m_uiM0Observer : 27
#   INT32    m_iqScaling3 : 28
#   INT32    m_iqScaling4 : 30
#   INT32    m_iqScaling6 : 32
#   INT32    m_iqScaling7 : 34
#   INT32    m_iqScaling8 : 36
#   INT32    m_iqScaling10 : 38
#   INT32    m_iqPosDachRemainder : 40
#   INT32    m_iqSpeedDachRemainder : 42
#   INT32    m_iqTorqueDachRemainder : 44
#   INT32    m_iqCalcTime : 46
#   UINT16   m_bSpdObsDeactivated : 48
#   INT32*   m_iqpSpeedActCtrlSave : 50
#   INT32*   m_iqpSpeedActCtrlNoInvDirSave : 52
#   unknown* __vptr : 54
# };
#
#  (CEncDigSSI): not found
#
# ============ CComiocFieldbus (74) ============
# CComiocFieldbus {
#   struct  __b_CBasFieldbus {
#     struct  __b_CBasComponent {
#       unknown* __vptr : 0
#     }
#     ???      m_eFbusType : 2
#     UINT16   m_bAsyncParamAccess : 3
#   }
#   struct  __b_CPmsAsyncAccessBas {
#     UINT16   m_uiAsyncReqTime : 4
#     UINT16   m_uiAsyncReqState : 5
#     UINT16   m_bAsyncReqIsRead : 6
#     UINT32   m_ulAsyncReqIxSix : 8
#     UINT32   m_ulAsyncReqValue : 10
#     UINT32   m_ulAsyncReqErrCode : 12
#     unknown* __vptr : 14
#   }
#   UINT16   m_bInitInMainloopDone : 16
#   UINT16   m_bModuleConnected : 17
#   UINT32   m_ulErrAdmErrGen : 18
#   UINT16   m_uiChnlNotify : 20
#   UINT16   m_uiLastParamSvcErrCode : 21
#   UINT16   m_uiCfgChangeFlags : 22
#   UINT16   m_bCfgChangeEeprom : 23
#   UINT32   m_ulCfgChangePollTime : 24
#   INT16    m_iCfgChangeIndex : 26
#   UINT16   m_uiCfgChangeLen : 27
#   UINT16*  m_puiCfgChangeDef : 28
#   UINT16[] m_puiIpCardAct : 30
#   UINT16   m_uiEepromStoreCnt : 34
#   UINT16[] m_puiCacheChangeTab : 35
#   UINT16   m_uiCacheChangeTabIndex : 38
#   UINT16   m_uiJobErrParamFirst : 39
#   UINT16   m_uiJobErrCodeFirst : 40
#   UINT16   m_uiJobErrParamLast : 41
#   UINT16   m_uiJobErrCodeLast : 42
#   ???      m_pAsyncJobList : 44
#   unknown* m_pJob : 62
#   struct  m_sDPRAM_Rx {
#     UINT16   uiRxPDOBufMgmt : 64
#     UINT16   uiStateReq : 65
#     unknown* psRxConf : 66
#     UINT32*  pulRxBuf : 68
#     UINT16   uiCnt : 70
#     UINT16   uiPDOCnt : 71
#   }
#   struct  m_sDPRAM_Tx {
#     UINT16   uiBufMgmt : 72
#     UINT16   uiStateRsp : 73
#     UINT16   uiError : 74
#     unknown* psTxConf : 76
#     UINT32*  pulTxBuf : 78
#     UINT16   uiCnt : 80
#     UINT16   uiPDOCnt : 81
#   }
#   UINT16   m_uiRxPDOBufSel : 82
#   UINT16   m_uiRxPDOBufSelLast : 83
#   UINT32[] m_aPDORxA : 84
#   UINT32[] m_aPDORxB : 116
#   UINT16   m_uiTxPDOBufSel : 148
#   UINT32[] m_aPDOTxA : 150
#   UINT32[] m_aPDOTxB : 182
#   UINT16   m_uiCountATBytes : 214
#   UINT16   m_uiCountMDTBytes : 215
#   UINT16   m_uiTxPDOreq : 216
#   UINT16   m_uiInpShiftTimeTicks : 217
#   UINT16   m_uiMstState : 218
#   UINT16   m_uiSlvState : 219
#   UINT16   m_uiSlvSyncedBit : 220
#   UINT16   m_uiSyncType : 221
#   UINT16   m_uiSlaveAdrAct : 222
#   UINT16   m_uiPDOmaskFB : 223
#   UINT32   m_ulDiagSizeAdr : 224
#   UINT32   m_ulDiagData : 226
#   UINT32   m_uiTxErrCnt : 228
#   UINT32   m_ulCycleTime : 230
#   UINT32   m_ulInpShiftTime : 232
# };
#
# ============  (75) ============
# CAxfOffsPos {
#   unknown* m_theSpeOffsPos : 0
#   INT32    m_lPosOffsetTarget : 2
#   struct  m_i64PosOffsetActual {
#     UINT32   L : 4
#     INT32    H : 6
#   }
#   struct  i64VelSPEAct {
#     UINT32   L : 8
#     INT32    H : 10
#   }
#   struct  i64VelSPEActOld {
#     UINT32   L : 12
#     INT32    H : 14
#   }
#   struct  i64VelSPEActAbs {
#     UINT32   L : 16
#     INT32    H : 18
#   }
#   UINT16   m_bDoOffsetCalc : 20
#   UINT16   m_bOffsetCalcFinish : 21
#   UINT16   m_uiAckData : 22
#   INT32    m_lPosOffsSetAbsolute : 24
#   INT32    m_lAbsPosUser : 26
#   INT32    m_lRelPosUser : 28
#   UINT16   m_uiActivateOffset : 30
#   INT32    m_lOffsPosAccIntern : 32
#   INT32    m_lBrakeDistance : 34
#   INT32    m_lGainBrakeTime : 36
#   INT32    m_lVelTaretIntern : 38
#   INT32    m_lVelTaretInternMax : 40
#   INT32    m_lVelActInternOld : 42
#   INT32    m_lVelActIntern : 44
#   UINT16   m_bSetVelActIntern : 46
#   INT32    m_lDeltaPosOffMin : 48
# };
#
# ============ CSpe_OffsPos (76) ============
# CSpe {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   INT32    m_l_act : 2
#   INT32    m_l_actnew : 4
#   INT32    m_l_targetnew : 6
#   INT32    m_l_acc : 8
#   INT32    m_l_decc : 10
#   INT32    m_l_deccact : 12
#   UINT16   m_ui_state : 14
#   UINT16   m_ui_actionstat : 15
# };
#
# CPreg (CPreg): not found
#
# ============  (78) ============
# CBasErrorManager {
#   UINT16   m_uiStopFault : 0
#   UINT16   m_uiStopFaultInfo : 1
#   UINT32   m_ulStopFaultTime : 2
#   UINT16   m_uiStopFaultClass : 4
#   UINT16   m_uiStopFaultSuperv : 5
#   UINT32   m_ulLastWarningEvent : 6
#   UINT32   m_ulLastWarningCyclic : 8
#   UINT16   m_uiErrClassesActive : 10
#   UINT16   m_uiErrClassesLatched : 11
#   UINT32   m_ulErrBitsActive : 12
#   UINT32   m_ulErrBitsLatched : 14
#   UINT32   m_ulErrBitsToSuppress : 16
#   UINT32   m_ulErrChangeToWarning : 18
#   UINT32   m_ulWarnBitsActive : 20
#   UINT32   m_ulWarnBitsLatched : 22
#   UINT16   m_uiWarnBitTimer : 24
#   UINT16[] m_uiDynErrClassList : 25
#   UINT32   m_ulInfoCode : 30
#   UINT16   m_uiInfoData : 32
#   UINT16   m_uiInvalidParamMdbAdr : 33
# };
#
# CMdbCAN (CMdbCAN): not found
#
#  (CEncAnaSinCosH2): not found
#
# ============ CAxfFIR (81) ============
# CAxfFIR {
#   INT32    m_lFactorAi : 0
#   struct  m_i64SpeedSum {
#     UINT32   L : 2
#     INT32    H : 4
#   }
#   UINT16   m_uiDisJerkCalcCnt : 6
#   UINT16   m_uiFifoReadIx : 7
#   UINT16   m_uiFifoWriteIx : 8
#   UINT16   m_uiUsedEntries : 9
#   UINT16   m_bJerkEnd : 10
#   INT32    m_lInPrefOldInt : 12
#   UINT16   m_uiInPrefOldRemainder : 14
#   struct  m_i64OutPrefCalc {
#     UINT32   L : 16
#     INT32    H : 18
#   }
#   INT32    m_lSpeedSpgRegInternAbsOld : 20
#   ???      m_i64Fifo : 22
# };
#
# ============  (82) ============
# CFastScope {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   UINT32   m_ulPowerUpTime : 2
#   unknown* m_TriggerSource : 4
#   unknown*[] m_SourceCha : 6
#   unknown*[] m_SourcePar : 14
#   UINT32   m_ulSamplingPeriod : 20
#   UINT32   m_ulSamplingPeriodCount : 22
#   UINT32   m_ulSchedulerTime : 24
#   INT32    m_lFilterOutput : 26
#   INT32    m_lOldTriggerValue : 28
#   INT32    m_lNewTriggerValue : 30
#   UINT32   m_ulMask1 : 32
#   UINT32   m_ulMask2 : 34
#   INT32    m_lTriggerValue1 : 36
#   INT32    m_lTriggerValue2 : 38
#   INT32    m_lTriggerValue1Int : 40
#   INT32    m_lTriggerValue2Int : 42
#   UINT16   m_uiFilterTime : 44
#   UINT32   m_ulTriggerTime : 46
#   UINT16   m_uiTriggerCounter : 48
#   UINT16   m_uiTriggPos : 49
#   UINT16   m_bTasksSync : 50
#   UINT16   m_uiScopeMode : 51
#   INT16    m_iTriggerDelay : 52
#   ???      m_TriggerCond : 53
#   ???      m_TriggerCondInt : 54
#   UINT16   m_bFlankDetect : 55
#   UINT16   m_bBlockUploadComplete : 56
#   unknown* m_BufferObj : 58
#   UINT16   m_uiBufferTraceStart : 60
#   UINT16   m_bDataAvailable : 61
# };
#
# ============ CAxfScaling (83) ============
# CAxfScaling {
#   struct  PosUserToIntern {
#     INT32    lNum : 0
#     INT32    lDenom : 2
#   }
#   struct  VelUserToIntern {
#     INT32    lNum : 4
#     INT32    lDenom : 6
#   }
#   struct  VelUminToIntern {
#     INT32    lNum : 8
#     INT32    lDenom : 10
#   }
#   struct  AccUserToIntern {
#     INT32    lNum : 12
#     INT32    lDenom : 14
#   }
#   struct  AccUminSecToIntern {
#     INT32    lNum : 16
#     INT32    lDenom : 18
#   }
#   struct  Hardware {
#     INT32    lNum : 20
#     INT32    lDenom : 22
#   }
#   INT32    m_lMassOffset1 : 24
#   INT32    m_lMassOffset2 : 26
# };
#
#  (CEncDigEnDat22): not found
#
# ============ paramFb (85) ============
# ParamFbStruct {
#   UINT32   ulFbConfFileType : 0
#   UINT16   uiFlags : 2
#   UINT16   uiReserved : 3
#   ???      FbType : 4
# };
#
# ============ CBasStateMachine (86) ============
# CBasStateMachine {
#   UINT16   m_uiState : 0
#   UINT16   m_uiBitCodedState : 1
#   UINT16   m_uiSwitchedOnSubstate : 2
#   UINT16   m_uiOpEnableSubstate : 3
#   UINT16   m_uiCtrlWordDC : 4
#   UINT16   m_uiCtrlWordDCLast : 5
#   UINT16   m_uiCtrlWordDCOld : 6
#   UINT16   m_uiNotReadyToSwitchOn : 7
#   UINT16   m_uiEnableTask : 8
#   UINT16   m_uiHaltTask : 9
#   UINT16   m_bRemoveFaultResetBit : 10
#   UINT16   m_uiCondState4 : 11
#   UINT16   m_bStepperMode : 12
# };
#
#  (CEncDigBISS): not found
#
# CSyncFBHWsig (CSyncFBHWsig): not found
#
# ============ CPmsUsrRescale (90) ============
# CPmsUsrRescale {
#   UINT16   m_uiRescaleAck : 0
#   UINT16   m_uiRescaleCtrlCmd : 1
#   UINT32   m_ulRescaleCtrlInfo : 2
#   UINT16   m_uiRescaleState : 4
#   UINT16   m_uiRescaleInitSubState : 5
#   UINT16   m_uiRescaleDoSubState : 6
#   UINT16   m_uiRescaleDoNonPersSubState : 7
#   UINT16   m_uiRescaleErrSubState : 8
#   UINT16   m_uiScalDataOffset : 9
#   UINT16   m_uiRampOffset : 10
#   UINT16   m_uiVelOffset : 11
#   struct  m_sScaleUsrToUsr {
#     INT32    lPosNum : 12
#     INT32    lPosDenom : 14
#     INT32    lSpeedNum : 16
#     INT32    lSpeedDenom : 18
#     INT32    lRampNum : 20
#     INT32    lRampDenom : 22
#   }
#   struct  m_sScaleUsrToDefault {
#     INT32    lPosNum : 24
#     INT32    lPosDenom : 26
#     INT32    lSpeedNum : 28
#     INT32    lSpeedDenom : 30
#     INT32    lRampNum : 32
#     INT32    lRampDenom : 34
#   }
#   UINT16   m_uiRescaleTimeLatch : 36
#   UINT32*  m_pulRescaleDataBuffer : 38
# };
#
# ============ CAxfUmodeManTune (91) ============
# CAxfUmodeManTune {
#   struct  __b_CAxfUmode {
#     INT16    m_iModesOfOperation : 0
#     unknown* __vptr : 2
#   }
#   UINT16   m_uiCycleCnt : 4
#   UINT16   m_uiObjSignalType : 5
#   UINT16   m_uiObjPeriod : 6
#   UINT16   m_uiObjControlType : 7
#   UINT32   m_ulObjMaxDistRev : 8
#   UINT32   m_ulObjMaxDistUsr : 10
#   UINT32   m_ulObjMaxDistInc : 12
#   INT32    m_lObjAmplitude : 14
#   INT32    m_lObjOffset : 16
#   INT32    m_lObjAmplitudeRpm : 18
#   INT32    m_lObjOffsetRpm : 20
#   INT32    m_lPosRefStart : 22
#   INT32    m_lPosActStart : 24
#   UINT16   m_uiTimeCnt : 26
#   INT32[]  m_alAmplList : 28
#   UINT16   m_uiNonUsrParamBitMask : 36
#   UINT16   m_uiUsrParamBitMask : 37
#   UINT32   m_uiUsrRevInConsistFlag : 38
# };
#
# CPList (CPList): not found
#
# ============ CAxfDistStop (93) ============
# CAxfDistStop {
#   UINT16   m_bitStartParaUser : 0
#   UINT16   m_uiCaptureSource : 1
#   INT32    m_lCaptEventCurrVel : 2
#   INT32    m_lCapturedPositionUser : 4
#   INT32    m_lCapturedPositionInt : 6
#   INT32    m_lRelMovPosAfterCapIntern : 8
#   INT32    m_lTargetPosInt : 10
#   INT32    m_lActPRefInt : 12
#   ???      m_eIntState : 14
#   UINT16   m_uiMoveStartInputMask : 15
#   ???      m_eCaptureUnit : 16
# };
#
# CAxfUmodeIP (CAxfUmodeIP): not found
#
# CIom (CIom): not found
#
# ============ CFwUpdateMgr (96) ============
# CFwUpdateMgr {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   ???      m_eFlashRequestType : 2
#   UINT16   m_uiFlashRequestTime : 3
# };
#
# CEfa (CEfa): not found
#
# ============ CFileLoader (98) ============
# CFileLoader {
# };
#
# ============ CDrvWakeShake (99) ============
# CDrvWakeShake {
#   UINT16   m_uiWakeShakeState : 0
#   INT32    m_iqStartSpeedLimWakes : 2
#   INT32    m_iqEpsE_wakes : 4
#   INT32    m_iqUdWakes : 6
#   INT32    m_iqUqWakes : 8
#   INT32    m_iqIdWakes : 10
#   INT32    m_iqIqWakes : 12
#   INT32    m_iqKdWakes : 14
#   INT32    m_iqKpWakes : 16
#   INT32    m_iqKiWakes : 18
#   INT32    m_iqKdWakes0 : 20
#   INT32    m_iqKpWakes0 : 22
#   INT32    m_iqKiWakes0 : 24
#   INT32    m_iqTei : 26
#   INT32    m_iqKpPart : 28
#   INT32    m_iqKiPart : 30
#   INT32    m_iqKdPart : 32
#   INT32    m_iqKpPartCorrection : 34
#   INT32    m_iqEpsWakesDif : 36
#   INT32    m_iqEpsWakesStart : 38
#   INT32    m_iqEpsWakesEnd : 40
#   INT32    m_iqEpsEwakesFltEnd : 42
#   INT32    m_iqEpsEwakesDifEnd : 44
#   INT32    m_iqEpsEwakesFlt : 46
#   INT32    m_iqKeepKiId : 48
#   INT32    m_iqKeepKiIq : 50
#   UINT16   m_uiSlidingGain : 52
#   UINT16   m_uiSlidingShift : 53
#   UINT16   m_uiWakesCnt : 54
#   UINT16   m_uiPhasingOffset : 55
#   UINT16   m_uiTauNactRemind : 56
#   UINT16   m_uiTaunactWakes : 57
#   INT32    m_iqUmagRefWakes : 58
#   INT32    m_iqUmagRefWakes0 : 60
#   INT32    m_iqImagWakes0 : 62
#   INT32    m_iqIdWakes_0 : 64
#   INT32    m_iqImagWakesMax : 66
#   INT32    m_uiKpImagReduction : 68
#   UINT32   m_ulAccAbility : 70
#   UINT16   m_uiMassRatio : 72
#   UINT32   m_ulSliderMass : 74
#   UINT16   m_uiWakesGain : 76
#   INT32    m_iqCurrentMeanEnd : 78
#   INT32    m_iqCurrentMaxEnd : 80
#   INT32    m_iqCurrentMinEnd : 82
#   INT32    m_iqCurrentSum : 84
#   INT32    m_iqEpsEwakesFltMinPosEnd : 86
#   INT32    m_iqEpsEwakesFltMinNegEnd : 88
#   INT32    m_iqEpsEwakesFltMaxPosEnd : 90
#   INT32    m_iqEpsEwakesFltMaxNegEnd : 92
#   INT32    m_iqKdManAdaption : 94
#   INT32    m_iqKpManAdaption : 96
#   INT32    m_iqKiManAdaption : 98
# };
#
# ============ CHwlPowerFail (100) ============
# CHwlPowerFail {
#   UINT16   m_uiPowerLowState : 0
#   UINT16   m_uiPowerLowTimeBuff : 1
#   UINT16   m_uiPowerLowTimeUnBuff : 2
# };
#
# ============ CAxfBackLashComp (101) ============
# CAxfBackLashComp {
#   UINT16   m_bitDoCycFctCall : 0
#   UINT16   m_uiStartParaIntern : 1
#   UINT16   m_lBackLashCorrFastCycleCnt : 2
#   INT32    m_i64BackLashCorrPosIntern : 4
#   INT32    m_i64TargetOffsetPos : 8
#   INT32    m_i64CurrentOffsetPos : 12
#   INT32    m_i64CycChgOfOffsetPos : 16
# };
#
# ============ bootDSS (102) ============
# BOOT_DSS {
#   UINT32   ulWarmstart : 0
#   UINT16   uiBootIdent : 2
#   UINT16   uiPrgState : 3
#   UINT32   ulPrgNr : 4
#   UINT32   errCode : 6
#   UINT16   errInfo : 8
# };
#
# CProfileSercos (CProfileSercos): not found
#
# CHwlBrake_PWM (CHwlBrake_PWM): not found
#
T Fri Jan 11 12:20:29 2013
D 0 Interface_to_drive_component CBasDrive
E __b_CBasComponent.__vptr     unknown*             7500 0
E ToDrvCtrl.uiOpmRequest       UINT16               7002 0
E ToDrvCtrl.uiAxModeInt        UINT16               7003 0
E ToDrvCtrl.lPosRef            INT32                7504 0
E ToDrvCtrl.uiPosRefRem        UINT16               7006 0
E ToDrvCtrl.i64BlshOffsPos     INT32                7508 0
E ToDrvCtrl.lSpdRef            INT32                7512 0
E ToDrvCtrl.lCurRef            INT32                7514 0
E ToDrvCtrl.lSpdFeed           INT32                7516 0
E ToDrvCtrl.lAccFeed           INT32                7518 0
E ToDrvCtrl.lSpdLim            INT32                7520 0
E ToDrvCtrl.lCurLim            INT32                7522 0
E ToDrvCtrl.bDoSpeedLimVar2    UINT16               7024 0
E ToDrvCtrl.bDoSwitchControlPara UINT16               7025 0
E ToDrvCtrl.bDoSpeedIntegralOff UINT16               7026 0
E ToDrvCtrl.bDoZeroClamp       UINT16               7027 0
E ToDrvCtrl.ulActiveInFctBitCoded UINT32               7528 0
E ToDrvCtrl.uiBreakMotionActive UINT16               7030 0
E FromDrvCtrl.lPosAct          INT32                7532 0
E FromDrvCtrl.lITotalAct       INT32                7534 0
E FromDrvCtrl.lIqAct           INT32                7536 0
E FromDrvCtrl.lUkzAct          INT32                7538 0
E FromDrvCtrl.uiActionWordUser UINT16               7040 0
E FromDrvCtrl.uiStatus         UINT16               7041 0
E FromDrvCtrl.uiUsrStateInfos  UINT16               7042 0
E FromDrvCtrl.uiCmdRequest     UINT16               7043 0
E FromDrvCtrl.uiPowerState     UINT16               7044 0
E FromDrvCtrl.iqImax           INT32                7546 0
E FromDrvCtrl.uiImaxPerCent    UINT16               7048 0
E FromDrvCtrl.iqImaxQStop      INT32                7550 0
E FromDrvCtrl.iqImaxHalt       INT32                7552 0
E FromDrvCtrl.ulNmax           UINT32               7554 0
E FromDrvCtrl.ulVelMaxIntern   UINT32               7556 0
E FromDrvCtrl.bAbPosIsSet      UINT16               7058 0
E FromDrvCtrl.bEnc1PosIsSet    UINT16               7059 0
E FromDrvCtrl.iqpUkzFlt        INT32*               7560 0
E FromDrvCtrl.iqpIqAct         INT32*               7562 0
E FromDrvCtrl.iqpIqRef         INT32*               7564 0
E FromDrvCtrl.iqpSpdPrRef      INT32*               7566 0
E FromDrvCtrl.iqpSpeedRef      INT32*               7568 0
E FromDrvCtrl.iqpPosRef        INT32*               7570 0
E FromDrvCtrl.iqpPosDif        INT32*               7572 0
E FromDrvCtrl.bSelErrIsSet     UINT16               7074 0
E FromDrvCtrl.bSelWarnIsSet    UINT16               7075 0
E FromDrvCtrl.lRs422InCnt      INT32                7576 0
E FromDrvCtrl.uiRs422Fine      UINT16               7078 0
E FromDrvCtrl.uiRefPulseCalcState UINT16               7079 0
E FromDrvCtrl.lVelRs422Act_Inc_65536ms INT32                7580 0
E FromDrvCtrl.iqSpeedMax       INT32                7582 0
D 1 adc_raw_current ADC_RAW_STRUCT
E Hifa_cos1                    UINT16               7000 1
E Hifa_sin1                    UINT16               7001 1
E Hifa_cos2                    UINT16               7002 1
E Hifa_sin2                    UINT16               7003 1
E Mot_iu1                      UINT16               7004 1
E Mot_iv1                      UINT16               7005 1
E Mot_iu2                      UINT16               7006 1
E Mot_iv2                      UINT16               7007 1
E Analog1                      UINT16               7008 1
E Analog2                      UINT16               7009 1
E Vref143_A                    UINT16               7010 1
E Vref143_B                    UINT16               7011 1
E Supply24V_buff               UINT16               7012 1
E Supply24V                    UINT16               7013 1
E Hifa_10V                     UINT16               7014 1
E Cpu_temp                     UINT16               7015 1
D 2 adc_raw_minimal ADC_RAW_STRUCT
E Hifa_cos1                    UINT16               7000 2
E Hifa_sin1                    UINT16               7001 2
E Hifa_cos2                    UINT16               7002 2
E Hifa_sin2                    UINT16               7003 2
E Mot_iu1                      UINT16               7004 2
E Mot_iv1                      UINT16               7005 2
E Mot_iu2                      UINT16               7006 2
E Mot_iv2                      UINT16               7007 2
E Analog1                      UINT16               7008 2
E Analog2                      UINT16               7009 2
E Vref143_A                    UINT16               7010 2
E Vref143_B                    UINT16               7011 2
E Supply24V_buff               UINT16               7012 2
E Supply24V                    UINT16               7013 2
E Hifa_10V                     UINT16               7014 2
E Cpu_temp                     UINT16               7015 2
D 3 adc_raw_maximal ADC_RAW_STRUCT
E Hifa_cos1                    UINT16               7000 3
E Hifa_sin1                    UINT16               7001 3
E Hifa_cos2                    UINT16               7002 3
E Hifa_sin2                    UINT16               7003 3
E Mot_iu1                      UINT16               7004 3
E Mot_iv1                      UINT16               7005 3
E Mot_iu2                      UINT16               7006 3
E Mot_iv2                      UINT16               7007 3
E Analog1                      UINT16               7008 3
E Analog2                      UINT16               7009 3
E Vref143_A                    UINT16               7010 3
E Vref143_B                    UINT16               7011 3
E Supply24V_buff               UINT16               7012 3
E Supply24V                    UINT16               7013 3
E Hifa_10V                     UINT16               7014 3
E Cpu_temp                     UINT16               7015 3
D 4 CHwlAdc CHwlAdc_C31x
E m_uiCalAOffset               UINT16               7000 4
E m_uiCalBOffset               UINT16               7001 4
E m_iSinOffset                 INT16                7002 4
E m_iCosOffset                 INT16                7003 4
E m_iHifaVErrCnt               INT16                7004 4
E m_uiCpu_temp                 UINT16               7005 4
E m_uiVref143_A_avr            UINT16               7006 4
E m_uiVref143_B_avr            UINT16               7007 4
E m_iIuOffset                  INT16                7008 4
E m_iIvOffset                  INT16                7009 4
E m_uiCnt                      UINT16               7010 4
E m_bInitFinished              UINT16               7011 4
E m_ulVref143Sum_A             UINT32               7512 4
E m_ulVref143Sum_B             UINT32               7514 4
E m_ulSumCpu_temp              UINT32               7516 4
E m_iqSinCosMeasGain           INT32                7518 4
E m_iqHifa10V                  INT32                7520 4
E m_ulHifaMonTime              UINT32               7522 4
E m_iqIuGain                   INT32                7524 4
E m_iqIvGain                   INT32                7526 4
E m_iqIuOffset                 INT32                7528 4
E m_iqIvOffset                 INT32                7530 4
E m_iCtrlIuOffset              INT16                7032 4
E m_iCtrlIvOffset              INT16                7033 4
E m_iqIuMeasGain               INT32                7534 4
E m_iqIvMeasGain               INT32                7536 4
E m_iAna1Offset                INT16                7038 4
E m_iAna2Offset                INT16                7039 4
E m_uiAnaInToggle              UINT16               7040 4
E m_bDisableOversampling       UINT16               7041 4
E m_ulAnaIn1_Sum1              UINT32               7542 4
E m_ulAnaIn1_Sum2              UINT32               7544 4
E m_ulAnaIn2_Sum1              UINT32               7546 4
E m_ulAnaIn2_Sum2              UINT32               7548 4
E m_iqAna1Gain                 INT32                7550 4
E m_iqAna2Gain                 INT32                7552 4
E m_iqAnaIn1Mean               INT32                7554 4
E m_iqAnaIn2Mean               INT32                7556 4
E m_iqFolAnaIn1                INT32                7558 4
E m_iqFolAnaIn2                INT32                7560 4
E m_iqPrmAFol1Anain            INT32                7562 4
E m_iqPrmBFol1Anain            INT32                7564 4
E m_iqPrmAFol2Anain            INT32                7566 4
E m_iqPrmBFol2Anain            INT32                7568 4
D 5 paramHwInfo ParamHwInfoStruct
E cpu.uiType                   UINT16               7000 5
E cpu.uiRevision               UINT16               7001 5
E cpu.uiFeatures               UINT16               7002 5
E cpu.uiForceFlag              UINT16               7003 5
E power.uiType                 UINT16               7004 5
E power.uiRevision             UINT16               7005 5
E power.uiFeatures             UINT16               7006 5
E power.uiForceFlag            UINT16               7007 5
E modCom.uiType                UINT16               7008 5
E modCom.uiRevision            UINT16               7009 5
E modCom.uiFeatures            UINT16               7010 5
E modCom.uiForceFlag           UINT16               7011 5
E modEnc.uiType                UINT16               7012 5
E modEnc.uiRevision            UINT16               7013 5
E modEnc.uiFeatures            UINT16               7014 5
E modEnc.uiForceFlag           UINT16               7015 5
E modSlot1.uiType              UINT16               7016 5
E modSlot1.uiRevision          UINT16               7017 5
E modSlot1.uiFeatures          UINT16               7018 5
E modSlot1.uiForceFlag         UINT16               7019 5
E custom.uiType                UINT16               7020 5
E custom.uiRevision            UINT16               7021 5
E custom.uiFeatures            UINT16               7022 5
E custom.uiForceFlag           UINT16               7023 5
D 6 paramManu ParamManuStruct
E ulMandVendor1                UINT32               7500 6
E ulMandVendor2                UINT32               7502 6
E ulMandVendor3                UINT32               7504 6
E ulMandVendor4                UINT32               7506 6
E ulMandVendor5                UINT32               7508 6
E ulMandMname1                 UINT32               7510 6
E ulMandMname2                 UINT32               7512 6
E ulMandMname3                 UINT32               7514 6
E ulMandMname4                 UINT32               7516 6
E uiSinCosGain2                UINT16               7018 6
E uiSinOffset2                 UINT16               7019 6
E uiCosOffset2                 UINT16               7020 6
E uiIOCPhySel                  UINT16               7021 6
E dummy2                       UINT32               7522 6
E uiImaxPeak4                  UINT16               7024 6
E uiInomPeak4                  UINT16               7025 6
E uiTHswarn                    UINT16               7026 6
E uiTHsmax                     UINT16               7027 6
E uiUkzmax                     UINT16               7028 6
E uiI2tps_dt                   UINT16               7029 6
E uiI2tbal_dt                  UINT16               7030 6
E uiDefpwm                     UINT16               7031 6
E uiIu_usr_sc                  UINT16               7032 6
E uiI_sc_uv                    UINT16               7033 6
E uiUkz_usr_sc                 UINT16               7034 6
E uiUkzbal_l                   UINT16               7035 6
E uiUkzbal_h                   UINT16               7036 6
E uiUkzmin                     UINT16               7037 6
E uiUkzmin_stop                UINT16               7038 6
E uiT_ntc_hs                   UINT16               7039 6
E uiTab_ths                    UINT16[]             7540 6
E uiTab_uhs                    UINT16[]             7548 6
E uiUmainsH                    UINT16               7056 6
E uiPhaseLine                  UINT16               7057 6
E uiDeadband                   UINT16               7058 6
E uiBalExt_Pmax                UINT16               7059 6
E uiBal_Pnom                   UINT16               7060 6
E uiBal_res                    UINT16               7061 6
E uiImaxPeak8                  UINT16               7062 6
E uiInomPeak8                  UINT16               7063 6
E uiTCpumax                    UINT16               7064 6
E uiT_ntc_cpu                  UINT16               7065 6
E uiTab_tcpu                   UINT16[]             7566 6
E uiTab_ucpu                   UINT16[]             7574 6
E uiAna1Offset                 UINT16               7082 6
E uiAna2Offset                 UINT16               7083 6
E uiThR12                      UINT16               7084 6
E uiThR3                       UINT16               7085 6
E uiThTau3                     UINT16               7086 6
E uiThR4                       UINT16               7087 6
E uiThTau4                     UINT16               7088 6
E uiThPlos4                    UINT16               7089 6
E uiThPlos8                    UINT16               7090 6
E uiPnom                       UINT16               7091 6
E uiDtPmax                     UINT16               7092 6
E uiUmainsL                    UINT16               7093 6
E uiUmains_sc                  UINT16               7094 6
E uiBalResMin                  UINT16               7095 6
E uiPowerTypeCfg               UINT16               7096 6
E uiIuOffset                   UINT16               7097 6
E uiIvOffset                   UINT16               7098 6
E iBinIoff                     INT16                7099 6
E uiSinCosGain                 UINT16               7100 6
E uiSinOffset                  UINT16               7101 6
E uiCosOffset                  UINT16               7102 6
E uiTfan                       UINT16               7103 6
E uiInomPeak16                 UINT16               7104 6
E uiImaxPeak16                 UINT16               7105 6
E uiThPlos16                   UINT16               7106 6
E uiPowerType                  UINT16               7107 6
E uiPowerDataRev               UINT16               7108 6
E uiProcTrace                  UINT16               7109 6
E uiProcStatus                 UINT16               7110 6
E iBinIcont                    INT16                7111 6
E iBinIpeak                    INT16                7112 6
E uiBinIcontT                  UINT16               7113 6
E uiBinIpeakT                  UINT16               7114 6
E uiBinIbreakT                 UINT16               7115 6
E uiBinTLEmax                  UINT16               7116 6
E uiBinCPUmax                  UINT16               7117 6
E iBinSpeedMin                 INT16                7118 6
E iBinSpeedMax                 INT16                7119 6
E uiEnc1OffsetLim              UINT16               7120 6
E uiEnc1GainLim                UINT16               7121 6
E uiAnaOffsetLim               UINT16               7122 6
E uiAnaGainLim                 UINT16               7123 6
E uiUkzminReduced              UINT16               7124 6
E uiUkzmin_stopReduced         UINT16               7125 6
E uiPnomChoke                  UINT16               7126 6
E uiPnomReduced                UINT16               7127 6
E uiPnomReducedChoke           UINT16               7128 6
E uiImaxPeak4Reduced           UINT16               7129 6
E uiInomPeak4Reduced           UINT16               7130 6
E uiImaxPeak8Reduced           UINT16               7131 6
E uiInomPeak8Reduced           UINT16               7132 6
E uiImaxPeak16Reduced          UINT16               7133 6
E uiInomPeak16Reduced          UINT16               7134 6
E uiLchoke                     UINT16               7135 6
E uiRchoke                     UINT16               7136 6
E uiChipTempMax                UINT16               7137 6
E uiAna1Gain                   UINT16               7138 6
E uiAna2Gain                   UINT16               7139 6
E ulMandPname1                 UINT32               7640 6
E ulMandPname2                 UINT32               7642 6
E ulMandPname3                 UINT32               7644 6
E ulMandPname4                 UINT32               7646 6
E iIcalib                      INT16                7148 6
E uiIuvOffsetLim               UINT16               7149 6
E uiIuScaleMin                 UINT16               7150 6
E uiIuScaleMax                 UINT16               7151 6
E ulMandSernum1                UINT32               7652 6
E ulMandSernum2                UINT32               7654 6
E ulMandSernum3                UINT32               7656 6
E ulMandSernum4                UINT32               7658 6
E ulMandPrCoEAN1               UINT32               7660 6
E ulMandPrCoEAN2               UINT32               7662 6
E ulMandPrCoEAN3               UINT32               7664 6
E ulMandPrCoEAN4               UINT32               7666 6
E uiForceModuleSlot            UINT16               7168 6
E uiForceModuleType            UINT16               7169 6
E uiIuvGainLim                 UINT16               7170 6
E uiBinIcheckFact              UINT16               7171 6
E uiForceModuleRev             UINT16               7172 6
E uiActivateModSup             UINT16               7173 6
E uiPowerFeatures              UINT16               7174 6
E uiUkzPowerUp                 UINT16               7175 6
E uiUkzPowerDown               UINT16               7176 6
E uiUkzPowerUpReduced          UINT16               7177 6
E uiUkzPowerDownReduced        UINT16               7178 6
E END_OF_CPU_BLOCK_START_OF_POWER_BLOCK UINT16               7179 6
E END_OF_POWER_BLOCK           UINT16               7180 6
E uiEmptySpace                 UINT16[]             7681 6
D 7 paramNoInit ParamNoInitStruct
E ulEncPosOffset               UINT32               7500 7
D 8 paramUser ParamUserStruct
E uiCompatibility              UINT16               7000 8
E uiDcomSmcomp                 UINT16               7001 8
E uiPwmFreq                    UINT16               7002 8
E uiProtectedHMI               UINT16               7003 8
E uiSupervisorVal              UINT16               7004 8
E uiIOAutoEnable               UINT16               7005 8
E uiDeviceIoGearMode           UINT16               7006 8
E uiMotionSpvPosDeviat         UINT16               7007 8
E uiMotionSpvCurrVal           UINT16               7008 8
E uiMotionSpvChkWinTime        UINT16               7009 8
E uiPosWinTime                 UINT16               7010 8
E uiPosWin                     UINT16               7011 8
E lMotionNormPosNum            INT32                7512 8
E lMotionNormPosDenom          INT32                7514 8
E lMotionScalSpeedNum          INT32                7516 8
E lMotionScalSpeedDenom        INT32                7518 8
E ulMotionUpRamp0              UINT32               7520 8
E ulMotionDownRamp0            UINT32               7522 8
E ulMotionQuStopRamp           UINT32               7524 8
E uiJerkFilter                 UINT16               7026 8
E uiAxisType                   UINT16               7027 8
E uiMotionSpeedWinTime         UINT16               7028 8
E uiGearPosChgMode             UINT16               7029 8
E uiMotionEnaSwLim             UINT16               7030 8
E uiMotionHomingReq            UINT16               7031 8
E lMotionSwLimN                INT32                7532 8
E lMotionSwLimP                INT32                7534 8
E uiMotionSigRef               UINT16               7036 8
E uiMotionSigLimN              UINT16               7037 8
E uiMotionSigLimP              UINT16               7038 8
E iMotionHaltReaction          INT16                7039 8
E iMotionQStopReaction         INT16                7040 8
E uiMotionPwinTout             UINT16               7041 8
E lGearDenom                   INT32                7542 8
E lGearNum                     INT32                7544 8
E uiGearResGear                UINT16               7046 8
E uiGearDirEnable              UINT16               7047 8
E ulHomeSpeedToRef             UINT32               7548 8
E lHomePosOutRef               INT32                7550 8
E lHomePosDistRef              INT32                7552 8
E lHomeRefAppPos               INT32                7554 8
E lHomePosSrchLimMax           INT32                7556 8
E ulManPosSpeedSlow            UINT32               7558 8
E lManPosStepPosDist           INT32                7560 8
E uiManPosStepWaitTime         UINT16               7062 8
E uiModuloAbsHandling          UINT16               7063 8
E uiDatSetGlobalCond           UINT16               7064 8
E uiSupUmainsWait              UINT16               7065 8
E lPdifMax                     INT32                7566 8
E uiErrVolt                    UINT16               7068 8
E uiFltpdiff                   UINT16               7069 8
E uiMainsMon                   UINT16               7070 8
E uiGndShortMon                UINT16               7071 8
E uiSupComm                    UINT16               7072 8
E iTBrakeOff                   INT16                7073 8
E ulInertiaSystem              UINT32               7574 8
E iTBrakeOn                    INT16                7076 8
E uiExtHmiLanguage             UINT16               7077 8
E lGearDenom2                  INT32                7578 8
E lGearNum2                    INT32                7580 8
E uiIoRs422Invert              UINT16               7082 8
E uiMotionCurrLimVar2          UINT16               7083 8
E lGearOffset1                 INT32                7584 8
E lGearOffset2                 INT32                7586 8
E uiExtBalOn                   UINT16               7088 8
E uiExtBalDt                   UINT16               7089 8
E uiExtBalPnom                 UINT16               7090 8
E uiExtBalRes                  UINT16               7091 8
E uiCtrlgImaxQstop             UINT16               7092 8
E uiCtrlgImaxHalt              UINT16               7093 8
E uiIMaxUsr                    UINT16               7094 8
E uiPdifWarn                   UINT16               7095 8
E uiSelError1                  UINT16               7096 8
E uiSelError2                  UINT16               7097 8
E uiSelWarn1                   UINT16               7098 8
E uiSelWarn2                   UINT16               7099 8
E iSaveHomingMethod            INT16                7100 8
E uiEnaSpdProf                 UINT16               7101 8
E ulRampCurr                   UINT32               7602 8
E uiEnaCurProf                 UINT16               7104 8
E uiMsmStopSingleDataSet       UINT16               7105 8
E uiMsmLeaveNoTransition       UINT16               7106 8
E uiAddFaultResOnEnaInp        UINT16               7107 8
E ui__Dummy_108__              UINT16               7108 8
E uiCPFastSpeedLim             UINT16               7109 8
E i__Dummy_110__               INT16                7110 8
E i__Dummy_111__               INT16                7111 8
E uiFltAnaOut                  UINT16               7112 8
E ui__Dummy_113__              UINT16               7113 8
E ui__Dummy_114__              UINT16               7114 8
E i__Dummy_115__               INT16                7115 8
E i__Dummy_116__               INT16                7116 8
E uiMechVar8                   UINT16               7117 8
E uiModuloMovOvr               UINT16               7118 8
E uiMotionTorqWin              UINT16               7119 8
E uiMotionTorqWinTime          UINT16               7120 8
E uiEnaAbsPosOver              UINT16               7121 8
E uiOpmChgType                 UINT16               7122 8
E iDE_errClass                 INT16                7123 8
E iME_errClass                 INT16                7124 8
E uiMotionSigLimMode           UINT16               7125 8
E lPosRegCh3PA                 INT32                7626 8
E lPosRegCh3PB                 INT32                7628 8
E lEncMachinePdiffLim          INT32                7630 8
E uiMechVar7                   UINT16               7132 8
E uiMotionModeSwitch           UINT16               7133 8
E lMotionScalRampNum           INT32                7634 8
E lMotionScalRampDenom         INT32                7636 8
E ulMotionSpeedLimProf         UINT32               7638 8
E ulMotionSpeedWin             UINT32               7640 8
E ulMotionSpvSpdDeviat         UINT32               7642 8
E ulMotionSpvSpdVal            UINT32               7644 8
E ulMotionSpeedLimVar2         UINT32               7646 8
E ulMotionSpdZeroClmp          UINT32               7648 8
E ul__Dummy_150__              UINT32               7650 8
E l__Dummy_152__               INT32                7652 8
E ul__Dummy_154__              UINT32               7654 8
E l__Dummy_156__               INT32                7656 8
E ulNMaxUsr                    UINT32               7658 8
E ulHomeSpeedOutRef            UINT32               7660 8
E ulManPosSpeedFast            UINT32               7662 8
E iMotionUsrPMf                INT16                7164 8
E iMotionUsrPPu                INT16                7165 8
E iMotionUsrVMf                INT16                7166 8
E iMotionUsrVPu                INT16                7167 8
E iMotionUsrAMf                INT16                7168 8
E iMotionUsrAPu                INT16                7169 8
E uiDeviceIoJogMode            UINT16               7170 8
E uiMechVar6                   UINT16               7171 8
E ulGearOffsRamp               UINT32               7672 8
E ulGearOffsVelTarget          UINT32               7674 8
E uiPosRegCh1Mode              UINT16               7176 8
E uiPosRegCh2Mode              UINT16               7177 8
E uiPosRegCh1Source            UINT16               7178 8
E uiPosRegCh2Source            UINT16               7179 8
E lPosRegCh1PA                 INT32                7680 8
E lPosRegCh1PB                 INT32                7682 8
E lPosRegCh2PA                 INT32                7684 8
E lPosRegCh2PB                 INT32                7686 8
E uiErrI2tBal100               UINT16               7188 8
E uiQuasiAbs                   UINT16               7189 8
E lModuloRngMin                INT32                7690 8
E lModuloRngMax                INT32                7692 8
E uiGearJerkFilterUsage        UINT16               7194 8
E uiMechVar5                   UINT16               7195 8
E lPdifMaxUsr                  INT32                7696 8
E lMotionSpvPosDeviatUsr       INT32                7698 8
E lPosWinUsr                   INT32                7700 8
E lPosRegCh4PA                 INT32                7702 8
E lPosRegCh4PB                 INT32                7704 8
E uiPosRegCh3Source            UINT16               7206 8
E uiPosRegCh4Source            UINT16               7207 8
E uiPosRegCh3Mode              UINT16               7208 8
E uiPosRegCh4Mode              UINT16               7209 8
E uiMechVar4                   UINT16               7210 8
E uiMechVar3                   UINT16               7211 8
E uiMechVar2                   UINT16               7212 8
E uiMechVar1                   UINT16               7213 8
E lDistStopPosition            INT32                7714 8
E lDistStopVelocityUser        INT32                7716 8
E uiDistStopReaction           UINT16               7218 8
E uiDistStopSignalType         UINT16               7219 8
E uiInternalLimitActive        UINT16               7220 8
E uiStatusMapping              UINT16               7221 8
E ulGearVelOutMax              UINT32               7722 8
E uiWakesGain                  UINT16               7224 8
E uiMsmImmediate               UINT16               7225 8
E lDummy_226                   INT32                7726 8
E ulPrgNr                      UINT32               7728 8
E uiVersion                    UINT16               7230 8
E uiRevision                   UINT16               7231 8
E uiIgnQSOptCode               UINT16               7232 8
E i__Dummy_233__               INT16                7233 8
E uiIoEnableMode               UINT16               7234 8
E uiPosRegGroupStart           UINT16               7235 8
D 9 paramUserNoReset ParamUserNoResetStruct
E uiCompatibility              UINT16               7000 9
E ui__Dummy_2__                UINT16               7001 9
E uiProgVers                   UINT16               7002 9
E uiParamUserSaveDone          UINT16               7003 9
E uiDeviceDevControl           UINT16               7004 9
E uiInvDir                     UINT16               7005 9
E uiDeviceIoDefaultMode        UINT16               7006 9
E uiSerMbBaud                  UINT16               7007 9
E uiSerMbAdr                   UINT16               7008 9
E uiSerMbFormat                UINT16               7009 9
E uiSerWordMod                 UINT16               7010 9
E uiIoLiInvert                 UINT16               7011 9
E uiIoLoInvert                 UINT16               7012 9
E uiShiftEncPosRange           UINT16               7013 9
E uiEncCtrl                    UINT16               7014 9
E uiReserved                   UINT16               7015 9
E ulTypeMConfig                UINT32               7516 9
E uiIofFuncDi0                 UINT16               7018 9
E uiIofFuncDi1                 UINT16               7019 9
E uiIofFuncDi2                 UINT16               7020 9
E uiIofFuncDi3                 UINT16               7021 9
E uiIofFuncDi4                 UINT16               7022 9
E uiIofFuncDi5                 UINT16               7023 9
E uiReserved_1                 UINT16               7024 9
E uiReserved_2                 UINT16               7025 9
E uiIofFuncDq0                 UINT16               7026 9
E uiIofFuncDq1                 UINT16               7027 9
E uiIofFuncDq2                 UINT16               7028 9
E uiIofFuncDq3                 UINT16               7029 9
E uiIofFuncDq4                 UINT16               7030 9
E uiReserved_3                 UINT16               7031 9
E uiDeviceEsimScale            UINT16               7032 9
E uiDeviceEsimActivate         UINT16               7033 9
E uiDeviceRs422IoMode          UINT16               7034 9
E uiMainsChoke                 UINT16               7035 9
E uiEnc2type                   UINT16               7036 9
E uiFbusIocInhibitTime         UINT16               7037 9
E ulUserAppName1               UINT32               7538 9
E ulUserAppName2               UINT32               7540 9
E ulUserAppName3               UINT32               7542 9
E ulUserAppName4               UINT32               7544 9
E uiIoDI0Debounce              UINT16               7046 9
E uiIoDI1Debounce              UINT16               7047 9
E uiIoDI2Debounce              UINT16               7048 9
E uiIoDI3Debounce              UINT16               7049 9
E uiIoDI4Debounce              UINT16               7050 9
E uiIoDI5Debounce              UINT16               7051 9
E uiMotEncSerialNumber1        UINT16               7052 9
E uiMotEncSerialNumber2        UINT16               7053 9
E uiMotEncSerialNumber3        UINT16               7054 9
E uiMotEncSerialNumber4        UINT16               7055 9
E uiMotEncSerialNumber5        UINT16               7056 9
E uiAppDataAddress             UINT16               7057 9
E ulUserPositionOffset         UINT32               7558 9
E ulUserPositionOffsetRevolutions UINT32               7560 9
E uiActivateHiddenMtp          UINT16               7062 9
E uiAbsPosEncSource            UINT16               7063 9
E ulParamPassw                 UINT32               7564 9
E ui__Dummy_66__               UINT16               7066 9
E uiModeEncMachine             UINT16               7067 9
E uiSSIMultiturnResolution     UINT16               7068 9
E uiSSICoding                  UINT16               7069 9
E Reserved                     UINT16               7070 9
E uiDigEncPowerSupply          UINT16               7071 9
E uiAnaEncPowerSupply          UINT16               7072 9
E uiSSIMaxFreq                 UINT16               7073 9
E uiABIMaxFreq                 UINT16               7074 9
E uiHmiEthFsuSuppress          UINT16               7075 9
E lPosOverflowMotRaw           INT32                7576 9
E lPosOverflowMachRaw          INT32                7578 9
E lPosOverflowMotInt           INT32                7580 9
E lPosOverflowMachInt          INT32                7582 9
E lABIMaxIndexTravel           INT32                7584 9
E lEncMachineDenom             INT32                7586 9
E lEncMachineNum               INT32                7588 9
E uiInvDirEncMachine           UINT16               7090 9
E uiForceMtpRead               UINT16               7091 9
E ulUserPositionOffset2        UINT32               7592 9
E ulUserPositionOffset2Revolutions UINT32               7594 9
E uiSSISingleturnResolution    UINT16               7096 9
E ui__Dummy_97__               UINT16               7097 9
E uiBISSSingleturnResolution   UINT16               7098 9
E uiBISSMultiturnResolution    UINT16               7099 9
E uiBISSCoding                 UINT16               7100 9
E uiDCbusCompat                UINT16               7101 9
E lSinCosMaxIndexTravel        INT32                7602 9
E uiPTIFilterTime              UINT16               7104 9
E uiResMultiUsed               UINT16               7105 9
E uiLXMATVUdcBal               UINT16               7106 9
E uiLXMATVUdcMax               UINT16               7107 9
E uiAnalogOutputsType          UINT16               7108 9
E uiAo11Mode                   UINT16               7109 9
E uiAo11CurrSet                UINT16               7110 9
E uiAo11Inversion              UINT16               7111 9
E uiAo12Mode                   UINT16               7112 9
E uiAo12CurrSet                UINT16               7113 9
E uiAo12Inversion              UINT16               7114 9
E uiDi1XInv                    UINT16               7115 9
E uiDq1XInv                    UINT16               7116 9
E uiDi10Debounce               UINT16               7117 9
E uiDi11Debounce               UINT16               7118 9
E uiDi12Debounce               UINT16               7119 9
E uiDi13Debounce               UINT16               7120 9
E uiIoFuncDi10                 UINT16               7121 9
E uiIoFuncDi11                 UINT16               7122 9
E uiIoFuncDi12                 UINT16               7123 9
E uiIoFuncDi13                 UINT16               7124 9
E uiIoFuncDq10                 UINT16               7125 9
E uiIoFuncDq11                 UINT16               7126 9
E uiAna1Tau                    UINT16               7127 9
E uiAna2Tau                    UINT16               7128 9
E uiAna2Mode                   UINT16               7129 9
E uiAna2LimCurr                UINT16               7130 9
E uiAna2ZeroWin                UINT16               7131 9
E iAna2Offset                  INT16                7132 9
E iAna2IScal                   INT16                7133 9
E uiAna1Mode                   UINT16               7134 9
E uiAna1LimCurr                UINT16               7135 9
E uiAna1ZeroWin                UINT16               7136 9
E iAna1Offset                  INT16                7137 9
E iAna1IScal                   INT16                7138 9
E ui__Dummy_139__              UINT16               7139 9
E ulAna1LimSpeed               UINT32               7640 9
E lAna1NScal                   INT32                7642 9
E ulAna2LimSpeed               UINT32               7644 9
E lAna2NScal                   INT32                7646 9
E ulDeviceEsimScaleHigh        UINT32               7648 9
E ulSerMbBaud                  UINT32               7650 9
E uiBacklashMode               UINT16               7152 9
E uiBacklashCorrTimeMs         UINT16               7153 9
E lBacklashCorrPosUsr          UINT32               7654 9
E uiAna2Win                    UINT16               7156 9
E uiAna2WinTime                UINT16               7157 9
E uiAna2MinAccDec              UINT16               7158 9
E ui__Dummy_159__              UINT16               7159 9
D 10 paramMotor ParamMotorStruct
E auiWord                      UINT16[]             7500 10
D 11 paramPower ParamPowerFailStruct
E iPosActMotUpper              INT16                7000 11
E uiLength                     UINT16               7001 11
E ulDiagOprHrCtr               UINT32               7502 11
E ulDiagPowUpCnt               UINT32               7504 11
E uiErrListPtr                 UINT16               7006 11
E uiErrListCnt                 UINT16               7007 11
E uiConfFilesCRC               UINT16               7008 11
E uiCtrlBits                   UINT16               7009 11
E lMassOffs1                   INT32                7510 11
E lMassOffs2                   INT32                7512 11
E iPosActMachUpper             INT16                7014 11
E uiCRC                        UINT16               7015 11
D 12 paramCtrlG ParamCtrlGlobStruct
E uiKpIdUsr                    UINT16               7000 12
E uiKpIqUsr                    UINT16               7001 12
E uiTnIdUsr                    UINT16               7002 12
E uiTnIqUsr                    UINT16               7003 12
E uiIFluxWeak                  UINT16               7004 12
E uiZeroCoNRefUsr              UINT16               7005 12
E uiTaunact                    UINT16               7006 12
E uiAccFfdGainUsr              UINT16               7007 12
E uiNPidDT1Dpart               UINT16               7008 12
E uiNPidDT1Time                UINT16               7009 12
E uiTParaSwitch                UINT16               7010 12
E uiGlobGain                   UINT16               7011 12
E uiParaSetCmdPers             UINT16               7012 12
E uiDummy20                    UINT16               7013 12
E uiParaSwitchCond             UINT16               7014 12
E uiParaSetWinTime             UINT16               7015 12
E uiParaSetPdif                UINT16               7016 12
E uiDummy19                    UINT16               7017 12
E uiDummy21                    UINT16               7018 12
E uiDummy22                    UINT16               7019 12
E uiDummy23                    UINT16               7020 12
E uiDummy24                    UINT16               7021 12
E ulSpeedFric                  UINT32               7522 12
E ulParaSetSpeed               UINT32               7524 12
E uiSpdObsActive               UINT16               7026 12
E uiSpdObsDynamic              UINT16               7027 12
E ulSpdObsInertia              UINT32               7528 12
E lParaSetPdifUsr              INT32                7530 12
D 13 paramCtrlS1 ParamCtrlSetStruct
E uiKpSpeedUsr                 UINT16               7000 13
E uiTnSpeedUsr                 UINT16               7001 13
E uiTauNRefUsr                 UINT16               7002 13
E uiOSupDampNUsr               UINT16               7003 13
E uiOSupDelayNUsr              UINT16               7004 13
E uiKPpUsr                     UINT16               7005 13
E uiKFPpUsr                    UINT16               7006 13
E uiTauIRefUsr                 UINT16               7007 13
E uiFrq1Usr                    UINT16               7008 13
E uiDamp1Usr                   UINT16               7009 13
E uiBandWidth1Usr              UINT16               7010 13
E uiGainFric                   UINT16               7011 13
E uiFrq2Usr                    UINT16               7012 13
E uiDamp2Usr                   UINT16               7013 13
E uiBandWidth2Usr              UINT16               7014 13
E ui_last_entry_not_even       UINT16               7015 13
D 14 paramCtrlS2 ParamCtrlSetStruct
E uiKpSpeedUsr                 UINT16               7000 14
E uiTnSpeedUsr                 UINT16               7001 14
E uiTauNRefUsr                 UINT16               7002 14
E uiOSupDampNUsr               UINT16               7003 14
E uiOSupDelayNUsr              UINT16               7004 14
E uiKPpUsr                     UINT16               7005 14
E uiKFPpUsr                    UINT16               7006 14
E uiTauIRefUsr                 UINT16               7007 14
E uiFrq1Usr                    UINT16               7008 14
E uiDamp1Usr                   UINT16               7009 14
E uiBandWidth1Usr              UINT16               7010 14
E uiGainFric                   UINT16               7011 14
E uiFrq2Usr                    UINT16               7012 14
E uiDamp2Usr                   UINT16               7013 14
E uiBandWidth2Usr              UINT16               7014 14
E ui_last_entry_not_even       UINT16               7015 14
D 15  CHwlDSPtoPower
E DSS_DspPower.uiCmdtoPower    ???                  7500 15
E DSS_DspPower.uiIdtoPower     ???                  7501 15
E DSS_DspPower.uiVDC           UINT16               7002 15
E DSS_DspPower.uiTemperatur    UINT16               7003 15
E DSS_DspPower.uiVL1           UINT16               7004 15
E DSS_DspPower.uiVL2           UINT16               7005 15
E DSS_DspPower.uiVL3           UINT16               7006 15
E DSS_DspPower.uiStateFromPower UINT16               7007 15
E DSS_DspPower.bIsDataOk       UINT16               7008 15
E DSS_DspPower.errCode         UINT32               7510 15
E DSS_DspPower.uiErrorLatch    UINT16               7012 15
E DSS_DataIdent.IdentLength    UINT16               7014 15
E DSS_DataIdent.PowerStageType UINT16               7015 15
E DSS_DataIdent.HardwareRevision UINT16               7016 15
E DSS_DataIdent.Features       UINT16               7017 15
E DSS_DataIdent.SoftwareVersion UINT16               7018 15
E DSS_DataIdent.SerialNumberW4 UINT16               7019 15
E DSS_DataIdent.SerialNumberW3 UINT16               7020 15
E DSS_DataIdent.SerialNumberW2 UINT16               7021 15
E DSS_DataIdent.SerialNumberW1 UINT16               7022 15
E DSS_DataIdent.uiDummy1       UINT16               7023 15
E DSS_DataIdent.uiDummy2       UINT16               7024 15
E DSS_DataIdent.uiDummy3       UINT16               7025 15
E DSS_DataIdent.uiDummy4       UINT16               7026 15
E DSS_DataIdent.Checksum       UINT16               7027 15
E m_uiRxFiFo                   UINT16[]             7528 15
E m_uiRxFiFoWritePtr.cnt       UINT16               7060 15
E m_uiRxFiFoReadPtr.cnt        UINT16               7061 15
E m_uiState                    UINT16               7062 15
E m_uiConnectTimeout           UINT16               7063 15
E m_ui62Cnt                    UINT16               7064 15
E m_uiIdentAdr                 UINT16               7065 15
E m_uiIdentCycle               UINT16               7066 15
E m_uiLessBytes                UINT16               7067 15
E m_uiIdentCycleNo             UINT16               7068 15
E m_uiIdentChecksum            UINT16               7069 15
E m_uiPSDataSize               UINT16               7070 15
E m_uiCnt                      UINT16               7071 15
E m_b62Part1IsSync             UINT16               7072 15
E m_ulSumPsTemp                UINT32               7574 15
E m_iqUkzMeasGain              INT32                7576 15
E m_pCom                       unknown*             7578 15
E m_puiDataAdr                 UINT16*              7580 15
D 16 detectedHwInfo DetectedHwInfoStruct
E modCom.uiType                UINT16               7000 16
E modCom.uiRevision            UINT16               7001 16
E modCom.uiFeatures            UINT16               7002 16
E modCom.uiForceFlag           UINT16               7003 16
E modEnc.uiType                UINT16               7004 16
E modEnc.uiRevision            UINT16               7005 16
E modEnc.uiFeatures            UINT16               7006 16
E modEnc.uiForceFlag           UINT16               7007 16
E modSlot1.uiType              UINT16               7008 16
E modSlot1.uiRevision          UINT16               7009 16
E modSlot1.uiFeatures          UINT16               7010 16
E modSlot1.uiForceFlag         UINT16               7011 16
D 17 CDrive CDrive
E __b_CBasDrive.__b_CBasComponent.__vptr unknown*             7500 17
E __b_CBasDrive.ToDrvCtrl.uiOpmRequest UINT16               7002 17
E __b_CBasDrive.ToDrvCtrl.uiAxModeInt UINT16               7003 17
E __b_CBasDrive.ToDrvCtrl.lPosRef INT32                7504 17
E __b_CBasDrive.ToDrvCtrl.uiPosRefRem UINT16               7006 17
E __b_CBasDrive.ToDrvCtrl.i64BlshOffsPos INT32                7508 17
E __b_CBasDrive.ToDrvCtrl.lSpdRef INT32                7512 17
E __b_CBasDrive.ToDrvCtrl.lCurRef INT32                7514 17
E __b_CBasDrive.ToDrvCtrl.lSpdFeed INT32                7516 17
E __b_CBasDrive.ToDrvCtrl.lAccFeed INT32                7518 17
E __b_CBasDrive.ToDrvCtrl.lSpdLim INT32                7520 17
E __b_CBasDrive.ToDrvCtrl.lCurLim INT32                7522 17
E __b_CBasDrive.ToDrvCtrl.bDoSpeedLimVar2 UINT16               7024 17
E __b_CBasDrive.ToDrvCtrl.bDoSwitchControlPara UINT16               7025 17
E __b_CBasDrive.ToDrvCtrl.bDoSpeedIntegralOff UINT16               7026 17
E __b_CBasDrive.ToDrvCtrl.bDoZeroClamp UINT16               7027 17
E __b_CBasDrive.ToDrvCtrl.ulActiveInFctBitCoded UINT32               7528 17
E __b_CBasDrive.ToDrvCtrl.uiBreakMotionActive UINT16               7030 17
E __b_CBasDrive.FromDrvCtrl.lPosAct INT32                7532 17
E __b_CBasDrive.FromDrvCtrl.lITotalAct INT32                7534 17
E __b_CBasDrive.FromDrvCtrl.lIqAct INT32                7536 17
E __b_CBasDrive.FromDrvCtrl.lUkzAct INT32                7538 17
E __b_CBasDrive.FromDrvCtrl.uiActionWordUser UINT16               7040 17
E __b_CBasDrive.FromDrvCtrl.uiStatus UINT16               7041 17
E __b_CBasDrive.FromDrvCtrl.uiUsrStateInfos UINT16               7042 17
E __b_CBasDrive.FromDrvCtrl.uiCmdRequest UINT16               7043 17
E __b_CBasDrive.FromDrvCtrl.uiPowerState UINT16               7044 17
E __b_CBasDrive.FromDrvCtrl.iqImax INT32                7546 17
E __b_CBasDrive.FromDrvCtrl.uiImaxPerCent UINT16               7048 17
E __b_CBasDrive.FromDrvCtrl.iqImaxQStop INT32                7550 17
E __b_CBasDrive.FromDrvCtrl.iqImaxHalt INT32                7552 17
E __b_CBasDrive.FromDrvCtrl.ulNmax UINT32               7554 17
E __b_CBasDrive.FromDrvCtrl.ulVelMaxIntern UINT32               7556 17
E __b_CBasDrive.FromDrvCtrl.bAbPosIsSet UINT16               7058 17
E __b_CBasDrive.FromDrvCtrl.bEnc1PosIsSet UINT16               7059 17
E __b_CBasDrive.FromDrvCtrl.iqpUkzFlt INT32*               7560 17
E __b_CBasDrive.FromDrvCtrl.iqpIqAct INT32*               7562 17
E __b_CBasDrive.FromDrvCtrl.iqpIqRef INT32*               7564 17
E __b_CBasDrive.FromDrvCtrl.iqpSpdPrRef INT32*               7566 17
E __b_CBasDrive.FromDrvCtrl.iqpSpeedRef INT32*               7568 17
E __b_CBasDrive.FromDrvCtrl.iqpPosRef INT32*               7570 17
E __b_CBasDrive.FromDrvCtrl.iqpPosDif INT32*               7572 17
E __b_CBasDrive.FromDrvCtrl.bSelErrIsSet UINT16               7074 17
E __b_CBasDrive.FromDrvCtrl.bSelWarnIsSet UINT16               7075 17
E __b_CBasDrive.FromDrvCtrl.lRs422InCnt INT32                7576 17
E __b_CBasDrive.FromDrvCtrl.uiRs422Fine UINT16               7078 17
E __b_CBasDrive.FromDrvCtrl.uiRefPulseCalcState UINT16               7079 17
E __b_CBasDrive.FromDrvCtrl.lVelRs422Act_Inc_65536ms INT32                7580 17
E __b_CBasDrive.FromDrvCtrl.iqSpeedMax INT32                7582 17
E m_theSpeQStopHalt            unknown*             7584 17
E DeltaParaSwitch.iqCurrPT1PrmA INT32                7586 17
E DeltaParaSwitch.iqCurrPT1PrmB INT32                7588 17
E DeltaParaSwitch.iqLeadLagPrmA INT32                7590 17
E DeltaParaSwitch.iqLeadLagPrmB INT32                7592 17
E DeltaParaSwitch.iqKpSpeed    INT32                7594 17
E DeltaParaSwitch.iqKiSpeed    INT32                7596 17
E DeltaParaSwitch.iqKpp        INT32                7598 17
E DeltaParaSwitch.iqKppRecFrac INT32                7600 17
E DeltaParaSwitch.iqSpdFfdCo   INT32                7602 17
E DeltaParaSetSwitch.iqCurrPT1PrmA INT32                7604 17
E DeltaParaSetSwitch.iqCurrPT1PrmB INT32                7606 17
E DeltaParaSetSwitch.iqLeadLagPrmA INT32                7608 17
E DeltaParaSetSwitch.iqLeadLagPrmB INT32                7610 17
E DeltaParaSetSwitch.iqKpSpeed INT32                7612 17
E DeltaParaSetSwitch.iqKiSpeed INT32                7614 17
E DeltaParaSetSwitch.iqKpp     INT32                7616 17
E DeltaParaSetSwitch.iqKppRecFrac INT32                7618 17
E DeltaParaSetSwitch.iqSpdFfdCo INT32                7620 17
E DeltaParaSetSwitch2_1.iqCurrPT1PrmA INT32                7622 17
E DeltaParaSetSwitch2_1.iqCurrPT1PrmB INT32                7624 17
E DeltaParaSetSwitch2_1.iqLeadLagPrmA INT32                7626 17
E DeltaParaSetSwitch2_1.iqLeadLagPrmB INT32                7628 17
E DeltaParaSetSwitch2_1.iqKpSpeed INT32                7630 17
E DeltaParaSetSwitch2_1.iqKiSpeed INT32                7632 17
E DeltaParaSetSwitch2_1.iqKpp  INT32                7634 17
E DeltaParaSetSwitch2_1.iqKppRecFrac INT32                7636 17
E DeltaParaSetSwitch2_1.iqSpdFfdCo INT32                7638 17
E m_uiCtrlReg                  UINT16               7140 17
E m_uiCtrlSave                 UINT16               7141 17
E m_uiInvDir                   UINT16               7142 17
E m_uiStatusReg                UINT16               7143 17
E m_uiStatus2Reg               UINT16               7144 17
E m_uiMonMaskReg               UINT16               7145 17
E m_uiNonUsrParamBitMask       UINT16               7146 17
E m_uiUsrParamBitMask          UINT16               7147 17
E m_uiUsrRevInConsistFlag      UINT32               7648 17
E m_uiFreqSinUsr               UINT16               7150 17
E m_iqMagSin                   INT32                7652 17
E m_iqAglVoltVec               INT32                7654 17
E m_iqMagVoltVec               INT32                7656 17
E m_uiSetActive                UINT16               7158 17
E m_bFlagSwitchingInProcess    UINT16               7159 17
E m_bFlagSwitchCondition       UINT16               7160 17
E m_uiParaRescale              UINT16               7161 17
E m_lInCountParaSetWinTime     INT32                7662 17
E m_lOutCountParaSetWinTime    INT32                7664 17
E m_lParaSetPdif               INT32                7666 17
E m_iqParaSetSpeed             INT32                7668 17
E m_uiTauNRefUsr100            UINT16               7170 17
E m_uiKpSpeedUsr100            UINT16               7171 17
E m_uiTnSpeedUsr100            UINT16               7172 17
E m_uiKPpUsr100                UINT16               7173 17
E m_uiTnSpeedUsr100NoIO        UINT16               7174 17
E m_uiGlobGainOld              UINT16               7175 17
E m_uiTnSpeedUsrAct            UINT16[]             7676 17
E PosCtrl.m_iqSpdFfdCo         INT32[]              7678 17
E PosCtrl.m_iqKpp              INT32[]              7684 17
E PosCtrl.m_iqKppRecFrac       INT32[]              7690 17
E PosCtrl.m_iqPosActForPosCtrl INT32                7696 17
E PosCtrl.m_iqPos_man          INT32                7698 17
E PosCtrl.m_iqPosDif           INT32                7700 17
E PosCtrl.m_iqPosRef           INT32                7702 17
E PosCtrl.m_iqPosAxf           INT32                7704 17
E PosCtrl.m_iqSpdPrRef         INT32                7706 17
E PosCtrl.m_iqSpeedPosCtrl     INT32                7708 17
E PosCtrl.m_iqAccFfdTerm       INT32                7710 17
E PosCtrl.m_iqGainAccFfdSpeed  INT32[]              7712 17
E PosCtrl.__vptr               unknown*             7716 17
E Parascal.__vptr              unknown*             7718 17
E Statem.m_ulEnableDisableState UINT16               7220 17
E Statem.m_uiDriveEnable       UINT16               7221 17
E Statem.m_uiDriveDisable      UINT16               7222 17
E Statem.m_uiTripForced        UINT16               7223 17
E Statem.m_bPwmChg1Flg         UINT16               7224 17
E Statem.m_bQepChgFlg          UINT16               7225 17
E Statem.m_uiPwm1Prd           INT32                7726 17
E Statem.m_uiQepPrd            INT32                7728 17
E Statem.m_uiEnaTimeSmp        UINT16               7230 17
E Statem.m_uiDisTimeSmp        UINT16               7231 17
E Statem.m_iqHalfT1Per         INT32                7732 17
E Statem.m_uiTTick1msSmp       UINT16               7234 17
E SpdCtrl.LeadLag.PT1part.m_iqOutput INT32                7736 17
E SpdCtrl.LeadLag.PT1part.m_iqPrmA INT32[]              7738 17
E SpdCtrl.LeadLag.PT1part.m_iqPrmB INT32[]              7744 17
E SpdCtrl.LeadLag.m_iqOutput   INT32                7750 17
E SpdCtrl.LeadLag.m_iqPrmK     INT32                7752 17
E SpdCtrl.LeadLag.m_iqOutputLim INT32[]              7754 17
E SpdCtrl.PidDT1part.PT1part.m_iqOutput INT32                7758 17
E SpdCtrl.PidDT1part.PT1part.m_iqPrmA INT32                7760 17
E SpdCtrl.PidDT1part.PT1part.m_iqPrmB INT32                7762 17
E SpdCtrl.PidDT1part.m_iqOutput INT32                7764 17
E SpdCtrl.PidDT1part.m_iqLimit INT32                7766 17
E SpdCtrl.PidDT1part.m_iqPrmK  INT32                7768 17
E SpdCtrl.OSup.m_iqOutput      INT32                7770 17
E SpdCtrl.OSup.m_iqDampRatio   INT32[]              7772 17
E SpdCtrl.OSup.m_uiDelayTime   UINT16[]             7776 17
E SpdCtrl.OSup.m_uiIdx         UINT16               7278 17
E SpdCtrl.OSup.m_piqLoopMem    INT32*               7780 17
E SpdCtrl.OSup.m_bFilterActive UINT16               7282 17
E SpdCtrl.m_iqKpSpeed          INT32[]              7784 17
E SpdCtrl.m_iqKiSpeed          INT32[]              7790 17
E SpdCtrl.m_iqSpeedInteg       INT32                7796 17
E SpdCtrl.m_iqIqFricMax        INT32[]              7798 17
E SpdCtrl.m_iqSpeedRef         INT32                7802 17
E SpdCtrl.m_iqSpeedDif         INT32                7804 17
E SpdCtrl.m_iqYSpeed           INT32                7806 17
E SpdCtrl.m_iqSpeedPpart       INT32                7808 17
E SpdCtrl.m_iqSpeed_man        INT32                7810 17
E SpdCtrl.m_iqSpdLim           INT32                7812 17
E SpdCtrl.m_iqIqSpeedLimRef    INT32                7814 17
E SpdCtrl.m_iqAccFfdTerm       INT32                7816 17
E SpdCtrl.m_bSwitchAccFfd      UINT16               7318 17
E SpdCtrl.m_iqGainAccFfdCurrent INT32                7820 17
E SpdCtrl.m_iqAccFfdLim        INT32                7822 17
E SpdCtrl.m_iqIqRefCtrl        INT32                7824 17
E SpdCtrl.m_uiLimitFlg         UINT16               7326 17
E SpdCtrl.m_iqSpeedAxf         INT32                7828 17
E SpdCtrl.m_iqSpeedFricConstInv INT32                7830 17
E SpdCtrl.m_iqSpeedFricConst   INT32                7832 17
E SpdCtrl.m_iqIqFricTerm       INT32                7834 17
E SpdCtrl.m_iqSpeedZeroClampHigh INT32                7836 17
E SpdCtrl.m_iqSpeedZeroClampLow INT32                7838 17
E SpdCtrl.m_uiResetSpeedInteg  UINT16               7340 17
E SpdCtrl.m_plSpdMem           INT32[]              7842 17
D 18 CSensors CSensors
E m_iqEpsE_b                   INT32                7500 18
E m_ulSetPosEncUsr             UINT32               7502 18
E m_iqUkzFlt                   INT32                7504 18
E m_iqIu                       INT32                7506 18
E m_iqIv                       INT32                7508 18
E m_iqIuUse                    INT32                7510 18
E m_iqIvUse                    INT32                7512 18
E m_iqIalpha                   INT32                7514 18
E m_iqIbeta                    INT32                7516 18
E m_iqIqActExport              INT32                7518 18
E m_iqIdAct                    INT32                7520 18
E m_iqIqAct                    INT32                7522 18
E m_iqImag1ms                  INT32                7524 18
E m_iqImagSquared1ms           INT32                7526 18
E m_iqIqActOld125              INT32                7528 18
E m_iqIqActOld                 INT32                7530 18
E m_iqIuSum                    INT32                7532 18
E m_iqIvSum                    INT32                7534 18
E m_iqIuMean                   INT32                7536 18
E m_iqIvMean                   INT32                7538 18
E m_iqEpsE                     INT32                7540 18
E m_iqEpsEExtra                INT32                7542 18
E m_iqCosEpsE                  INT32                7544 18
E m_iqSinEpsE                  INT32                7546 18
E m_iqEpsE_man                 INT32                7548 18
E m_iqOmega_man                INT32                7550 18
E m_bFlagCalibCurrent          UINT16               7052 18
E __vptr                       unknown*             7554 18
D 19 CCurrentCtrl CCurrentCtrl
E CurrPT1.m_iqOutput           INT32                7500 19
E CurrPT1.m_iqPrmA             INT32[]              7502 19
E CurrPT1.m_iqPrmB             INT32[]              7508 19
E Notch1.m_iqOutput            INT32                7514 19
E Notch1.m_iqLast              INT32                7516 19
E Notch1.m_iqLast2nd           INT32                7518 19
E Notch1.m_iqLastInput         INT32                7520 19
E Notch1.m_iqLast2ndInput      INT32                7522 19
E Notch1.m_iqPrmA1             INT32[]              7524 19
E Notch1.m_iqPrmA2             INT32[]              7528 19
E Notch1.m_iqPrmB2             INT32[]              7532 19
E Notch1.m_iqPrmB1             INT32[]              7536 19
E Notch1.m_iqPrmB0             INT32[]              7540 19
E Notch2.m_iqOutput            INT32                7544 19
E Notch2.m_iqLast              INT32                7546 19
E Notch2.m_iqLast2nd           INT32                7548 19
E Notch2.m_iqLastInput         INT32                7550 19
E Notch2.m_iqLast2ndInput      INT32                7552 19
E Notch2.m_iqPrmA1             INT32[]              7554 19
E Notch2.m_iqPrmA2             INT32[]              7558 19
E Notch2.m_iqPrmB2             INT32[]              7562 19
E Notch2.m_iqPrmB1             INT32[]              7566 19
E Notch2.m_iqPrmB0             INT32[]              7570 19
E PWM.m_iqTa                   INT32                7574 19
E PWM.m_iqTb                   INT32                7576 19
E PWM.m_iqTc                   INT32                7578 19
E m_iqYIdOut                   INT32                7580 19
E m_iqYIqOut                   INT32                7582 19
E m_iqUmag                     INT32                7584 19
E m_iqIdRef                    INT32                7586 19
E m_iqIqRef                    INT32                7588 19
E m_iqIdDif                    INT32                7590 19
E m_iqIqDif                    INT32                7592 19
E m_iqYId                      INT32                7594 19
E m_iqYIq                      INT32                7596 19
E m_iqUdReg2                   INT32                7598 19
E m_iqUqReg2                   INT32                7600 19
E m_iqGainCo                   INT32                7602 19
E m_iqIqRefOld                 INT32                7604 19
E m_iqIqRefOld125              INT32                7606 19
E m_iqUDif                     INT32                7608 19
E m_iqUInteg                   INT32                7610 19
E m_iqUPpart                   INT32                7612 19
E m_iqYU                       INT32                7614 19
E m_iqKpU                      INT32                7616 19
E m_iqKiU                      INT32                7618 19
E m_iqIdInteg                  INT32                7620 19
E m_iqIqInteg                  INT32                7622 19
E m_iqIdPpart                  INT32                7624 19
E m_iqIqPpart                  INT32                7626 19
E m_iqKpIdATG                  INT32                7628 19
E m_iqKpIqATG                  INT32                7630 19
E m_iqKpId                     INT32                7632 19
E m_iqKiId                     INT32                7634 19
E m_iqKpIq                     INT32                7636 19
E m_iqKiIq                     INT32                7638 19
E m_iqIdMct                    INT32                7640 19
E m_iqUdMct                    INT32                7642 19
E m_iqPxLq                     INT32                7644 19
E m_iqPxLd                     INT32                7646 19
E m_iqPxEMF                    INT32                7648 19
E m_iqPxEMFmodified1           INT32                7650 19
E m_iqPxEMFmodified2           INT32                7652 19
E m_iqR                        INT32                7654 19
E m_iqRsquare                  INT32                7656 19
E m_iqInvId0                   INT32                7658 19
E m_iqIdFFTerm                 INT32                7660 19
E m_iqIqFFTerm                 INT32                7662 19
E m_iqId_man                   INT32                7664 19
E m_iqIq_man                   INT32                7666 19
E m_iqUd_man                   INT32                7668 19
E m_iqUq_man                   INT32                7670 19
E m_iqIqAxf                    INT32                7672 19
E m_piqCrtSat                  INT32[]              7674 19
E m_iqUdStatic                 INT32                7684 19
E m_iqUqStatic                 INT32                7686 19
E m_iqUdSet                    INT32                7688 19
E m_iqUqSet                    INT32                7690 19
E m_iqIqSet                    INT32                7692 19
E m_iqIdSet                    INT32                7694 19
E m_iqUphLimReduced            INT32                7696 19
E m_iqUphLimReducedSquare      INT32                7698 19
E m_iqUkzRec                   INT32                7700 19
E m_iqUphLim                   INT32                7702 19
E m_iqVoltUtil                 INT32                7704 19
E m_iqCosEpsEExtra             INT32                7706 19
E m_iqSinEpsEExtra             INT32                7708 19
E m_iqUalfa                    INT32                7710 19
E m_iqUbeta                    INT32                7712 19
E m_iqIqLim                    INT32                7714 19
E m_iqCrtAxfLim                INT32                7716 19
E m_iqItotLim                  INT32                7718 19
E m_ulCmpU_Sum                 UINT32               7720 19
E m_ulCmpV_Sum                 UINT32               7722 19
E m_ulCmpW_Sum                 UINT32               7724 19
E m_uiCmpU_Mean                UINT16               7226 19
E m_uiCmpV_Mean                UINT16               7227 19
E m_uiCmpW_Mean                UINT16               7228 19
E m_iCmpSumCnt                 INT16                7229 19
E m_iDutyUExcept               INT16                7230 19
E m_iDutyVExcept               INT16                7231 19
E m_iDutyWExcept               INT16                7232 19
E m_iqKpULimReduce             INT32                7734 19
E __vptr                       unknown*             7736 19
D 20 CMonitoring CMonitoring
E I2tSmoothPT1.m_iqOutput      INT32                7500 20
E I2tSmoothPT1.m_iqPrmA        INT32                7502 20
E I2tSmoothPT1.m_iqPrmB        INT32                7504 20
E m_iqSmoothBalance            INT32                7506 20
E m_uiI2tSmoothCnt             UINT16               7008 20
E m_iqPdifPeak                 INT32                7510 20
E m_uiPsImax                   UINT16               7012 20
E m_uiPsInom                   UINT16               7013 20
E m_iqSpeedMax                 INT32                7514 20
E m_iqIdLim                    INT32                7516 20
E m_iqUkzMax                   INT32                7518 20
E m_iqUkzMin                   INT32                7520 20
E m_iqUkzQstop                 INT32                7522 20
E m_uiIMaxSysApk               UINT16               7024 20
E m_uiImaxSysPerCent           UINT16               7025 20
E m_uiBalBurnIn                UINT16               7026 20
E m_iqI2tBal                   INT32                7528 20
E m_iqI2tBalLim                INT32                7530 20
E m_iqI2tBalLim75              INT32                7532 20
E m_iqLoadFactRes              INT32                7534 20
E m_iqI2tBalCatch_Lt           INT32                7536 20
E m_iqI2tBalCatch              INT32                7538 20
E m_iqKiBal                    INT32                7540 20
E m_iqIOn2Bal                  INT32                7542 20
E m_iqInom2Bal                 INT32                7544 20
E m_iqBresUlimRec              INT32                7546 20
E m_iqIOn2RelBal               INT32                7548 20
E m_iqIactRelBal               INT32                7550 20
E m_uiWaitTime                 UINT16               7052 20
E m_iqI2tBalFanSwitch          INT32                7554 20
E m_iqIon2BalAct               INT32                7556 20
E m_iqIon2RelBalAct            INT32                7558 20
E m_iqUkzBalH                  INT32                7560 20
E m_iqUkzBalL                  INT32                7562 20
E m_uiBallastCnt               UINT16               7064 20
E m_iBalWarnLim                INT16                7065 20
E m_iqI2tMot                   INT32                7566 20
E m_iqI2tMotMax                INT32                7568 20
E m_iqIact2RelMot              INT32                7570 20
E m_iqI2MotDiff                INT32                7572 20
E m_iqLoadFactMot              INT32                7574 20
E m_iqI2tMotCatch_Lt           INT32                7576 20
E m_iqI2tMotCatch              INT32                7578 20
E m_iqInom2Mot                 INT32                7580 20
E m_iqKiMot                    INT32                7582 20
E m_iqI2tMotLimH               INT32                7584 20
E m_iqKpI2tMot                 INT32                7586 20
E m_iqI2tMotIred               INT32                7588 20
E m_iqKiPs                     INT32                7590 20
E m_iqInom2Ps                  INT32                7592 20
E m_iqI2tPsLimH                INT32                7594 20
E m_iqI2tPs                    INT32                7596 20
E m_iqI2tPsMax                 INT32                7598 20
E m_iqI2PsDiff                 INT32                7600 20
E m_iqIact2RelPs               INT32                7602 20
E m_iqLoadFactPs               INT32                7604 20
E m_iqAllRelPsCatch_Lt         INT32                7606 20
E m_iqAllRelPsCatch            INT32                7608 20
E m_iqKpI2tPs                  INT32                7610 20
E m_iqI2tPsIred                INT32                7612 20
E m_iqOverloadIred             INT32                7614 20
E m_iqPnom2                    INT32                7616 20
E m_iqPow2t                    INT32                7618 20
E m_iqKiPow                    INT32                7620 20
E m_iqPow2tLimH                INT32                7622 20
E m_iqPow2tMax                 INT32                7624 20
E m_iqKpPow2t                  INT32                7626 20
E m_iqPow2tIred                INT32                7628 20
E m_iqPowAct                   INT32                7630 20
E m_iPowActUsr                 INT16                7132 20
E m_iqPPowSmooth               INT32                7634 20
E m_iqPthermKpR12              INT32                7636 20
E ThermModell1.m_iqOutput      INT32                7638 20
E ThermModell1.m_iqPrmA        INT32                7640 20
E ThermModell1.m_iqPrmB        INT32                7642 20
E ThermModell2.m_iqOutput      INT32                7644 20
E ThermModell2.m_iqPrmA        INT32                7646 20
E ThermModell2.m_iqPrmB        INT32                7648 20
E m_iqPlosI                    INT32                7650 20
E m_iqTempInteg                INT32                7652 20
E m_iqKpTempChip               INT32                7654 20
E m_iqKiTempChip               INT32                7656 20
E m_iqTempIred                 INT32                7658 20
E m_iqI2tRelPs                 INT32                7660 20
E m_iqPow2RelPs                INT32                7662 20
E m_iqTempRelPs                INT32                7664 20
E m_iqAllRelPs                 INT32                7666 20
E m_lPosWin                    INT32                7668 20
E m_lPosWinTime                INT32                7670 20
E m_lCountPosWin               INT32                7672 20
E m_ulRoundingErrorPowUp       UINT32               7674 20
E m_iqPdifMax                  INT32                7676 20
E m_iqPosDifDynamic            INT32                7678 20
E m_iqPdifWarn                 INT32                7680 20
E m_ulPdifWarnTmp              UINT32               7682 20
E m_iPosTrackErrCnt            INT16                7184 20
E m_lSupvPosDeviatLim          INT32                7686 20
E m_uiSupvPosDeviatTimeDownCnt UINT16               7188 20
E m_iqSupvSpeedDeviatLim       INT32                7690 20
E m_uiSupvSpeedDeviatTimeDownCnt UINT16               7192 20
E m_iqSupvSpeedValueLim        INT32                7694 20
E m_uiSupvSpeedValueTimeDownCnt UINT16               7196 20
E m_iqSupvCurrValueLim         INT32                7698 20
E m_uiSupvCurrValueTimeDownCnt UINT16               7200 20
E m_uiPreSetValueTimeCnt       UINT16               7201 20
E m_iqSpeedLimVar2             INT32                7702 20
E m_iqSpeedLimVar2CurrCtrl     INT32                7704 20
E m_iTempHsMax                 INT16                7206 20
E m_iTempHsWarn                INT16                7207 20
E m_iTempCpuMax                INT16                7208 20
E m_iTempHS                    INT16                7209 20
E m_iTempCpu                   INT16                7210 20
E m_iqDeltaUkzFol              INT32                7712 20
E m_iRelaisCnt                 INT16                7214 20
E m_iRelaisNegativCnt          INT16                7215 20
E m_iqUupFol1Integ             INT32                7716 20
E m_iqUupFol2Integ             INT32                7718 20
E m_iqUdownFol1Integ           INT32                7720 20
E m_iqUdownFol2Integ           INT32                7722 20
E m_iqVupFol1Integ             INT32                7724 20
E m_iqVupFol2Integ             INT32                7726 20
E m_iqVdownFol1Integ           INT32                7728 20
E m_iqVdownFol2Integ           INT32                7730 20
E m_iqWupFol1Integ             INT32                7732 20
E m_iqWupFol2Integ             INT32                7734 20
E m_iqWdownFol1Integ           INT32                7736 20
E m_iqWdownFol2Integ           INT32                7738 20
E m_iqTempChip                 INT32                7740 20
E m_iqTempChipUsr              INT32                7742 20
E m_iqChipTempMax              INT32                7744 20
E m_iCommutCnt                 INT16                7246 20
E m_iCommutMaxCatch            INT16                7247 20
E m_iCommutCredit              INT16                7248 20
E m_iCommutLim                 INT16                7249 20
E m_iTempFanSwitch             INT16                7250 20
E m_ulFanCnt                   UINT32               7752 20
E m_iUmains_Scal               INT16                7254 20
E m_iqUmainsUx                 INT32                7756 20
E m_iqUmainsUy                 INT32                7758 20
E m_iqUmainsMag                INT32                7760 20
E m_iqUmainsMagFlt             INT32                7762 20
E m_iqUmainsRho                INT32                7764 20
E m_iqUmainsFreq               INT32                7766 20
E m_iqUmainsFqFol              INT32                7768 20
E m_iqUmainsKi                 INT32                7770 20
E m_iqUmainsPllDiff            INT32                7772 20
E m_iqUmainsPllPpart           INT32                7774 20
E m_iqUmainsPllIpart           INT32                7776 20
E m_iqUmainsLimL               INT32                7778 20
E m_iqUmainsLimH               INT32                7780 20
E m_iUmainsCnt                 INT16                7282 20
E m_iUmainsOkCnt               INT16                7283 20
E m_bUmainsSettled             UINT16               7284 20
E m_iqUmainsRectAvr            INT32                7786 20
E m_uiUmainsFlg                UINT16               7288 20
E m_iUmainsHyCnt               INT16                7289 20
E m_iqDeltaUmainsFol           INT32                7790 20
E m_bTriggerTaskMainUmains     UINT16               7292 20
E m_uiDeviceType               UINT16               7293 20
E m_bUmainsStableCheck         UINT16               7294 20
E m_iUmainsStableCnt           INT16                7295 20
E m_uiMthDoIt                  UINT16               7296 20
E m_uiMthermToggle             UINT16               7297 20
E m_iMthermCnt1                INT16                7298 20
E m_i64ImagSquMean1.L          UINT32               7800 20
E m_i64ImagSquMean1.H          INT32                7802 20
E m_iqSpeedMean1               INT32                7804 20
E m_iMthermCnt2                INT16                7306 20
E m_i64ImagSquMean2.L          UINT32               7808 20
E m_i64ImagSquMean2.H          INT32                7810 20
E m_iqSpeedMean2               INT32                7812 20
E m_dPv1Hot                    ???                  7814 20
E m_dPv1Hot_Old1               ???                  7816 20
E m_dPv1Hot_Old2               ???                  7818 20
E m_dMthBeta                   ???                  7820 20
E m_dMthRhot                   ???                  7822 20
E m_iMThetaCnt                 INT16                7324 20
E m_iMthDelta_A                INT16                7325 20
E m_iMthDelta_B                INT16                7326 20
E m_ldMthSho_den               ???                  7828 20
E m_ldMthSho_num               ???                  7832 20
E m_ldTheta31Sho               ???                  7836 20
E m_ldTheta31Sho_Old1          ???                  7840 20
E m_iMThetaSho                 INT16                7344 20
E m_iTheta31Sho                INT16                7345 20
E m_ulMthDuration              UINT32               7846 20
E m_bMotI2tOff                 UINT16               7348 20
E m_uiCntOvercur               UINT16               7349 20
E m_iqSpeedActMax              INT32                7850 20
E m_uiSpdMaxCnt                UINT16               7352 20
E m_uiLXMATVUdcMax             UINT16               7353 20
E m_uiDCbusCompat              UINT16               7354 20
E m_uiUkzbalH                  UINT16               7355 20
E m_uiUkzbalL                  UINT16               7356 20
D 21  CEprFileMgr
E __b_CBasComponent.__vptr     unknown*             7500 21
E m_theErrorFifo.m_puiBuffer   UINT16*              7502 21
E m_theErrorFifo.m_uiRead      UINT16               7004 21
E m_theErrorFifo.m_uiWrite     UINT16               7005 21
E m_theErrorFifo.m_uiLength    UINT16               7006 21
E m_theErrorFifo.m_uiEntries   UINT16               7007 21
E m_theErrorFifo.m_uiOverrun   UINT16               7008 21
E m_theErrorFifo.m_uiError     UINT16               7009 21
E m_theErrorFifo.m_uiNoOfCall  UINT16               7010 21
E m_uiFileInstance             ???                  7512 21
E m_uiErrListPtr               UINT16               7013 21
E m_uiErrListCnt               UINT16               7014 21
E m_uiErrReadListCnt           UINT16               7015 21
E m_uiErrReadListPtr           UINT16               7016 21
E m_uiAmpOnCnt                 UINT16               7017 21
E m_uiParamComReset            UINT16               7018 21
E m_uiPreviousProgVers         UINT16               7019 21
E m_bitWriteInProgress         UINT16               7020 21
E m_CopyReadBuffer.uiNumber    UINT16               7022 21
E m_CopyReadBuffer.uiDetail    UINT16               7023 21
E m_CopyReadBuffer.ulClassTime UINT32               7524 21
E m_CopyReadBuffer.uiAddInfo   UINT16[]             7526 21
E m_pEprFileList               unknown*[]           7532 21
E m_ulTimeAmpOn                UINT32               7558 21
D 22  CHwlDio
E m_uiDigIn                    UINT16               7000 22
E m_uiDigOut                   UINT16               7001 22
E m_uiForceHighMaskIn          UINT16               7002 22
E m_uiForceLowMaskIn           UINT16               7003 22
E m_uiForceHighMaskOut         UINT16               7004 22
E m_uiForceLowMaskOut          UINT16               7005 22
E m_uiInHwInvertMask           UINT16               7006 22
E m_uiInForceCnf               UINT16               7007 22
E m_uiOutForceCnf              UINT16               7008 22
E m_uiInIvertCnf               UINT16               7009 22
E m_uiDigInSTOAB               UINT16               7010 22
E m_uiDigInAvailable           UINT16               7011 22
E m_uiDigOutAvailable          UINT16               7012 22
E m_uiDigOutRd                 UINT16               7013 22
E m_uiDigInOut                 UINT16               7014 22
E m_uiDigOutLed                UINT16               7015 22
E m_pCtrlReg                   unknown*             7516 22
E m_cDioSwDeb.m_sDebounce      ???                  7518 22
E m_cDioSwDeb.m_uiDeb0         UINT16               7025 22
E m_cDioSwDeb.m_uiDebBuf       UINT16[]             7526 22
E m_cDioSwDeb.m_uiInDebounceMask UINT16               7033 22
D 23  CIhm
E __b_CBasComponent.__vptr     unknown*             7500 23
E ulParameterValue             UINT32               7502 23
E uiIHMlock                    UINT16               7004 23
E ulIHMdisp                    UINT32               7506 23
E uiIHMdot                     UINT16               7008 23
E uiIHMUserName                UINT16               7009 23
D 24  CProfileCiA402
E __b_CBasComponent.__vptr     unknown*             7500 24
E m_bWasInState6               UINT16               7002 24
E m_uiHaltSum                  UINT16               7003 24
E m_opmChannel                 ???                  7504 24
E m_iOpModeOld                 INT16                7005 24
E m_uiCtrlWordDC_act           UINT16               7006 24
E m_uiStatWordDC_act           UINT16               7007 24
E m_uiCountNewSetpoint         UINT16               7008 24
E m_uiDcomRefmanual            UINT16               7009 24
E m_uiPosOption                UINT16               7010 24
E m_uiDcomRefgear              UINT16               7011 24
E m_uiDcomRefTorq              UINT16               7012 24
E m_uiDcomRefVel               UINT16               7013 24
E m_iDcomRefValOfTorq          INT16                7014 24
E m_iDcomHomeMethod            INT16                7015 24
E m_bContinuePending           UINT16               7016 24
E m_uiSuppressHaltBit          UINT16               7017 24
E m_uiDataSetToBeStarted       UINT16               7018 24
E m_uiProbesConfig             UINT16               7019 24
E m_uiProbesStatus             UINT16               7020 24
E l_TargetPosOld               INT32                7522 24
E m_lDcomRefProfVel            INT32                7524 24
E m_lDcomTargetPos             INT32                7526 24
E m_lHomeSetpos                INT32                7528 24
E m_ulDcomTargetVel            UINT32               7530 24
E m_ulContinueParam            UINT32               7532 24
E m_ulContinueValue            UINT32               7534 24
E m_ulMainLoopBlkCnt           UINT32               7536 24
D 25  CProfilePlcOpen
E __b_CBasComponent.__vptr     unknown*             7500 25
E m_uiIndexOfBasicElements     UINT16[]             7502 25
E m_uiME_errCode               UINT16               7005 25
E m_uiME_errInfo               UINT16               7006 25
E m_uiDE_errCode               UINT16               7007 25
E m_uiDE_errInfo               UINT16               7008 25
E m_uiPLCopenActive            UINT16               7009 25
E m_bSkipNextMainloop          UINT16               7010 25
E m_basChannel                 ???                  7511 25
E m_uiRxCtrlBits               UINT16               7012 25
E m_uiTxCtrlBits               UINT16               7013 25
E m_uiShiftFactor              UINT16               7014 25
E m_ulStatusWordBL             UINT32               7516 25
E m_bTakeoverMtIndependantDataAfterLogout UINT16               7018 25
E MyPLCopenWorkingData         unknown*             7520 25
E m_pMyPLCopenDataInterface    unknown*             7522 25
E m_pMyPLCopenMTdepData        unknown*             7524 25
E m_pMyPLCopenMTindepData      unknown*             7526 25
E m_psParamChannelMS           unknown*             7528 25
E m_psParamChannelSM           unknown*             7530 25
E m_pdmControl                 unknown*             7532 25
E m_prefA                      unknown*             7534 25
E m_prefB                      unknown*             7536 25
D 26  CIoc
E __b_CBasComponent.__vptr     unknown*             7500 26
E m_sCtrlBits.bitFaultReset    UINT16               7002 26
E m_sCtrlBits_B.bitOpModeActive UINT16               7003 26
E m_uiIofFuncDq0               UINT16               7004 26
E m_uiIofFuncDq1               UINT16               7005 26
E m_uiIofFuncDq2               UINT16               7006 26
E m_uiIofFuncDq3               UINT16               7007 26
E m_uiIofFuncDq4               UINT16               7008 26
E m_uiUsrDirectOutputVal       UINT16               7009 26
E m_uiStrtMotnSeqState         UINT16               7010 26
E m_uiNextIoOpmodeReqByOpmSwitch UINT16               7011 26
E m_uiJogStartParam            UINT16               7012 26
E m_uiOldOpmMode               UINT16               7013 26
E m_uiOpModeReq                UINT16               7014 26
E m_uiFaultResetDelay250usCnt  UINT16               7015 26
E m_ulClkInternTimeStampAtChgToState6 UINT32               7516 26
E m_ulLastParam                UINT32               7518 26
E m_ulLastParamValue           UINT32               7520 26
E m_ulActiveInFctBitCoded0to31 UINT32               7522 26
E m_ulActiveInFctBitCoded32to63 UINT32               7524 26
E m_ulHwLimpDigInBitMask       UINT32               7526 26
E m_ulHwLimnDigInBitMask       UINT32               7528 26
E m_ulHwRefDigInBitMask        UINT32               7530 26
E m_ulFaultResetDigInBitMask   UINT32               7532 26
E m_ulEnable1DigInBitMask      UINT32               7534 26
E m_ulHaltDigInBitMask         UINT32               7536 26
E m_ulCanCtrlStartDigInBitMask UINT32               7538 26
E m_ulDataSetStartReqDigInBitMask UINT32               7540 26
E m_ulDataSetDataSelDigInBitMask UINT32               7542 26
E m_ulLimSpeedValueDigInBitMask UINT32               7544 26
E m_ulJogPosDirDigInBitMask    UINT32               7546 26
E m_ulJogNegDirDigInBitMask    UINT32               7548 26
E m_ulJogFastDigInBitMask      UINT32               7550 26
E m_ulAna1InvertDigInBitMask   UINT32               7552 26
E m_ulAna2InvertDigInBitMask   UINT32               7554 26
E m_ulDataSetDataData0DigInBitMask UINT32               7556 26
E m_ulDataSetDataData1DigInBitMask UINT32               7558 26
E m_ulDataSetDataData2DigInBitMask UINT32               7560 26
E m_ulDataSetDataData3DigInBitMask UINT32               7562 26
E m_ulStrtMotnSeqDigInBitMask  UINT32               7564 26
E m_ulLimCurrValueDigInBitMask UINT32               7566 26
E m_ulZeroClampDigInBitMask    UINT32               7568 26
E m_ulGearRatioSwitchDigInBitMask UINT32               7570 26
E m_ulGearOffsetValue1DigInBitMask UINT32               7572 26
E m_ulGearOffsetValue2DigInBitMask UINT32               7574 26
E m_ulCtrlLpParamSwitchDigInBitMask UINT32               7576 26
E m_ulOpModeSwitchDigInBitMask UINT32               7578 26
E m_ulProportionalCtrlDigInBitMask UINT32               7580 26
E m_ulDisStopCommandDigInBitMask UINT32               7582 26
E m_ulDisStopEnableDigInBitMask UINT32               7584 26
E m_ulActivateOpModeDigInBitMask UINT32               7586 26
E m_ulDataSetDataData4DigInBitMask UINT32               7588 26
E m_ulDataSetDataData5DigInBitMask UINT32               7590 26
E m_ulDataSetDataData6DigInBitMask UINT32               7592 26
E m_ulInvIom1Ana11DigInBitMask UINT32               7594 26
E m_ulInvIom1Ana12DigInBitMask UINT32               7596 26
E m_ulBrakeOpenInBitMask       UINT32               7598 26
E m_ulJogPosDirEnableDigInBitMask UINT32               7600 26
E m_ulJogNegDirEnableDigInBitMask UINT32               7602 26
E m_eEnableModeStartUp         ???                  7604 26
E m_eEnableModeNormalProc      ???                  7605 26
D 27  CMdbRtu
E __b_CMdb.__b_CBasComponent.__vptr unknown*             7500 27
E __b_CMdb.m_uiActiveChannel   ???                  7502 27
E __b_CMdb.m_uiRcvState        UINT16               7003 27
E __b_CMdb.m_uiRcvBytes        UINT16               7004 27
E __b_CMdb.m_uiRcvBuf          UINT16[]             7505 27
E __b_CMdb.m_uiRcvCRC          UINT16               7261 27
E __b_CMdb.m_uiRcvFC           UINT16               7262 27
E __b_CMdb.m_uiRcvTemp         UINT16               7263 27
E __b_CMdb.m_uiRcvErr          UINT16               7264 27
E __b_CMdb.m_uiRcvAdr          UINT16               7265 27
E __b_CMdb.m_uiExcErr          UINT16               7266 27
E __b_CMdb.m_uiListenonly      UINT16               7267 27
E __b_CMdb.m_uiFastMonitorModbusAdr UINT16               7268 27
E __b_CMdb.m_uiEhmRequestForConfig UINT16               7269 27
E __b_CMdb.m_ulfbuscnt         UINT32               7770 27
E __b_CMdb.m_uicrcerrcnt       UINT16               7272 27
E __b_CMdb.m_uiexepterrcnt     UINT16               7273 27
E __b_CMdb.m_uinakerrcnt       UINT16               7274 27
E __b_CMdb.m_uibsyerrcnt       UINT16               7275 27
E __b_CMdb.m_uiovrerrcnt       UINT16               7276 27
E __b_CMdb.m_uierrorcnt        UINT16               7277 27
E __b_CMdb.m_uidiagerrreg      UINT16               7278 27
E __b_CMdb.m_uiLoginState      UINT16               7279 27
E __b_CMdb.m_uiActAdr          UINT16               7280 27
E __b_CMdb.m_umas.uiResID      UINT16               7282 27
E __b_CMdb.m_umas.uiReqCode    UINT16               7283 27
E __b_CMdb.m_umas.uiIdendity   UINT16               7284 27
E __b_CMdb.m_umas.uiTypeInfo   UINT16               7285 27
E __b_CMdb.m_umas.uiVersionInfo UINT16               7286 27
E __b_CMdb.m_umas.uiMaxSize    UINT16               7287 27
E __b_CMdb.m_umas.uiRetLen     UINT16               7288 27
E __b_CMdb.m_umas.uiHandle     UINT16               7289 27
E __b_CMdb.m_umas.uiPacketNo   UINT16               7290 27
E __b_CMdb.m_umas.uiInternalRptCnt UINT16               7291 27
E __b_CMdb.m_umas.ulSizeOfApx  UINT32               7792 27
E __b_CMdb.m_umas.pData        UINT16*              7794 27
E __b_CMdb.m_umas.uiState      UINT16               7296 27
E __b_CMdb.m_umas.btSegment    UINT16               7297 27
E __b_CMdb.m_monacess.uiState  UINT16               7298 27
E __b_CMdb.m_monacess.uiActCRC UINT16               7299 27
E __b_CMdb.m_monacess.uiNumAct UINT16               7300 27
E __b_CMdb.m_monacess.uiNumMax UINT16               7301 27
E __b_CMdb.m_monacess.uiZbuf   UINT16               7302 27
E __b_CMdb.m_paracess.uiState  UINT16               7304 27
E __b_CMdb.m_paracess.uiAccessChannel ???                  7805 27
E __b_CMdb.m_paracess.ulStartTime UINT32               7806 27
E __b_CMdb.m_paracess.uiaReceiveBuffer UINT16[]             7808 27
E __b_CMdb.m_ioc.uiLastMasterSeq UINT16               7380 27
E __b_CMdb.m_ioc.uiSlaveAck    UINT16               7381 27
E __b_CMdb.m_ioc.uiDuplicateSeg UINT16               7382 27
E __b_CMdb.m_ioc.uiInvalidAck  UINT16               7383 27
E __b_CMdb.m_ioc.bTrfInProg    UINT16               7384 27
E __b_CMdb.m_ioc.ucMsgToSendSize UINT8                7385 27
E __b_CMdb.m_ioc.ucMsgToListenSize UINT8                7386 27
E __b_CMdb.m_ioc.pucMsgToSend  UINT8*               7888 27
E __b_CMdb.m_ioc.pucMsgToListen UINT8*               7890 27
E __b_CMdb.m_ioc.piSendNode    unknown*             7892 27
E __b_CMdb.m_ioc.piListenNode  unknown*             7894 27
E __b_CMdb.m_uiCRC             UINT16               7396 27
E __b_CMdb.m_uiNoCRC           UINT16[]             7897 27
E __b_CMdb.m_uiCRCStart        UINT16               7399 27
E __b_CMdb.m_bWordOrderLH      UINT16               7400 27
E __b_CMdb.m_bSendPartialFrames UINT16               7401 27
E m_pCom                       unknown*             7902 27
E m_uiDataformat               UINT16               7404 27
E m_uiStopbits                 UINT16               7405 27
E m_uiParity                   UINT16               7406 27
E m_uiTimeOutChar              UINT16               7407 27
E m_uiTimeOutFrame             UINT16               7408 27
D 28  CMdbTcpIoc
E __b_CMdb.__b_CBasComponent.__vptr unknown*             7500 28
E __b_CMdb.m_uiActiveChannel   ???                  7502 28
E __b_CMdb.m_uiRcvState        UINT16               7003 28
E __b_CMdb.m_uiRcvBytes        UINT16               7004 28
E __b_CMdb.m_uiRcvBuf          UINT16[]             7505 28
E __b_CMdb.m_uiRcvCRC          UINT16               7261 28
E __b_CMdb.m_uiRcvFC           UINT16               7262 28
E __b_CMdb.m_uiRcvTemp         UINT16               7263 28
E __b_CMdb.m_uiRcvErr          UINT16               7264 28
E __b_CMdb.m_uiRcvAdr          UINT16               7265 28
E __b_CMdb.m_uiExcErr          UINT16               7266 28
E __b_CMdb.m_uiListenonly      UINT16               7267 28
E __b_CMdb.m_uiFastMonitorModbusAdr UINT16               7268 28
E __b_CMdb.m_uiEhmRequestForConfig UINT16               7269 28
E __b_CMdb.m_ulfbuscnt         UINT32               7770 28
E __b_CMdb.m_uicrcerrcnt       UINT16               7272 28
E __b_CMdb.m_uiexepterrcnt     UINT16               7273 28
E __b_CMdb.m_uinakerrcnt       UINT16               7274 28
E __b_CMdb.m_uibsyerrcnt       UINT16               7275 28
E __b_CMdb.m_uiovrerrcnt       UINT16               7276 28
E __b_CMdb.m_uierrorcnt        UINT16               7277 28
E __b_CMdb.m_uidiagerrreg      UINT16               7278 28
E __b_CMdb.m_uiLoginState      UINT16               7279 28
E __b_CMdb.m_uiActAdr          UINT16               7280 28
E __b_CMdb.m_umas.uiResID      UINT16               7282 28
E __b_CMdb.m_umas.uiReqCode    UINT16               7283 28
E __b_CMdb.m_umas.uiIdendity   UINT16               7284 28
E __b_CMdb.m_umas.uiTypeInfo   UINT16               7285 28
E __b_CMdb.m_umas.uiVersionInfo UINT16               7286 28
E __b_CMdb.m_umas.uiMaxSize    UINT16               7287 28
E __b_CMdb.m_umas.uiRetLen     UINT16               7288 28
E __b_CMdb.m_umas.uiHandle     UINT16               7289 28
E __b_CMdb.m_umas.uiPacketNo   UINT16               7290 28
E __b_CMdb.m_umas.uiInternalRptCnt UINT16               7291 28
E __b_CMdb.m_umas.ulSizeOfApx  UINT32               7792 28
E __b_CMdb.m_umas.pData        UINT16*              7794 28
E __b_CMdb.m_umas.uiState      UINT16               7296 28
E __b_CMdb.m_umas.btSegment    UINT16               7297 28
E __b_CMdb.m_monacess.uiState  UINT16               7298 28
E __b_CMdb.m_monacess.uiActCRC UINT16               7299 28
E __b_CMdb.m_monacess.uiNumAct UINT16               7300 28
E __b_CMdb.m_monacess.uiNumMax UINT16               7301 28
E __b_CMdb.m_monacess.uiZbuf   UINT16               7302 28
E __b_CMdb.m_paracess.uiState  UINT16               7304 28
E __b_CMdb.m_paracess.uiAccessChannel ???                  7805 28
E __b_CMdb.m_paracess.ulStartTime UINT32               7806 28
E __b_CMdb.m_paracess.uiaReceiveBuffer UINT16[]             7808 28
E __b_CMdb.m_ioc.uiLastMasterSeq UINT16               7380 28
E __b_CMdb.m_ioc.uiSlaveAck    UINT16               7381 28
E __b_CMdb.m_ioc.uiDuplicateSeg UINT16               7382 28
E __b_CMdb.m_ioc.uiInvalidAck  UINT16               7383 28
E __b_CMdb.m_ioc.bTrfInProg    UINT16               7384 28
E __b_CMdb.m_ioc.ucMsgToSendSize UINT8                7385 28
E __b_CMdb.m_ioc.ucMsgToListenSize UINT8                7386 28
E __b_CMdb.m_ioc.pucMsgToSend  UINT8*               7888 28
E __b_CMdb.m_ioc.pucMsgToListen UINT8*               7890 28
E __b_CMdb.m_ioc.piSendNode    unknown*             7892 28
E __b_CMdb.m_ioc.piListenNode  unknown*             7894 28
E __b_CMdb.m_uiCRC             UINT16               7396 28
E __b_CMdb.m_uiNoCRC           UINT16[]             7897 28
E __b_CMdb.m_uiCRCStart        UINT16               7399 28
E __b_CMdb.m_bWordOrderLH      UINT16               7400 28
E __b_CMdb.m_bSendPartialFrames UINT16               7401 28
E m_uiTcpState                 UINT16               7402 28
E m_uiTcpRequestLength         UINT16               7403 28
E m_uiTcpResponseLength        UINT16               7404 28
E m_bTcpWordOrderLH            UINT16               7405 28
E m_uiTcpChannel               ???                  7906 28
E m_uiTcpBufSize               UINT16               7407 28
E m_uiTcpBufPtr                UINT16*              7908 28
E m_uiSavedUnitId              UINT16               7410 28
D 29 CAxf CAxf
E __b_CBasComponent.__vptr     unknown*             7500 29
E m_lMotionSpeedLimProf        INT32                7502 29
E m_lMotionSpeedLimProfWithReducedMaxVal INT32                7504 29
E m_theSpg                     unknown*             7506 29
E m_sNextOpModePrepVal.ulReqNextAxMode UINT32               7508 29
E m_sNextOpModePrepVal.ulIxSix UINT32               7510 29
E m_sNextOpModePrepVal.ulIntStateWordChkBitMask UINT32               7512 29
E m_sNextOpModePrepVal.lTargetValue INT32                7514 29
E m_sNextOpModePrepVal.bIsAxfInternalCall UINT16               7016 29
E m_sNextOpModePrepVal.uiSubMode UINT16               7017 29
E m_bStartup                   UINT16               7018 29
E m_opmDummy                   unknown*             7520 29
E m_opmManPos                  unknown*             7522 29
E m_opmProfileTorque           unknown*             7524 29
E m_opmProfileVelocity         unknown*             7526 29
E m_opmManTune                 unknown*             7528 29
E m_opmGear                    unknown*             7530 29
E m_opmHome                    unknown*             7532 29
E m_opmPosPrf                  unknown*             7534 29
E m_opmActInt                  unknown*             7536 29
E m_opmActUser                 unknown*             7538 29
E m_opmOldSave                 unknown*             7540 29
E m_theJerkFilter              unknown*             7542 29
E m_theOffsPos                 unknown*             7544 29
E m_theSpeSpeed                unknown*             7546 29
E m_theSpeTorque               unknown*             7548 29
E m_theDS402OpModes            unknown*[]           7550 29
E m_pcAxfDistStop              unknown*             7578 29
E m_pcAxfBackLashComp          unknown*             7580 29
E m_uiLockCounter              UINT16               7082 29
E m_uiAxModeUser               UINT16               7083 29
E m_uiUserActionWord           UINT16               7084 29
E m_uiBergerAxisMode           UINT16               7085 29
E m_ulBergerStatusWordBits     UINT32               7586 29
E m_lPactUsrCycCalc            INT32                7588 29
E m_lPactUsrNoModuloCorrCycCalc INT32                7590 29
E m_lPactIntInSpgInternUnits   INT32                7592 29
E m_lPactIntBasedOnOneMotRevCycCalc INT32                7594 29
E m_sCyclicCalcEnc1PactUsr     ???                  7596 29
E m_sCyclicCalcEnc2PactUsr     ???                  7597 29
E m_lEnc1PactUsr               INT32                7598 29
E m_lEnc2PactUsr               INT32                7600 29
E m_bEnc1PactUsrCalculated     UINT16               7102 29
E m_bEnc2PactUsrCalculated     UINT16               7103 29
E m_psSpgDss                   unknown*             7604 29
E m_uiAxInternMode             UINT16               7106 29
E m_sGlbFlags.bitUseProfileForHalt UINT16               7107 29
E m_bCheckOnPosPref            UINT16               7108 29
E m_uiGenFeedForwardType       UINT16               7109 29
E m_bModeWithJerkFilter        UINT16               7110 29
E m_eProfilGenType             ???                  7611 29
E m_bModeWithPosWinCheck       UINT16               7112 29
E m_bDoMoveModeShortesWayRequestRmac UINT16               7113 29
E m_bInternalFaultResetReq     UINT16               7114 29
E m_bSupressSWLimError         UINT16               7115 29
E m_bPosNumDenumChanged        UINT16               7116 29
E m_sIntState                  ???                  7618 29
E m_sTask250usValSaved.uiLatchedErrClassesWithOutWarnings UINT16               7120 29
E m_sTask250usValSaved.lPosSwLimOverrunCheck INT32                7622 29
E m_sTask250usValSaved.uiExtSigDirectSr UINT16               7124 29
E m_sTask250usValSaved.uiExtSigDirectAndEnaSr UINT16               7125 29
E m_sTask250usValSaved.sIntState ???                  7626 29
E m_sTask250usValSaved.ulBergerStatusWordBits UINT32               7628 29
E m_sTask250usValSaved.lSpdFeed INT32                7630 29
E m_sTask250usValSaved.uiUserActionWord UINT16               7132 29
E m_sTask250usValSaved.lPosAct INT32                7634 29
E m_sTask250usValSaved.lPosRef INT32                7636 29
E m_uMainloopValSaved          ???                  7638 29
E m_uiTask1msValSaved          UINT16               7140 29
E m_sSwLimitPos.lSwLimP_Intern INT32                7642 29
E m_sSwLimitPos.lSwLimN_Intern INT32                7644 29
E m_signal.uiMarkerBits        UINT16               7146 29
E m_signal.uiEnableBits        UINT16               7147 29
E m_ExtSigChgLatchVal.sLimP.uiCnt UINT16               7148 29
E m_ExtSigChgLatchVal.sLimP.lPactPosVal INT32                7650 29
E m_ExtSigChgLatchVal.sLimP.lPrefPosVal INT32                7652 29
E m_ExtSigChgLatchVal.sLimN.uiCnt UINT16               7154 29
E m_ExtSigChgLatchVal.sLimN.lPactPosVal INT32                7656 29
E m_ExtSigChgLatchVal.sLimN.lPrefPosVal INT32                7658 29
E m_ExtSigChgLatchVal.sRef.uiCnt UINT16               7160 29
E m_ExtSigChgLatchVal.sRef.lPactPosVal INT32                7662 29
E m_ExtSigChgLatchVal.sRef.lPrefPosVal INT32                7664 29
E m_sExtSigSupVis.uiActual     UINT16               7166 29
E m_sExtSigSupVis.uiEnableUser UINT16               7167 29
E m_sExtSigSupVis.uiDisableForExtHoming UINT16               7168 29
E m_sExtSigSupVis.uiEnableIntern UINT16               7169 29
E m_sExtSigSupVis.uiInvert     UINT16               7170 29
E m_sExtSigSupVis.uiActualAndInvert UINT16               7171 29
E m_sExtSigSupVis.uiActualFiltered UINT16               7172 29
E m_sExtSigSupVis.uiDirectSr   UINT16               7173 29
E m_sExtSigSupVis.uiDirectAndEnaSr UINT16               7174 29
E m_sExtSigSupVis.uiClearSr    UINT16               7175 29
E m_sExtSigSupVis.uiDrvErrReactEnaMask UINT16               7176 29
E m_sExtSigSupVis.uiDrvErrReactSigSr UINT16               7177 29
E m_sExtSigSupVis.uiDrvErrReactSigActual UINT16               7178 29
E m_sExtSigSupVis.uiEnableMaskFromFlexIoFunc UINT16               7179 29
E m_sExtSigSupVis.uiRetrigger  UINT16               7180 29
E m_sExtSigSupVis.bDisLimSwitchHandling UINT16               7181 29
E m_sExtSigSupVis.ulHwDssBitMaskForRef UINT32               7682 29
E m_sExtSigSupVis.ulHwDssBitMaskForLimN UINT32               7684 29
E m_sExtSigSupVis.ulHwDssBitMaskForLimP UINT32               7686 29
E m_uiBreakMotionRequestMode   UINT16               7188 29
E m_uiBreakMotionActiveMode    UINT16               7189 29
E m_bReleaseBreakMotion        UINT16               7190 29
E m_uiReqPosAdjustState        UINT16               7191 29
E m_uiDisMotionDirByLimSwitch  UINT16               7192 29
E m_uiDisMotionDirBySwLimSwitch UINT16               7193 29
E m_bStateOpEnaActiveMinOneTime UINT16               7194 29
E m_bTempLPosRef               UINT16               7195 29
E m_lDifPosAct_Ref             INT32                7696 29
E m_iqMotionSpeedLimProf       INT32                7698 29
E m_iqMotionSpeedLimProfWithReducedMaxVal INT32                7700 29
E m_iqAna2LimSpeedValMin       INT32                7702 29
E m_iqCurrLimVar2              INT32                7704 29
E m_uiPwinToutChkActCnt        UINT16               7206 29
E m_uiPwinToutChkMaxCnt        UINT16               7207 29
E m_uiSpeedWinTimeDownCnt      UINT16               7208 29
E m_iqMotionSpeedWinIntern     INT32                7710 29
E m_bSpeedTargetReached        UINT16               7212 29
E m_iqSpeedToBeContinued       INT32                7714 29
E m_uiTorqWinTimeDownCnt       UINT16               7216 29
E m_iqMotionTorqWinIntern      INT32                7718 29
E m_bTorqueTargetReached       UINT16               7220 29
E m_i64PosRefNew.L             UINT32               7722 29
E m_i64PosRefNew.H             INT32                7724 29
E m_i64PosRefGrid1msOld.L      UINT32               7726 29
E m_i64PosRefGrid1msOld.H      INT32                7728 29
E m_i64DiffPosRefGrid1ms_0_25.L UINT32               7730 29
E m_i64DiffPosRefGrid1ms_0_25.H INT32                7732 29
E m_i64DiffPosRefGrid1ms_0_5.L UINT32               7734 29
E m_i64DiffPosRefGrid1ms_0_5.H INT32                7736 29
E m_iqVelRefGrid1msBase250usOld INT32                7738 29
E m_iqVelRefGrid1msBase250usNew INT32                7740 29
E m_iqVelRefGrid1msBase250usDiff INT32                7742 29
E m_iqAccRefGrid1msBase250usOld INT32                7744 29
E m_iqAccRefGrid1msBase250usNew INT32                7746 29
E m_iqAccRefGrid1msBase250usDiff INT32                7748 29
E m_ul250usCounter             UINT32               7750 29
E m_ulFastIrqProcessedCounter  UINT32               7752 29
E m_ulCycFastXEnd0CntStart     UINT32               7754 29
E m_ulCycFastXEnd0CntMeasured  UINT32               7756 29
E m_uiMotionBlendType          UINT16               7258 29
E m_bBlendedModeIsActive       UINT16               7259 29
E m_bBlendedWaitProfChgActive  UINT16               7260 29
E m_bBlendedMovChkDirNeg       UINT16               7261 29
E m_lBlendedAbsPosUser         INT32                7762 29
E m_lBlendedProfChgPosSpgIntern INT32                7764 29
E m_lBlendedUsrDefPosSpgIntern INT32                7766 29
E m_lBlendedRangeStartPosSpgIntern INT32                7768 29
E m_lPosBlendCondFoundSpgIntern INT32                7770 29
E m_uiDiagActSpgStateChk       UINT16               7272 29
E m_uiDiagTimeSpgChgAcc        UINT16               7273 29
E m_uiDiagTimeSpgChgCnst       UINT16               7274 29
E m_uiDiagTimeSpgChgDec        UINT16               7275 29
E m_uiDiagTimeSpgChgStand      UINT16               7276 29
E m_lDiagPosSpgChgAcc          INT32                7778 29
E m_lDiagPosSpgChgCnst         INT32                7780 29
E m_lDiagPosSpgChgDec          INT32                7782 29
E m_lDiagPosSpgChgStand        INT32                7784 29
E m_bCurrLimInputActive        UINT16               7286 29
E m_uiAxisType                 UINT16               7287 29
E m_lModuloRngMin              INT32                7788 29
E m_lModuloRngMax              INT32                7790 29
E m_lModuloRng                 INT32                7792 29
E m_lModuloMp                  INT32                7794 29
E m_lModuloKovrMotor           INT32                7796 29
E m_lModuloKovrMach            INT32                7798 29
E m_uiModuloPosSetReq          UINT16               7300 29
E m_lModuloRngOld              INT32                7802 29
E m_uiAxisTypeOld              UINT16               7304 29
E m_lPosNumOld                 INT32                7806 29
E m_lPosDenumOld               INT32                7808 29
E m_ulMcHaltRampUser           UINT32               7810 29
E m_lMcHaltRampIntern          UINT32               7812 29
E m_ulMcStopRampUser           UINT32               7814 29
E m_lMcStopRampIntern          UINT32               7816 29
E m_sPosData.lContIntern       INT32                7818 29
E m_sPosData.lTargetIntern     INT32                7820 29
E m_sPosData.lTargUsrPrep      INT32                7822 29
E m_sPosData.lTargUsr          INT32                7824 29
E m_sPosData.lUsrCalcIntRemainder INT32                7826 29
E m_sPosData.bTargUsrDefined   UINT16               7328 29
E m_sPosData.bUsrSetposDone    UINT16               7329 29
E m_sPosData.bUsrSetnormDone   UINT16               7330 29
E m_sVelData.lSystemVelAbsLimitIntern INT32                7832 29
E m_sVelData.lVelStartIntern   INT32                7834 29
E m_sVelData.lVelTargInitIntern INT32                7836 29
E m_sVelData.lVelRampTableGridIntern INT32                7838 29
E m_sRampData.lUpRampAccIntern INT32                7840 29
E m_sRampData.lDownRampAccIntern INT32                7842 29
E m_sRampData.lQuStpAccIntern  INT32                7844 29
E m_sRampData.sUpRamp.uiActiveDescrIndex UINT16               7346 29
E m_sRampData.sUpRamp.uiPrepDescrIndex UINT16               7347 29
E m_sRampData.sUpRamp.asDescription ???                  7848 29
D 30 Profile CSpg
E __b_CBasComponent.__vptr     unknown*             7500 30
E m_sSpgDss.lPosTarg           INT32                7502 30
E m_sSpgDss.lVelTarg           INT32                7504 30
E m_sSpgDss.uiMode             UINT16               7006 30
E m_sSpgDss.uiBreakRequest     UINT16               7007 30
E m_sSpgDss.bDisableRequest    UINT16               7008 30
E m_sSpgDss.bChgRampTabRequest UINT16               7009 30
E m_sSpgDss.uiMoveState        UINT16               7010 30
E m_sSpgDss.uiGlobalState      UINT16               7011 30
E m_sSpgDss.lVelMax            INT32                7512 30
E m_sSpgDss.lVelActAbs         INT32                7514 30
E m_sSpgDss.lVelActInclDirSign INT32                7516 30
E m_sSpgDss.lPosAct            INT32                7518 30
E m_sSpgDss.uiPosActRem        UINT16               7020 30
E m_bDoMoveModeShortesWay      UINT16               7022 30
E m_bReqMoveDirIsNegAtStandstill UINT16               7023 30
E m_l_v_ist_abs                INT32                7524 30
E m_lAccValAct                 INT32                7526 30
E m_ul_bremsweg                UINT32               7528 30
E m_ul_bremsweg_nk             UINT32               7530 30
E m_uiInternStateAct           UINT16               7032 30
E m_uiInternStateNext          UINT16               7033 30
E m_lChgVelModCalcDownRamp     INT32                7534 30
E m_lChgVelModCalcUpRamp       INT32                7536 30
E m_lVelDownRampFirstRow       INT32                7538 30
E m_lVelUpRampFirstRow         INT32                7540 30
E m_psUpRampTabRowZero         unknown*             7542 30
E m_psDownRampNormalTabRowZero unknown*             7544 30
E m_psUpRampTabRowAct          unknown*             7546 30
E m_psDownRampTabRowAct        unknown*             7548 30
E m_lVelDiff                   INT32                7550 30
E m_lAccValDownRamp            INT32                7552 30
E m_l_v_soll_abs               INT32                7554 30
E m_s_a_tab_linear             ???                  7556 30
D 36  CSlowScope
E __b_CBasComponent.__vptr     unknown*             7500 36
E m_Source                     unknown*[]           7502 36
E m_TriggerSource              unknown*             7510 36
E m_ulTimer                    UINT32               7512 36
E m_ulSamplingTime             UINT32               7514 36
E m_aulChannelData             UINT32[]             7516 36
E m_ulTriggerData              UINT32               7524 36
E m_ScopeStatus                ???                  7526 36
E m_bCriticalSection           UINT16               7027 36
E m_bRecorded                  UINT16               7028 36
D 37  CCap
E __b_CBasComponent.__vptr     unknown*             7500 37
E m_uiCapEventOnBoard          UINT16               7002 37
E m_uiCapEventASIC             UINT16               7003 37
E m_uiLastSchedCnt             UINT16               7004 37
E m_uiActSmpCapCounterAt62     UINT16               7005 37
E m_uiActSmpEPWM4CounterAt62   UINT16               7006 37
E m_uiActSmpCapCounterAt250    UINT16               7007 37
E m_uiActSmpEPWM4CounterAt250  UINT16               7008 37
E m_uiLastpSmpCapCounter       UINT16               7009 37
E m_uiLastSmpEPWM4Counter      UINT16               7010 37
E m_uiActSchedCntAt250         UINT16               7011 37
E m_uiProbesStatus             UINT16               7012 37
E m_bSyncIsActive              UINT16               7013 37
E m_uiLastProbe1ActiveState    UINT16               7014 37
E m_uiLastProbe2ActiveState    UINT16               7015 37
E eCaptureControlWord          ???                  7516 37
E eCaptureControlWordOld       ???                  7517 37
E m_iqPosLastEnc1              INT32                7518 37
E m_iqPosLastEnc2              INT32                7520 37
E m_sProbeConfig               ???                  7522 37
E m_CapUnit                    unknown*             7530 37
E m_pCapAsic                   unknown*             7532 37
D 38  CMotConfig
E __b_CBasComponent.__vptr     unknown*             7500 38
E theDataUtil                  unknown*             7502 38
E theEncInterface              unknown*             7504 38
E m_pauiSendBuffer             UINT16*              7506 38
E m_pauiRecBuffer              UINT16*              7508 38
E m_pauiAltTelegramBuffer      UINT16*              7510 38
E m_ulMotorfilenameOld         UINT32               7512 38
E m_ulMotorfilenameNew         UINT32               7514 38
E m_ulMotorfilenameConfig      UINT32               7516 38
E m_Flags.bitDiff              UINT16               7018 38
D 39  CEncMgr
E __b_CBasComponent.__vptr     unknown*             7500 39
E SpeedObserver.m_iqSpeedActDachCtrl INT32                7502 39
E SpeedObserver.m_iqSpeedActDach INT32                7504 39
E SpeedObserver.m_iqIqSpdObsFeed INT32                7506 39
E SpeedObserver.m_iqSpeedDif   INT32                7508 39
E SpeedObserver.m_iqSpeedActDachOld INT32                7510 39
E SpeedObserver.m_iqTorqueStoerDachOld INT32                7512 39
E SpeedObserver.m_iqTorqueStoerDach INT32                7514 39
E SpeedObserver.m_iqPosActDachOld INT32                7516 39
E SpeedObserver.m_iqPosActDach INT32                7518 39
E SpeedObserver.m_iqObserverGain1 INT32                7520 39
E SpeedObserver.m_iqObserverGain2 INT32                7522 39
E SpeedObserver.m_iqObserverGain3 INT32                7524 39
E SpeedObserver.m_iqObserverIqAct INT32                7526 39
E SpeedObserver.m_uiI0Observer UINT16               7028 39
E SpeedObserver.m_uiM0Observer UINT16               7029 39
E SpeedObserver.m_iqScaling3   INT32                7530 39
E SpeedObserver.m_iqScaling4   INT32                7532 39
E SpeedObserver.m_iqScaling6   INT32                7534 39
E SpeedObserver.m_iqScaling7   INT32                7536 39
E SpeedObserver.m_iqScaling8   INT32                7538 39
E SpeedObserver.m_iqScaling10  INT32                7540 39
E SpeedObserver.m_iqPosDachRemainder INT32                7542 39
E SpeedObserver.m_iqSpeedDachRemainder INT32                7544 39
E SpeedObserver.m_iqTorqueDachRemainder INT32                7546 39
E SpeedObserver.m_iqCalcTime   INT32                7548 39
E SpeedObserver.m_bSpdObsDeactivated UINT16               7050 39
E SpeedObserver.m_iqpSpeedActCtrlSave INT32*               7552 39
E SpeedObserver.m_iqpSpeedActCtrlNoInvDirSave INT32*               7554 39
E SpeedObserver.__vptr         unknown*             7556 39
E m_ptheHipMotor               unknown*             7558 39
E m_ptheHipMachine             unknown*             7560 39
E m_iqDummyVarZero             INT32                7562 39
E m_DssEnc.iqEps               INT32                7564 39
E m_DssEnc.iqEps32             INT32                7566 39
E m_DssEnc.iqEpsE_b            INT32                7568 39
E m_DssEnc.iqEpsE_b0           INT32                7570 39
E m_DssEnc.iqAlphaEnc          INT32                7572 39
E m_DssEnc.iqAlphaMean         INT32                7574 39
E m_DssEnc.iThetaEnc           INT16                7076 39
E m_DssEnc.bUseWakes           UINT16               7077 39
E m_DssEnc.iqSpeedEncRawMotor  INT32                7578 39
E m_DssEnc.iqSpeedEncRawMachine INT32                7580 39
E m_DssEnc.m_iqSpeedActCtrlMotor INT32                7582 39
E m_DssEnc.iqpSpeedActCtrlLoop INT32*               7584 39
E m_DssEnc.iqpSpeedActCtrlLoopNoInvDir INT32*               7586 39
E m_DssEnc.lpSpeedActCtrlLoopTrace INT32*               7588 39
E m_DssEnc.iqpSpeedActCtrlEnc1 INT32*               7590 39
E m_DssEnc.iqpSpeedActCtrlEnc1NoInvDir INT32*               7592 39
E m_DssEnc.lpSpeedActCtrlEnc1Trace INT32*               7594 39
E m_DssEnc.iqpSpeedActCtrlEnc2 INT32*               7596 39
E m_DssEnc.iqpSpeedActCtrlEnc2NoInvDir INT32*               7598 39
E m_DssEnc.lpSpeedActCtrlEnc2Trace INT32*               7600 39
E m_DssEnc.iqpSpeedEncRawEnc1  INT32*               7602 39
E m_DssEnc.iqpSpeedEncRawEnc2  INT32*               7604 39
E m_DssEnc.lSpeedActMotorTrace INT32                7606 39
E m_DssEnc.lSpeedActMachineTrace INT32                7608 39
E m_DssEnc.iqpPosActCtrlLoop   INT32*               7610 39
E m_DssEnc.iqpPosActCtrlLoopNoInvDir INT32*               7612 39
E m_DssEnc.iqpPosActCtrlEnc1   INT32*               7614 39
E m_DssEnc.iqpPosActCtrlEnc1NoInvDir INT32*               7616 39
E m_DssEnc.iqpPosActCtrlEnc2   INT32*               7618 39
E m_DssEnc.iqpPosActCtrlEnc2NoInvDir INT32*               7620 39
E m_DssEnc.m_ulPactAbsRangeEnc1 UINT32               7622 39
E m_DssEnc.m_ulPactAbsRangeEnc2 UINT32               7624 39
E m_DssEnc.iqpPosActHighResEnc1 INT32*               7626 39
E m_DssEnc.iqpPosActHighResEnc2 INT32*               7628 39
E m_DssEnc.iqPosActHighResMotor INT32                7630 39
E m_DssEnc.iqPosActHighResMachine INT32                7632 39
E m_DssEnc.iqPosEncRawMotor    INT32                7634 39
E m_DssEnc.iqPosEncRawMachine  INT32                7636 39
E m_DssEnc.m_iqPosActCtrlMotor250 INT32                7638 39
E m_DssEnc.m_iqPosActCtrlMachine250 INT32                7640 39
E m_DssEnc.iqZeroPosMachine    INT32                7642 39
E m_DssEnc.bZeroCapStatus      UINT16               7144 39
E m_DssEnc.uiZeroPulse         UINT16               7145 39
E m_DssEnc.lPhysicalZeroMaxTravel INT32                7646 39
E m_DssEnc.uCommOffIdenWS      ???                  7648 39
E m_DssEnc.m_lEncMachineDenom  INT32                7650 39
E m_DssEnc.m_lEncMachineNum    INT32                7652 39
E m_DssEnc.m_uiInvDirEncMachine UINT16               7154 39
E m_DssEnc.m_bMatchedPos       UINT16               7155 39
E m_DssEnc.m_lEncMachRemain    INT32                7656 39
E m_DssEnc.m_uiTimeSpeedSmooth UINT16               7158 39
E m_DssEnc.m_uiEncCtrl         UINT16               7159 39
E m_DssEnc.m_iqEncMachPdif     INT32                7660 39
E m_DssEnc.m_uiEnc1TypeOfUse   ???                  7662 39
E m_DssEnc.m_uiEnc2TypeOfUse   ???                  7663 39
E m_DssEnc.m_uiLocOfPosCtrl    ???                  7664 39
E m_DssEnc.uiAbsPosEncSource   UINT16               7165 39
E m_DssEnc.bMachineEncIsMultiturn UINT16               7166 39
E m_DssEnc.bSetAbsPosEn2NotSuport UINT16               7167 39
E m_DssEnc.m_uiResMultiUsed    UINT16               7168 39
E pEncMotor                    unknown*             7670 39
E pEncMachine                  unknown*             7672 39
E m_uiEncMotorFeature.FeatPosition UINT16               7174 39
E m_uiEncMachineFeature.FeatPosition UINT16               7175 39
E TaunactMotor.m_iqOutput      INT32                7676 39
E TaunactMotor.m_iqPrmA        INT32                7678 39
E TaunactMotor.m_iqPrmB        INT32                7680 39
E TaunactMachine.m_iqOutput    INT32                7682 39
E TaunactMachine.m_iqPrmA      INT32                7684 39
E TaunactMachine.m_iqPrmB      INT32                7686 39
E SpeedActTraceMotor.m_iqOutput INT32                7688 39
E SpeedActTraceMotor.m_iqPrmA  INT32                7690 39
E SpeedActTraceMotor.m_iqPrmB  INT32                7692 39
E SpeedActTraceMachine.m_iqOutput INT32                7694 39
E SpeedActTraceMachine.m_iqPrmA INT32                7696 39
E SpeedActTraceMachine.m_iqPrmB INT32                7698 39
E m_bcCommutOffIdentChannel    ???                  7700 39
E m_iqPosActCtrlMotor          INT32                7702 39
E m_iqSpeedActCtrlMachine      INT32                7704 39
E m_iqPosEncRawMachine         INT32                7706 39
E m_iqSpeedEncRawMotorOld62    INT32                7708 39
E m_iqSpeedEncRawMotorAvr      INT32                7710 39
E m_iqSpeedEncRawMotorAvr2     INT32                7712 39
E m_iqSpeedEncRawMotorAvr2Old  INT32                7714 39
E m_bUseWakesSave              UINT16               7216 39
E m_iStepperSpeed              INT16                7217 39
E m_uiStepperMode              UINT16               7218 39
E m_lPosActCtrlMotorSPGold     INT32                7720 39
E m_lPosActCtrlMachineSPGold   INT32                7722 39
D 40  CEncOnBoardSinCosHip
E __b_CEncSinCosHipBas.__b_CEncBas.m_CallBitMask.Call62 UINT16               7000 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_uiEncKind ???                  7501 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_uiEncLocation ???                  7502 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_uiEncTypeOfUse ???                  7503 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_lEncRawInc INT32                7504 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_ulSetPosEnc2Usr UINT32               7506 40
E __b_CEncSinCosHipBas.__b_CEncBas.m_lDiffPactToSetEncPosValSave2 INT32                7508 40
E __b_CEncSinCosHipBas.__b_CEncBas.__vptr unknown*             7510 40
E __b_CEncSinCosHipBas.m_pHiperface unknown*             7512 40
E __b_CEncSinCosHipBas.m_auiHipRecData UINT16[]             7514 40
E __b_CEncSinCosHipBas.m_auiHipSendData UINT16[]             7524 40
E __b_CEncSinCosHipBas.m_uiHipAck UINT16               7034 40
E __b_CEncSinCosHipBas.m_uiHipDataLen UINT16               7035 40
E __b_CEncSinCosHipBas.m_pDriveCall ???                  7536 40
E __b_CEncSinCosHipBas.m_ulDigIncrPerRev UINT32               7538 40
E __b_CEncSinCosHipBas.m_uiSHLInc UINT16               7040 40
E __b_CEncSinCosHipBas.m_uiSHRHiRes UINT16               7041 40
E __b_CEncSinCosHipBas.m_ulHiResPer UINT32               7542 40
E __b_CEncSinCosHipBas.m_ulHiResMask UINT32               7544 40
E __b_CEncSinCosHipBas.m_ulAbsPhaseTol UINT32               7546 40
E __b_CEncSinCosHipBas.m_lQepIncr INT32                7548 40
E __b_CEncSinCosHipBas.m_lDeltaQepIncr INT32                7550 40
E __b_CEncSinCosHipBas.m_lQposlatOld INT32                7552 40
E __b_CEncSinCosHipBas.m_iqSincSin INT32                7554 40
E __b_CEncSinCosHipBas.m_iqSincCos INT32                7556 40
E __b_CEncSinCosHipBas.m_iqHrPhase INT32                7558 40
E __b_CEncSinCosHipBas.m_iQdCor INT16                7060 40
E __b_CEncSinCosHipBas.m_iQdDir INT16                7061 40
E __b_CEncSinCosHipBas.m_iLatchQep INT16                7062 40
E __b_CEncSinCosHipBas.m_iEpsIsUsable INT16                7063 40
E __b_CEncSinCosHipBas.m_bFinalLatchIn UINT16               7064 40
E __b_CEncSinCosHipBas.m_iqPhaseComp INT32                7566 40
E __b_CEncSinCosHipBas.m_iqPaseShiftComp1 INT32                7568 40
E __b_CEncSinCosHipBas.m_iqSpeedUf INT32                7570 40
E __b_CEncSinCosHipBas.m_ulPhaseDiff UINT32               7572 40
E __b_CEncSinCosHipBas.m_ulPhaseDiffCatch UINT32               7574 40
E __b_CEncSinCosHipBas.m_iqTempComp INT32                7576 40
E __b_CEncSinCosHipBas.m_iqTempCompFakt1 INT32                7578 40
E __b_CEncSinCosHipBas.m_iqTempCompFakt2 INT32                7580 40
E __b_CEncSinCosHipBas.m_iqTempCompFakt3 INT32                7582 40
E __b_CEncSinCosHipBas.m_iqCompSum INT32                7584 40
E __b_CEncSinCosHipBas.m_iPositionCorrection_A INT16                7086 40
E __b_CEncSinCosHipBas.m_iPositionCorrection_B INT16                7087 40
E __b_CEncSinCosHipBas.m_iPositionCorrection_C INT16                7088 40
E __b_CEncSinCosHipBas.m_iqEps32_0 INT32                7590 40
E __b_CEncSinCosHipBas.m_iqEps32Buf INT32[]              7592 40
E __b_CEncSinCosHipBas.m_iqEps0 INT32                7624 40
E __b_CEncSinCosHipBas.m_iqEps0Old INT32                7626 40
E __b_CEncSinCosHipBas.m_iqSpeedOld INT32                7628 40
E __b_CEncSinCosHipBas.m_uiSpeedUfRemain UINT16               7130 40
E __b_CEncSinCosHipBas.m_iqAlphaOld1 INT32                7632 40
E __b_CEncSinCosHipBas.m_iqAlphaOld2 INT32                7634 40
E __b_CEncSinCosHipBas.m_iqAlphaOld3 INT32                7636 40
E __b_CEncSinCosHipBas.m_iqMaxSpeedForAbsPos INT32                7638 40
E __b_CEncSinCosHipBas.m_ulAbsPosReso UINT32               7640 40
E __b_CEncSinCosHipBas.m_uiResoPactToAbsPos UINT16               7142 40
E __b_CEncSinCosHipBas.m_ulAbsPosMask UINT32               7644 40
E __b_CEncSinCosHipBas.m_ulAbsToEps UINT32               7646 40
E __b_CEncSinCosHipBas.m_uiRdAbsState UINT16               7148 40
E __b_CEncSinCosHipBas.m_ulCpuT0_smp UINT32               7650 40
E __b_CEncSinCosHipBas.m_iqEps32K0 INT32                7652 40
E __b_CEncSinCosHipBas.m_iqEps32K1 INT32                7654 40
E __b_CEncSinCosHipBas.m_iqEps32Cap INT32                7656 40
E __b_CEncSinCosHipBas.m_ulTstamp1 UINT32               7658 40
E __b_CEncSinCosHipBas.m_uiRdAbsFlags UINT16               7160 40
E __b_CEncSinCosHipBas.m_ulSincosAbsPos UINT32               7662 40
E __b_CEncSinCosHipBas.m_uiWaitIpoCnt UINT16               7164 40
E __b_CEncSinCosHipBas.m_uiAbortCnt UINT16               7165 40
E __b_CEncSinCosHipBas.m_iqPosAct0 INT32                7666 40
E __b_CEncSinCosHipBas.m_iqPosActHighRes0 INT32                7668 40
E __b_CEncSinCosHipBas.m_lHiResAbsPos INT32                7670 40
E __b_CEncSinCosHipBas.m_ulCpuT0_Read05 UINT32               7672 40
E __b_CEncSinCosHipBas.m_iqDeltaEps0Lim INT32                7674 40
E __b_CEncSinCosHipBas.m_uiAmpMonCnt UINT16               7176 40
E __b_CEncSinCosHipBas.m_uiAmpMonHiCnt UINT16               7177 40
E __b_CEncSinCosHipBas.m_iqAmpMonPos INT32                7678 40
E __b_CEncSinCosHipBas.m_iqAmpMonPosLim INT32                7680 40
E __b_CEncSinCosHipBas.m_iqAmpMonSpdLim INT32                7682 40
E __b_CEncSinCosHipBas.m_iqSinCosMinCatch INT32                7684 40
E __b_CEncSinCosHipBas.m_iqSincosSqr_D48 INT32                7686 40
E __b_CEncSinCosHipBas.m_iqSincosSqr_LimH INT32                7688 40
E __b_CEncSinCosHipBas.m_uiEncTempCnt UINT16               7190 40
E __b_CEncSinCosHipBas.m_iThetaEncCrit INT16                7191 40
E __b_CEncSinCosHipBas.m_uiHipStatus UINT16               7192 40
E __b_CEncSinCosHipBas.m_iqEpsE_b_Diff INT32                7694 40
E __b_CEncSinCosHipBas.m_iqEpsE_b_DiffCatch INT32                7696 40
E __b_CEncSinCosHipBas.m_uiUseAbsPosForMonitor UINT16               7198 40
E __b_CEncSinCosHipBas.m_iEpsE_b_Cnt INT16                7199 40
E __b_CEncSinCosHipBas.m_iqEpsE_b_DiffWarn INT32                7700 40
E __b_CEncSinCosHipBas.m_iqEpsE_b_DiffLim INT32                7702 40
E __b_CEncSinCosHipBas.m_iqEpsE_bOld INT32                7704 40
E __b_CEncSinCosHipBas.m_iSpikeCnt INT16                7206 40
E __b_CEncSinCosHipBas.m_uiToggleRead UINT16               7207 40
E __b_CEncSinCosHipBas.m_lDiffPactToSetEncPosValSave INT32                7708 40
E __b_CEncSinCosHipBas.m_ulSetPosEncUsr UINT32               7710 40
E m_iqPosActMotorOld           INT32                7712 40
E m_iqPosActMachineOld         INT32                7714 40
E m_iqPosActReset              INT32                7716 40
E m_bPdifMachResetSupress      UINT16               7218 40
D 41  CAtu
E __b_CBasComponent.__vptr     unknown*             7500 41
E m_iqCurrQpos                 INT32[]              7502 41
E m_iqCurrQneg                 INT32[]              7512 41
E m_iqNdiff2                   INT32[]              7522 41
E m_uiTestTime_Moment          UINT16               7062 41
E m_lEndSpeedUmin              INT32                7564 41
E m_iqMinCurrQ                 INT32                7566 41
E m_iqEquation                 INT32[]              7568 41
E m_lSpeedMaxUmin              INT32                7572 41
E m_aiqInertiaTest             INT32[]              7574 41
E m_uiTestLoop                 UINT16               7084 41
E m_uiStimCurrentLoad          UINT16               7085 41
E m_uiStimCurrentMin           UINT16               7086 41
E m_uiStimCurrentMax           UINT16               7087 41
E m_lTestSpeedMax              INT32                7588 41
E m_iqTestSpeedMax             INT32                7590 41
E m_ulFailedTestPoints         UINT32               7592 41
E m_ulFailedTestDebug          UINT32               7594 41
E m_ulTestPoints               UINT32               7596 41
E m_ulActWaitTime              UINT32               7598 41
E m_ulActCntrTime              UINT32               7600 41
E m_uiActCtrlParamSet          UINT16               7102 41
E m_uiFirstCtrlParamSet        UINT16               7103 41
E m_uiTestTime_Paramset        UINT16               7104 41
E m_bTest                      UINT16               7105 41
E m_iqTheoKpn                  INT32                7606 41
E m_iqTheoTnn                  INT32                7608 41
E m_iqTheoKpp                  INT32                7610 41
E m_uiEquivalentTimeConst      UINT16               7112 41
E m_uiAdjustDelay              UINT16               7113 41
E m_iqDeltaKpn                 INT32                7614 41
E m_iqDeltaKpp                 INT32                7616 41
E m_iq16Kpn                    INT32                7618 41
E m_iq16Tnn                    INT32                7620 41
E m_iq16Kpp                    INT32                7622 41
E m_uiTimeTickms               UINT16               7124 41
E m_uiN                        UINT16               7125 41
E m_iqSpeedFactor              INT32                7626 41
E m_sInfoFlags                 ???                  7628 41
E m_iActDriveSense             INT16                7130 41
E m_channel                    ???                  7631 41
E m_uiSetHalt                  UINT16               7132 41
E m_uiXEnd                     UINT16               7133 41
E m_uiStartTime                UINT16               7134 41
E m_ulStandPWinTime            UINT32               7636 41
E m_lFiltOutSpeed              INT32                7638 41
E m_lFiltOutCurr               INT32                7640 41
E m_lFiltW1Speed               INT32                7642 41
E m_lFiltW1Curr                INT32                7644 41
E m_lFiltW2Speed               INT32                7646 41
E m_lFiltW2Curr                INT32                7648 41
E m_lPosMaxMoment              INT32                7650 41
E m_lPosMinMoment              INT32                7652 41
E m_lPosMaxInertia             INT32                7654 41
E m_lPosMinInertia             INT32                7656 41
E m_lPosMax                    INT32                7658 41
E m_lPosMin                    INT32                7660 41
E m_lStartPositionUsr          INT32                7662 41
E m_lStartPosition             INT32                7664 41
E m_uiPosRangeIntern           UINT16               7166 41
E m_bPosControlActiv           UINT16               7167 41
E m_ulIMaxQStop                UINT32               7668 41
E m_ulIMaxHalt                 UINT32               7670 41
E m_ulIMaxMotor                UINT32               7672 41
E m_ulIMaxUser                 UINT32               7674 41
E m_ulIHalt                    UINT32               7676 41
E m_ulProfileAcc               UINT32               7678 41
E m_ulHaltDeceleration         UINT32               7680 41
E m_ulProfileSpd               UINT32               7682 41
E m_lProfilePos                INT32                7684 41
E m_State                      ???                  7686 41
E m_SubState                   ???                  7687 41
E m_SubStateMoment             ???                  7688 41
E m_SubStateParamset           ???                  7689 41
E m_SubStateInertia            ???                  7690 41
E m_SubStateInit               ???                  7691 41
E m_SubStateCmftune            ???                  7692 41
E m_uiState                    UINT16               7193 41
E m_uiPosRange                 UINT16               7194 41
E m_uiRotSense                 UINT16               7195 41
E m_lStimCurrent               INT32                7696 41
E m_uiRotSpeed                 UINT16               7198 41
E m_uiFrictionMoment           UINT16               7199 41
E m_iMoment                    INT16                7200 41
E m_uiWaitTime                 UINT16               7201 41
E m_uiOptimize                 UINT16               7202 41
E m_iqInertia                  INT32                7704 41
E m_uiRotSpeedTolerance        UINT16               7206 41
E m_uiCoupling                 UINT16               7207 41
E m_uiOptimizeMax              UINT16               7208 41
E m_lPosRangeUsr               INT32                7710 41
E m_lRotSpeedUsr               INT32                7712 41
E m_lRotSpeedUsrTolerance      INT32                7714 41
E m_uiNonUsrParamBitMask       UINT16               7216 41
E m_uiUsrParamBitMask          UINT16               7217 41
E m_uiUsrRevInConsistFlag      UINT32               7718 41
E m_ulInertiaRatio             UINT32               7720 41
E m_ulTParaSwitchUsr           UINT32               7722 41
E m_uiCntFFT                   UINT16               7224 41
E m_uiStepCritical             UINT16               7225 41
E m_uiStepProgress             UINT16               7226 41
E m_sFft.ipcbptr               INT32*               7728 41
E m_sFft.tfptr                 INT32*               7730 41
E m_sFft.size                  INT16                7232 41
E m_sFft.nrstage               INT16                7233 41
E m_sFft.magptr                INT32*               7734 41
E m_sFft.winptr                INT32*               7736 41
E m_sFft.peakmag               INT32                7738 41
E m_sFft.peakfrq               INT16                7240 41
E m_sFft.ratio                 INT16                7241 41
E m_sFft.init                  ???                  7742 41
E m_sFft.calc                  ???                  7744 41
E m_sFft.split                 ???                  7746 41
E m_sFft.mag                   ???                  7748 41
E m_sFft.win                   ???                  7750 41
E m_puiManualTuningTrig        UINT16*              7752 41
E m_uiIdxOverShoot             UINT16               7254 41
E m_uiPosiCastDmp              UINT16               7255 41
E m_iqRotSpeed                 INT32                7756 41
E m_plMechCpl                  INT32[]              7758 41
E m_punionFftData              ???                  7768 41
D 43 CSpeedCtrl CSpeedCtrl
E LeadLag.PT1part.m_iqOutput   INT32                7500 43
E LeadLag.PT1part.m_iqPrmA     INT32[]              7502 43
E LeadLag.PT1part.m_iqPrmB     INT32[]              7508 43
E LeadLag.m_iqOutput           INT32                7514 43
E LeadLag.m_iqPrmK             INT32                7516 43
E LeadLag.m_iqOutputLim        INT32[]              7518 43
E PidDT1part.PT1part.m_iqOutput INT32                7522 43
E PidDT1part.PT1part.m_iqPrmA  INT32                7524 43
E PidDT1part.PT1part.m_iqPrmB  INT32                7526 43
E PidDT1part.m_iqOutput        INT32                7528 43
E PidDT1part.m_iqLimit         INT32                7530 43
E PidDT1part.m_iqPrmK          INT32                7532 43
E OSup.m_iqOutput              INT32                7534 43
E OSup.m_iqDampRatio           INT32[]              7536 43
E OSup.m_uiDelayTime           UINT16[]             7540 43
E OSup.m_uiIdx                 UINT16               7042 43
E OSup.m_piqLoopMem            INT32*               7544 43
E OSup.m_bFilterActive         UINT16               7046 43
E m_iqKpSpeed                  INT32[]              7548 43
E m_iqKiSpeed                  INT32[]              7554 43
E m_iqSpeedInteg               INT32                7560 43
E m_iqIqFricMax                INT32[]              7562 43
E m_iqSpeedRef                 INT32                7566 43
E m_iqSpeedDif                 INT32                7568 43
E m_iqYSpeed                   INT32                7570 43
E m_iqSpeedPpart               INT32                7572 43
E m_iqSpeed_man                INT32                7574 43
E m_iqSpdLim                   INT32                7576 43
E m_iqIqSpeedLimRef            INT32                7578 43
E m_iqAccFfdTerm               INT32                7580 43
E m_bSwitchAccFfd              UINT16               7082 43
E m_iqGainAccFfdCurrent        INT32                7584 43
E m_iqAccFfdLim                INT32                7586 43
E m_iqIqRefCtrl                INT32                7588 43
E m_uiLimitFlg                 UINT16               7090 43
E m_iqSpeedAxf                 INT32                7592 43
E m_iqSpeedFricConstInv        INT32                7594 43
E m_iqSpeedFricConst           INT32                7596 43
E m_iqIqFricTerm               INT32                7598 43
E m_iqSpeedZeroClampHigh       INT32                7600 43
E m_iqSpeedZeroClampLow        INT32                7602 43
E m_uiResetSpeedInteg          UINT16               7104 43
E m_plSpdMem                   INT32[]              7606 43
D 44  CHwlEsim
E sEsim                        unknown*             7500 44
E m_iqInputPosRef24            INT32                7502 44
E m_iqEsimSpdRef               INT32                7504 44
E m_iqEsimPosRef               INT32                7506 44
E m_iEsimRefPosOffset          INT16                7008 44
E m_iqEsimPosActInt            INT32                7510 44
E m_iqEsimPosAct               INT32                7512 44
E m_iqEsimPosActExt            INT32                7514 44
E m_iqEsimSpdAct               INT32                7516 44
E m_iqEsimSpdActOld            INT32                7518 44
E m_iqEsimPosDif               INT32                7520 44
E m_iqEsimPosDifExt            INT32                7522 44
E m_iqEsimPllKp                INT32                7524 44
E m_iqEsimOneRev               INT32                7526 44
E m_iqEsimHalfRev              INT32                7528 44
E m_iqSpdInputToEsimScal       INT32                7530 44
E m_uiEsimState                UINT16               7032 44
E m_bActive                    UINT16               7033 44
E m_bJustNoPuls                UINT16               7034 44
E m_uiModePulsOld              UINT16               7035 44
E m_uiEsimCtrl                 UINT16               7036 44
E m_uiHwReload                 UINT16               7037 44
E m_uiHwReloadOld              UINT16               7038 44
E m_uiHwCounter                UINT16               7039 44
E m_uiEsimRes                  UINT16               7040 44
E m_uiQepCntOld                UINT16               7041 44
E m_uiInitialABState           UINT16               7042 44
E m_uiInitialIdxCnt            UINT16               7043 44
E m_uiQepAtInit                UINT16               7044 44
E m_uiCapTimerLat              UINT16               7045 44
E m_uiEPWM4_smp                UINT16               7046 44
E m_uiQepStatus                UINT16               7047 44
E m_uiDigitsAftDp              UINT16               7048 44
E m_uiEsimCorrection           UINT16               7049 44
D 45  CHwlSuperVision
E m_CtrlBits.bSchedCtrl        UINT16               7000 45
E m_uiMax62usTime              UINT16               7001 45
E m_uiMin62usTime              UINT16               7002 45
E m_uiMax250usTime             UINT16               7003 45
E m_uiMin250usTime             UINT16               7004 45
E m_uiMax1msTime               UINT16               7005 45
E m_uiMin1msTime               UINT16               7006 45
E m_uiMaxFBSchedTime           UINT16               7007 45
E m_uiMinFBSchedTime           UINT16               7008 45
E m_uiMsTics                   UINT16               7009 45
E m_uiMsTicOld                 UINT16               7010 45
E m_uiTime12V                  UINT16               7011 45
E m_uiMaxPosCtrl               UINT16               7012 45
E m_uiReadPtrArr               UINT16               7013 45
E m_puiCheckStack              UINT16*              7514 45
E m_pui0Pointer                UINT16*              7516 45
E m_ulAverageFBSchedTime       UINT32               7518 45
E m_ulLoadCtrl                 UINT32               7520 45
E m_uiTmp                      UINT32               7522 45
E m_ulMainFBTimeSmp            UINT32               7524 45
E m_uiMaxFBMainTime            UINT32               7526 45
E m_uiMinFBMainTime            UINT32               7528 45
E m_ulAverageFBMainTime        UINT32               7530 45
E m_ul1msSmp                   UINT32               7532 45
E m_ulAverage1msTime           UINT32               7534 45
E m_ulMainTimeSmp              UINT32               7536 45
E m_uiMaxMainTime              UINT32               7538 45
E m_uiMinMainTime              UINT32               7540 45
E m_ulAverageMainTime          UINT32               7542 45
E m_ulFBSchedSmp               UINT32               7544 45
E m_ulAverage62usTime          UINT32               7546 45
E m_ulPosCtrlSmp               UINT32               7548 45
E m_ul250usSmp                 UINT32               7550 45
E m_ulAverage250usTime         UINT32               7552 45
E m_ulScheduleTimeCtrl         UINT32               7554 45
E m_ul62usSmp                  UINT32               7556 45
D 46  CHwlPDAB
E m_uiPulseOld                 UINT16               7000 46
E m_uiTimeAtPulse_smp          UINT16               7001 46
E m_uiPulseIn_smp              UINT16               7002 46
E m_uiTimePLD_smp              UINT16               7003 46
E m_uiTimeEpwm4_smp            UINT16               7004 46
E m_iPulseDif                  INT16                7005 46
E m_uiRefPulseFine             UINT16               7006 46
E m_uiRefPulseCalcState        UINT16               7007 46
E m_uiNoNewPulseTime           UINT16               7008 46
E m_uiPulszustand              UINT16               7009 46
E m_uiMaxPulseWarnLevel        UINT16               7010 46
E m_uiMaxPulseErrLevel         UINT16               7011 46
E m_bSinglestep                UINT16               7012 46
E m_sEnc                       unknown*             7514 46
E m_ulTimeCapAct               UINT32               7516 46
E m_ulTimeCapOld               UINT32               7518 46
E m_ulTimeCapDif               UINT32               7520 46
E m_ulTimeCmprAct              UINT32               7522 46
E m_ulTimeBase_smp             UINT32               7524 46
E m_lF_act                     INT32                7526 46
E m_lPulseInteg                INT32                7528 46
E m_lRefPulsCoarse             INT32                7530 46
E m_lTestVar                   INT32                7532 46
E m_uiEncCtrlReg_smp           UINT16               7034 46
E m_iSigErrCnt                 INT16                7035 46
E m_uiPulseOccured             UINT16               7036 46
D 49 CPms CPms
E __b_CBasComponent.__vptr     unknown*             7500 49
E m_compatibility              unknown*             7502 49
E m_UsrRescale                 unknown*             7504 49
E m_ChannelInfoList            ???                  7506 49
E m_eAccessChannel             ???                  7540 49
E m_bAccessExclusive           UINT16               7041 49
E m_bFreezeAccess              UINT16               7042 49
E m_ulBlockInitUp              UINT32               7544 49
E m_ulBlockInitDown            UINT32               7546 49
E m_ulBlockLength              UINT32               7548 49
E m_ulBlockDownloadOffset      UINT32               7550 49
E m_configTransfer             unknown*             7552 49
D 50 CPmsConfigTransfer CPmsConfigTransfer
E __b_CBasFileTransferAccess.__vptr unknown*             7500 50
E m_bIsCompatible              UINT16               7002 50
E m_uiConfigLockState          UINT16               7003 50
E m_configLockChannel          ???                  7504 50
E m_puiBuffer                  UINT16*              7506 50
E m_uiBufferLen                UINT16               7008 50
E m_uiFileLength               UINT16               7009 50
E m_ulFileIdOfBuffer           UINT32               7510 50
E m_uiUploadState              UINT16               7012 50
E m_uiUploadDefIdx             UINT16               7013 50
E m_uiUploadDefLen             UINT16               7014 50
E m_puiUploadDefPtr            UINT16*              7516 50
E m_psUploadData               unknown*             7518 50
E m_uiUploadDsetNum            UINT16               7020 50
E m_uiUploadDsetEnd            UINT16               7021 50
E m_puiUploadDsetData          UINT16*              7522 50
E m_uiDownloadMotorEnd         UINT16               7024 50
E m_ulDownloadErrCode          UINT32               7526 50
E m_ulDownloadEepromBits       UINT32               7528 50
D 51 CSpe_Speedprofile CSpe
E __b_CBasComponent.__vptr     unknown*             7500 51
E m_l_act                      INT32                7502 51
E m_l_actnew                   INT32                7504 51
E m_l_targetnew                INT32                7506 51
E m_l_acc                      INT32                7508 51
E m_l_decc                     INT32                7510 51
E m_l_deccact                  INT32                7512 51
E m_ui_state                   UINT16               7014 51
E m_ui_actionstat              UINT16               7015 51
D 52 CSpe_Currentprofile CSpe
E __b_CBasComponent.__vptr     unknown*             7500 52
E m_l_act                      INT32                7502 52
E m_l_actnew                   INT32                7504 52
E m_l_targetnew                INT32                7506 52
E m_l_acc                      INT32                7508 52
E m_l_decc                     INT32                7510 52
E m_l_deccact                  INT32                7512 52
E m_ui_state                   UINT16               7014 52
E m_ui_actionstat              UINT16               7015 52
D 53 CAxfOpModeDss CAxfOpModeDss
E FromAxfAnalog.lSpdRefAnalog  INT32                7500 53
E FromAxfAnalog.lTrqRefAnalogPerCent INT32                7502 53
E FromAxfAnalog.iqSpdLimAnalog INT32                7504 53
E FromAxfAnalog.iqTrqLimAnalog INT32                7506 53
E FromAxfAnalog.uiAnaInModesProcessed UINT16               7008 53
E ToAxfAnalog.uiAnaInModesRequested UINT16               7010 53
E ToAxfAnalog.iqSpdScalAna1    INT32                7512 53
E ToAxfAnalog.iTrqScalAna1PerCent INT16                7014 53
E ToAxfAnalog.iqSpdLimAna1     INT32                7516 53
E ToAxfAnalog.iqTrqLimAna1     INT32                7518 53
E ToAxfAnalog.iqSpdScalAna2    INT32                7520 53
E ToAxfAnalog.iTrqScalAna2PerCent INT16                7022 53
E ToAxfAnalog.iqSpdLimAna2     INT32                7524 53
E ToAxfAnalog.iqTrqLimAna2     INT32                7526 53
D 54 CAxfAnalog CAxfAnalog
E m_iqAnaInVal_1               INT32                7500 54
E m_iqAnaInVal_2               INT32                7502 54
E m_uiAnalogInputModesAna1     UINT16               7004 54
E m_uiAnalogInputModesAna2     UINT16               7005 54
E m_ulAna2VoltageWindowTime    UINT32               7506 54
E m_iqAna2InFilt               INT32                7508 54
E m_iqAna2VoltageWindow        INT32                7510 54
E m_iqAna2InputMax             INT32                7512 54
E m_iqAna2InputMin             INT32                7514 54
E m_ulAna2VoltageWindowCnt     UINT32               7516 54
E m_iqAna2Voltage4AccMin       INT32                7518 54
E m_lAccAct                    INT32                7520 54
E m_lDecAct                    INT32                7522 54
D 55 CAxfUmodeProfileVelocity CAxfUmodeProfileVelocity
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 55
E __b_CAxfUmode.__vptr         unknown*             7502 55
E m_bitQuickStop               UINT16               7004 55
E m_uiProfileVelocityStartUser UINT16               7005 55
E m_uiProfileVelocityStartIntern UINT16               7006 55
E m_lTargetVelocityUsr         INT32                7508 55
E m_iqTargetVelocityIQ         INT32                7510 55
D 56 CAxfUmodeProfileTorque CAxfUmodeProfileTorque
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 56
E __b_CAxfUmode.__vptr         unknown*             7502 56
E m_bitQStop                   UINT16               7004 56
E m_uiProfileTorqueStartUser   UINT16               7005 56
E m_uiProfileTorqueStartIntern UINT16               7006 56
E m_iTargetTorqueUsr           INT16                7007 56
E m_iqTargetTorqueContIQ       INT32                7508 56
D 57 CAxfUmodeGear CAxfUmodeGear
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 57
E __b_CAxfUmode.__vptr         unknown*             7502 57
E m_bitDenomChanged            UINT16               7004 57
E m_uiGearStartUser            UINT16               7005 57
E m_uiGearStartIntern          UINT16               7006 57
E m_lNum                       INT32                7508 57
E m_lDenom                     INT32                7510 57
E m_lNum_GearRes               INT32                7512 57
E m_lDenom_GearRes             INT32                7514 57
E m_lNum_Set1                  INT32                7516 57
E m_lDenom_Set1                INT32                7518 57
E m_lNum_Set2                  INT32                7520 57
E m_lDenom_Set2                INT32                7522 57
E m_lRemainder                 INT32                7524 57
E m_lGearInCntOld              INT32                7526 57
E m_uiGearInCntFineOld         UINT16               7028 57
E m_lPosAddGear                INT32                7530 57
E m_lPosAddGearOld             INT32                7532 57
E m_uiPosAddGearFine           UINT16               7034 57
E m_lPosRefGear                INT32                7536 57
E m_uiPosRefGearFine           UINT16               7038 57
E m_lFeedForwardVelSpgInternOld INT32                7540 57
E m_lAccFeedForwardSpgInternOld INT32                7542 57
E m_lMaxAllowedChgOfPosInternInclRemAbs INT32                7544 57
E m_lSpeefForLibraryTest       INT32                7546 57
D 59 CAxfUmodePosPrf CAxfUmodePosPrf
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 59
E __b_CAxfUmode.__vptr         unknown*             7502 59
E m_bitContinueMovePossible    UINT16               7004 59
E m_uiSpeedTargetUserRpm       UINT16               7005 59
E m_lStartAbsPosUser           INT32                7506 59
E m_lStartRelPosPrefUser       INT32                7508 59
E m_ulSpeedTargetUser          UINT32               7510 59
E m_lStartRelPosPactUser       INT32                7512 59
E m_ulSpeedTargetNextUser      UINT32               7514 59
E m_lPosTargetIntern           INT32                7516 59
E m_lSpeedTargetIntern         INT32                7518 59
E m_lSpeedTargetNextIntern     INT32                7520 59
E m_lCaptPosUser               INT32                7522 59
D 60 CAxfUmodeHome CAxfUmodeHome
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 60
E __b_CAxfUmode.__vptr         unknown*             7502 60
E m_bitDoHomeCycFctCall        UINT16               7004 60
E m_uiHomeStartUser            UINT16               7005 60
E m_uiHomeStartIntern          UINT16               7006 60
E m_uiTimeTick1msFctCallSave   UINT16               7007 60
E m_uiHomeStateIntern          UINT16               7008 60
E m_uiAckData                  UINT16               7009 60
E m_uiHomeStateInternSave      UINT16               7010 60
E m_uiHardTimeFaultResetBegin  UINT16               7011 60
E m_uiHomeStateInternAfterFaultRes UINT16               7012 60
E m_uiTargetLimit              UINT16               7013 60
E m_uiActiveLimit              UINT16               7014 60
E m_uiIndexSearchDir           UINT16               7015 60
E m_uiSignalLevelStartSave     UINT16               7016 60
E m_uiEnabledSigsStartSave     UINT16               7017 60
E m_uiEnaSigsWorkSave          UINT16               7018 60
E m_uiSigLevWorkSave           UINT16               7019 60
E m_uiLimitsWorked             UINT16               7020 60
E m_uiIndexSearchType          UINT16               7021 60
E m_uiSubStatePhysIndex        UINT16               7022 60
E m_uiHomeRefSwitchMod         UINT16               7023 60
E m_lDspPosStartSearchIndex    INT32                7524 60
E m_lHomeSpeedOutRefWithCorrStartSpeedIntern INT32                7526 60
E m_lPosDiffSwitchToIndex      INT32                7528 60
E m_lSetPosValueUser           INT32                7530 60
E m_lHomeSpeedToRefIntern      INT32                7532 60
E m_lHomeSpeedOutRefIntern     INT32                7534 60
E m_lHomePosOutRefIntern       INT32                7536 60
E m_lHomePosDistRefIntern      INT32                7538 60
E m_lHomeRefAppPosIntern       INT32                7540 60
E m_lHomePosSrchLimMaxIntern   INT32                7542 60
D 62 CSpe_QStopHalt CSpe
E __b_CBasComponent.__vptr     unknown*             7500 62
E m_l_act                      INT32                7502 62
E m_l_actnew                   INT32                7504 62
E m_l_targetnew                INT32                7506 62
E m_l_acc                      INT32                7508 62
E m_l_decc                     INT32                7510 62
E m_l_deccact                  INT32                7512 62
E m_ui_state                   UINT16               7014 62
E m_ui_actionstat              UINT16               7015 62
D 67  CAxfUmodeManPos
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 67
E __b_CAxfUmode.__vptr         unknown*             7502 67
E m_bitManPosStartUserChg      UINT16               7004 67
E m_uiManPosStartUser          UINT16               7005 67
E m_uiManPosMethod             UINT16               7006 67
E m_uiTimeTick1msFctCallSave   UINT16               7007 67
E m_lManPosSpeedSlowIntern     INT32                7508 67
E m_lManPosSpeedFastIntern     INT32                7510 67
E m_lManPosStepPosDistIntern   INT32                7512 67
E m_uiManPosStateIntern        UINT16               7014 67
E m_uiAckData                  UINT16               7015 67
E m_uiManPosStateInternSave    UINT16               7016 67
E m_uiManuStateCtrl            UINT16               7017 67
E m_uiManMotionInWork          UINT16               7018 67
E m_uiDelayTimeStartValue      UINT16               7019 67
E m_uiManPosStartReqForRestart UINT16               7020 67
D 68  CMemCardFileMgr
E __b_CBasComponent.__vptr     unknown*             7500 68
E m_pProtMemCard               unknown*             7502 68
E m_AdminBlock.uiAdrFat        UINT16               7004 68
E m_AdminBlock.uiConfFilesCRC  UINT16               7005 68
E m_AdminBlock.uiAdminFlags    UINT16               7006 68
E m_AdminBlock.uiCardComp      UINT16               7007 68
E m_AdminBlock.ulDeviceID      UINT32               7508 68
E m_AdminBlock.ulDeviceSerNumber UINT32[]             7510 68
E m_AdminBlock.ulMandMName     UINT32[]             7518 68
E m_FatBlock                   ???                  7526 68
E m_uiState                    UINT16               7092 68
E m_uiFileSize                 UINT16               7093 68
E m_uiFileMemCardAdr           UINT16               7094 68
E m_uiSizeUpDown               UINT16               7095 68
E m_uiBuffer                   UINT16[]             7596 68
E m_uiDownSizeAct              UINT16               7112 68
E m_uiDownAdrAct               UINT16               7113 68
E m_uiMemCardRequest           UINT16               7114 68
E m_uiCardState                UINT16               7115 68
E m_puiFileData                UINT16*              7616 68
E m_puiDataUpDown              UINT16*              7618 68
E m_ulFatFileID                UINT32               7620 68
E m_ulBitsWriteConfFile        UINT32               7622 68
E m_ulBitsReadConfFile         UINT32               7624 68
E m_bMemCardReadyToUse         UINT16               7126 68
E m_bRead                      UINT16               7127 68
D 71 CHwlHip CHwlHip
E m_theHipCom                  unknown*             7500 71
E m_auiTelegrammBuffer         UINT16[]             7502 71
E m_uiMaxTelLen                UINT16               7027 71
E m_uiUserDataLength           UINT16               7028 71
E m_uiTelTimeout               UINT16               7029 71
E m_uiSendChar                 UINT16               7030 71
E m_uiReceiveChar              UINT16               7031 71
E m_uiTelOutDataLen            UINT16               7032 71
E m_uiCrcReceived              UINT16               7033 71
E m_uiCrcCheckFailed           UINT16               7034 71
E m_Flags.bitSendCmdFinished   UINT16               7035 71
E m_uiFault2xCounter           UINT16               7036 71
E m_uiFault2xMax               UINT16               7037 71
E m_bFault2xOccurs             UINT16               7038 71
E m_uiFault20Counter           UINT16               7039 71
E m_uiFault20Max               UINT16               7040 71
E m_bFault20Occurs             UINT16               7041 71
E m_uiEncoderStatusErrCount    UINT16               7042 71
E m_uiEncoderStatusLastErr     UINT16               7043 71
E m_MState                     ???                  7544 71
E m_SSInit                     ???                  7545 71
E m_SSCmd                      ???                  7546 71
E m_PF_uiErrCounter            UINT16               7047 71
E m_PF_uiCommand               UINT16               7048 71
E m_PF_uiSendDataLength        UINT16               7049 71
E m_PF_puiResponseCmd          UINT16*              7550 71
E m_PF_puiResponseData         UINT16*              7552 71
E m_puiResponseDataLen         UINT16*              7554 71
E m_PF_puiSendData             UINT16*              7556 71
E m_psData                     ???                  7558 71
E m_PF_errErrMem               UINT32               7560 71
E m_PF_ulTOCounter             UINT32               7562 71
E __vptr                       unknown*             7564 71
D 72 CEncSpeedObserver CEncSpeedObserver
E m_iqSpeedActDachCtrl         INT32                7500 72
E m_iqSpeedActDach             INT32                7502 72
E m_iqIqSpdObsFeed             INT32                7504 72
E m_iqSpeedDif                 INT32                7506 72
E m_iqSpeedActDachOld          INT32                7508 72
E m_iqTorqueStoerDachOld       INT32                7510 72
E m_iqTorqueStoerDach          INT32                7512 72
E m_iqPosActDachOld            INT32                7514 72
E m_iqPosActDach               INT32                7516 72
E m_iqObserverGain1            INT32                7518 72
E m_iqObserverGain2            INT32                7520 72
E m_iqObserverGain3            INT32                7522 72
E m_iqObserverIqAct            INT32                7524 72
E m_uiI0Observer               UINT16               7026 72
E m_uiM0Observer               UINT16               7027 72
E m_iqScaling3                 INT32                7528 72
E m_iqScaling4                 INT32                7530 72
E m_iqScaling6                 INT32                7532 72
E m_iqScaling7                 INT32                7534 72
E m_iqScaling8                 INT32                7536 72
E m_iqScaling10                INT32                7538 72
E m_iqPosDachRemainder         INT32                7540 72
E m_iqSpeedDachRemainder       INT32                7542 72
E m_iqTorqueDachRemainder      INT32                7544 72
E m_iqCalcTime                 INT32                7546 72
E m_bSpdObsDeactivated         UINT16               7048 72
E m_iqpSpeedActCtrlSave        INT32*               7550 72
E m_iqpSpeedActCtrlNoInvDirSave INT32*               7552 72
E __vptr                       unknown*             7554 72
D 74 CComiocFieldbus CComiocFieldbus
E __b_CBasFieldbus.__b_CBasComponent.__vptr unknown*             7500 74
E __b_CBasFieldbus.m_eFbusType ???                  7502 74
E __b_CBasFieldbus.m_bAsyncParamAccess UINT16               7003 74
E __b_CPmsAsyncAccessBas.m_uiAsyncReqTime UINT16               7004 74
E __b_CPmsAsyncAccessBas.m_uiAsyncReqState UINT16               7005 74
E __b_CPmsAsyncAccessBas.m_bAsyncReqIsRead UINT16               7006 74
E __b_CPmsAsyncAccessBas.m_ulAsyncReqIxSix UINT32               7508 74
E __b_CPmsAsyncAccessBas.m_ulAsyncReqValue UINT32               7510 74
E __b_CPmsAsyncAccessBas.m_ulAsyncReqErrCode UINT32               7512 74
E __b_CPmsAsyncAccessBas.__vptr unknown*             7514 74
E m_bInitInMainloopDone        UINT16               7016 74
E m_bModuleConnected           UINT16               7017 74
E m_ulErrAdmErrGen             UINT32               7518 74
E m_uiChnlNotify               UINT16               7020 74
E m_uiLastParamSvcErrCode      UINT16               7021 74
E m_uiCfgChangeFlags           UINT16               7022 74
E m_bCfgChangeEeprom           UINT16               7023 74
E m_ulCfgChangePollTime        UINT32               7524 74
E m_iCfgChangeIndex            INT16                7026 74
E m_uiCfgChangeLen             UINT16               7027 74
E m_puiCfgChangeDef            UINT16*              7528 74
E m_puiIpCardAct               UINT16[]             7530 74
E m_uiEepromStoreCnt           UINT16               7034 74
E m_puiCacheChangeTab          UINT16[]             7535 74
E m_uiCacheChangeTabIndex      UINT16               7038 74
E m_uiJobErrParamFirst         UINT16               7039 74
E m_uiJobErrCodeFirst          UINT16               7040 74
E m_uiJobErrParamLast          UINT16               7041 74
E m_uiJobErrCodeLast           UINT16               7042 74
E m_pAsyncJobList              ???                  7544 74
E m_pJob                       unknown*             7562 74
E m_sDPRAM_Rx.uiRxPDOBufMgmt   UINT16               7064 74
E m_sDPRAM_Rx.uiStateReq       UINT16               7065 74
E m_sDPRAM_Rx.psRxConf         unknown*             7566 74
E m_sDPRAM_Rx.pulRxBuf         UINT32*              7568 74
E m_sDPRAM_Rx.uiCnt            UINT16               7070 74
E m_sDPRAM_Rx.uiPDOCnt         UINT16               7071 74
E m_sDPRAM_Tx.uiBufMgmt        UINT16               7072 74
E m_sDPRAM_Tx.uiStateRsp       UINT16               7073 74
E m_sDPRAM_Tx.uiError          UINT16               7074 74
E m_sDPRAM_Tx.psTxConf         unknown*             7576 74
E m_sDPRAM_Tx.pulTxBuf         UINT32*              7578 74
E m_sDPRAM_Tx.uiCnt            UINT16               7080 74
E m_sDPRAM_Tx.uiPDOCnt         UINT16               7081 74
E m_uiRxPDOBufSel              UINT16               7082 74
E m_uiRxPDOBufSelLast          UINT16               7083 74
E m_aPDORxA                    UINT32[]             7584 74
E m_aPDORxB                    UINT32[]             7616 74
E m_uiTxPDOBufSel              UINT16               7148 74
E m_aPDOTxA                    UINT32[]             7650 74
E m_aPDOTxB                    UINT32[]             7682 74
E m_uiCountATBytes             UINT16               7214 74
E m_uiCountMDTBytes            UINT16               7215 74
E m_uiTxPDOreq                 UINT16               7216 74
E m_uiInpShiftTimeTicks        UINT16               7217 74
E m_uiMstState                 UINT16               7218 74
E m_uiSlvState                 UINT16               7219 74
E m_uiSlvSyncedBit             UINT16               7220 74
E m_uiSyncType                 UINT16               7221 74
E m_uiSlaveAdrAct              UINT16               7222 74
E m_uiPDOmaskFB                UINT16               7223 74
E m_ulDiagSizeAdr              UINT32               7724 74
E m_ulDiagData                 UINT32               7726 74
E m_uiTxErrCnt                 UINT32               7728 74
E m_ulCycleTime                UINT32               7730 74
E m_ulInpShiftTime             UINT32               7732 74
D 75  CAxfOffsPos
E m_theSpeOffsPos              unknown*             7500 75
E m_lPosOffsetTarget           INT32                7502 75
E m_i64PosOffsetActual.L       UINT32               7504 75
E m_i64PosOffsetActual.H       INT32                7506 75
E i64VelSPEAct.L               UINT32               7508 75
E i64VelSPEAct.H               INT32                7510 75
E i64VelSPEActOld.L            UINT32               7512 75
E i64VelSPEActOld.H            INT32                7514 75
E i64VelSPEActAbs.L            UINT32               7516 75
E i64VelSPEActAbs.H            INT32                7518 75
E m_bDoOffsetCalc              UINT16               7020 75
E m_bOffsetCalcFinish          UINT16               7021 75
E m_uiAckData                  UINT16               7022 75
E m_lPosOffsSetAbsolute        INT32                7524 75
E m_lAbsPosUser                INT32                7526 75
E m_lRelPosUser                INT32                7528 75
E m_uiActivateOffset           UINT16               7030 75
E m_lOffsPosAccIntern          INT32                7532 75
E m_lBrakeDistance             INT32                7534 75
E m_lGainBrakeTime             INT32                7536 75
E m_lVelTaretIntern            INT32                7538 75
E m_lVelTaretInternMax         INT32                7540 75
E m_lVelActInternOld           INT32                7542 75
E m_lVelActIntern              INT32                7544 75
E m_bSetVelActIntern           UINT16               7046 75
E m_lDeltaPosOffMin            INT32                7548 75
D 76 CSpe_OffsPos CSpe
E __b_CBasComponent.__vptr     unknown*             7500 76
E m_l_act                      INT32                7502 76
E m_l_actnew                   INT32                7504 76
E m_l_targetnew                INT32                7506 76
E m_l_acc                      INT32                7508 76
E m_l_decc                     INT32                7510 76
E m_l_deccact                  INT32                7512 76
E m_ui_state                   UINT16               7014 76
E m_ui_actionstat              UINT16               7015 76
D 78  CBasErrorManager
E m_uiStopFault                UINT16               7000 78
E m_uiStopFaultInfo            UINT16               7001 78
E m_ulStopFaultTime            UINT32               7502 78
E m_uiStopFaultClass           UINT16               7004 78
E m_uiStopFaultSuperv          UINT16               7005 78
E m_ulLastWarningEvent         UINT32               7506 78
E m_ulLastWarningCyclic        UINT32               7508 78
E m_uiErrClassesActive         UINT16               7010 78
E m_uiErrClassesLatched        UINT16               7011 78
E m_ulErrBitsActive            UINT32               7512 78
E m_ulErrBitsLatched           UINT32               7514 78
E m_ulErrBitsToSuppress        UINT32               7516 78
E m_ulErrChangeToWarning       UINT32               7518 78
E m_ulWarnBitsActive           UINT32               7520 78
E m_ulWarnBitsLatched          UINT32               7522 78
E m_uiWarnBitTimer             UINT16               7024 78
E m_uiDynErrClassList          UINT16[]             7525 78
E m_ulInfoCode                 UINT32               7530 78
E m_uiInfoData                 UINT16               7032 78
E m_uiInvalidParamMdbAdr       UINT16               7033 78
D 81 CAxfFIR CAxfFIR
E m_lFactorAi                  INT32                7500 81
E m_i64SpeedSum.L              UINT32               7502 81
E m_i64SpeedSum.H              INT32                7504 81
E m_uiDisJerkCalcCnt           UINT16               7006 81
E m_uiFifoReadIx               UINT16               7007 81
E m_uiFifoWriteIx              UINT16               7008 81
E m_uiUsedEntries              UINT16               7009 81
E m_bJerkEnd                   UINT16               7010 81
E m_lInPrefOldInt              INT32                7512 81
E m_uiInPrefOldRemainder       UINT16               7014 81
E m_i64OutPrefCalc.L           UINT32               7516 81
E m_i64OutPrefCalc.H           INT32                7518 81
E m_lSpeedSpgRegInternAbsOld   INT32                7520 81
E m_i64Fifo                    ???                  7522 81
D 82  CFastScope
E __b_CBasComponent.__vptr     unknown*             7500 82
E m_ulPowerUpTime              UINT32               7502 82
E m_TriggerSource              unknown*             7504 82
E m_SourceCha                  unknown*[]           7506 82
E m_SourcePar                  unknown*[]           7514 82
E m_ulSamplingPeriod           UINT32               7520 82
E m_ulSamplingPeriodCount      UINT32               7522 82
E m_ulSchedulerTime            UINT32               7524 82
E m_lFilterOutput              INT32                7526 82
E m_lOldTriggerValue           INT32                7528 82
E m_lNewTriggerValue           INT32                7530 82
E m_ulMask1                    UINT32               7532 82
E m_ulMask2                    UINT32               7534 82
E m_lTriggerValue1             INT32                7536 82
E m_lTriggerValue2             INT32                7538 82
E m_lTriggerValue1Int          INT32                7540 82
E m_lTriggerValue2Int          INT32                7542 82
E m_uiFilterTime               UINT16               7044 82
E m_ulTriggerTime              UINT32               7546 82
E m_uiTriggerCounter           UINT16               7048 82
E m_uiTriggPos                 UINT16               7049 82
E m_bTasksSync                 UINT16               7050 82
E m_uiScopeMode                UINT16               7051 82
E m_iTriggerDelay              INT16                7052 82
E m_TriggerCond                ???                  7553 82
E m_TriggerCondInt             ???                  7554 82
E m_bFlankDetect               UINT16               7055 82
E m_bBlockUploadComplete       UINT16               7056 82
E m_BufferObj                  unknown*             7558 82
E m_uiBufferTraceStart         UINT16               7060 82
E m_bDataAvailable             UINT16               7061 82
D 83 CAxfScaling CAxfScaling
E PosUserToIntern.lNum         INT32                7500 83
E PosUserToIntern.lDenom       INT32                7502 83
E VelUserToIntern.lNum         INT32                7504 83
E VelUserToIntern.lDenom       INT32                7506 83
E VelUminToIntern.lNum         INT32                7508 83
E VelUminToIntern.lDenom       INT32                7510 83
E AccUserToIntern.lNum         INT32                7512 83
E AccUserToIntern.lDenom       INT32                7514 83
E AccUminSecToIntern.lNum      INT32                7516 83
E AccUminSecToIntern.lDenom    INT32                7518 83
E Hardware.lNum                INT32                7520 83
E Hardware.lDenom              INT32                7522 83
E m_lMassOffset1               INT32                7524 83
E m_lMassOffset2               INT32                7526 83
D 85 paramFb ParamFbStruct
E ulFbConfFileType             UINT32               7500 85
E uiFlags                      UINT16               7002 85
E uiReserved                   UINT16               7003 85
E FbType                       ???                  7504 85
D 86 CBasStateMachine CBasStateMachine
E m_uiState                    UINT16               7000 86
E m_uiBitCodedState            UINT16               7001 86
E m_uiSwitchedOnSubstate       UINT16               7002 86
E m_uiOpEnableSubstate         UINT16               7003 86
E m_uiCtrlWordDC               UINT16               7004 86
E m_uiCtrlWordDCLast           UINT16               7005 86
E m_uiCtrlWordDCOld            UINT16               7006 86
E m_uiNotReadyToSwitchOn       UINT16               7007 86
E m_uiEnableTask               UINT16               7008 86
E m_uiHaltTask                 UINT16               7009 86
E m_bRemoveFaultResetBit       UINT16               7010 86
E m_uiCondState4               UINT16               7011 86
E m_bStepperMode               UINT16               7012 86
D 90 CPmsUsrRescale CPmsUsrRescale
E m_uiRescaleAck               UINT16               7000 90
E m_uiRescaleCtrlCmd           UINT16               7001 90
E m_ulRescaleCtrlInfo          UINT32               7502 90
E m_uiRescaleState             UINT16               7004 90
E m_uiRescaleInitSubState      UINT16               7005 90
E m_uiRescaleDoSubState        UINT16               7006 90
E m_uiRescaleDoNonPersSubState UINT16               7007 90
E m_uiRescaleErrSubState       UINT16               7008 90
E m_uiScalDataOffset           UINT16               7009 90
E m_uiRampOffset               UINT16               7010 90
E m_uiVelOffset                UINT16               7011 90
E m_sScaleUsrToUsr.lPosNum     INT32                7512 90
E m_sScaleUsrToUsr.lPosDenom   INT32                7514 90
E m_sScaleUsrToUsr.lSpeedNum   INT32                7516 90
E m_sScaleUsrToUsr.lSpeedDenom INT32                7518 90
E m_sScaleUsrToUsr.lRampNum    INT32                7520 90
E m_sScaleUsrToUsr.lRampDenom  INT32                7522 90
E m_sScaleUsrToDefault.lPosNum INT32                7524 90
E m_sScaleUsrToDefault.lPosDenom INT32                7526 90
E m_sScaleUsrToDefault.lSpeedNum INT32                7528 90
E m_sScaleUsrToDefault.lSpeedDenom INT32                7530 90
E m_sScaleUsrToDefault.lRampNum INT32                7532 90
E m_sScaleUsrToDefault.lRampDenom INT32                7534 90
E m_uiRescaleTimeLatch         UINT16               7036 90
E m_pulRescaleDataBuffer       UINT32*              7538 90
D 91 CAxfUmodeManTune CAxfUmodeManTune
E __b_CAxfUmode.m_iModesOfOperation INT16                7000 91
E __b_CAxfUmode.__vptr         unknown*             7502 91
E m_uiCycleCnt                 UINT16               7004 91
E m_uiObjSignalType            UINT16               7005 91
E m_uiObjPeriod                UINT16               7006 91
E m_uiObjControlType           UINT16               7007 91
E m_ulObjMaxDistRev            UINT32               7508 91
E m_ulObjMaxDistUsr            UINT32               7510 91
E m_ulObjMaxDistInc            UINT32               7512 91
E m_lObjAmplitude              INT32                7514 91
E m_lObjOffset                 INT32                7516 91
E m_lObjAmplitudeRpm           INT32                7518 91
E m_lObjOffsetRpm              INT32                7520 91
E m_lPosRefStart               INT32                7522 91
E m_lPosActStart               INT32                7524 91
E m_uiTimeCnt                  UINT16               7026 91
E m_alAmplList                 INT32[]              7528 91
E m_uiNonUsrParamBitMask       UINT16               7036 91
E m_uiUsrParamBitMask          UINT16               7037 91
E m_uiUsrRevInConsistFlag      UINT32               7538 91
D 93 CAxfDistStop CAxfDistStop
E m_bitStartParaUser           UINT16               7000 93
E m_uiCaptureSource            UINT16               7001 93
E m_lCaptEventCurrVel          INT32                7502 93
E m_lCapturedPositionUser      INT32                7504 93
E m_lCapturedPositionInt       INT32                7506 93
E m_lRelMovPosAfterCapIntern   INT32                7508 93
E m_lTargetPosInt              INT32                7510 93
E m_lActPRefInt                INT32                7512 93
E m_eIntState                  ???                  7514 93
E m_uiMoveStartInputMask       UINT16               7015 93
E m_eCaptureUnit               ???                  7516 93
D 96 CFwUpdateMgr CFwUpdateMgr
E __b_CBasComponent.__vptr     unknown*             7500 96
E m_eFlashRequestType          ???                  7502 96
E m_uiFlashRequestTime         UINT16               7003 96
D 98 CFileLoader CFileLoader
D 99 CDrvWakeShake CDrvWakeShake
E m_uiWakeShakeState           UINT16               7000 99
E m_iqStartSpeedLimWakes       INT32                7502 99
E m_iqEpsE_wakes               INT32                7504 99
E m_iqUdWakes                  INT32                7506 99
E m_iqUqWakes                  INT32                7508 99
E m_iqIdWakes                  INT32                7510 99
E m_iqIqWakes                  INT32                7512 99
E m_iqKdWakes                  INT32                7514 99
E m_iqKpWakes                  INT32                7516 99
E m_iqKiWakes                  INT32                7518 99
E m_iqKdWakes0                 INT32                7520 99
E m_iqKpWakes0                 INT32                7522 99
E m_iqKiWakes0                 INT32                7524 99
E m_iqTei                      INT32                7526 99
E m_iqKpPart                   INT32                7528 99
E m_iqKiPart                   INT32                7530 99
E m_iqKdPart                   INT32                7532 99
E m_iqKpPartCorrection         INT32                7534 99
E m_iqEpsWakesDif              INT32                7536 99
E m_iqEpsWakesStart            INT32                7538 99
E m_iqEpsWakesEnd              INT32                7540 99
E m_iqEpsEwakesFltEnd          INT32                7542 99
E m_iqEpsEwakesDifEnd          INT32                7544 99
E m_iqEpsEwakesFlt             INT32                7546 99
E m_iqKeepKiId                 INT32                7548 99
E m_iqKeepKiIq                 INT32                7550 99
E m_uiSlidingGain              UINT16               7052 99
E m_uiSlidingShift             UINT16               7053 99
E m_uiWakesCnt                 UINT16               7054 99
E m_uiPhasingOffset            UINT16               7055 99
E m_uiTauNactRemind            UINT16               7056 99
E m_uiTaunactWakes             UINT16               7057 99
E m_iqUmagRefWakes             INT32                7558 99
E m_iqUmagRefWakes0            INT32                7560 99
E m_iqImagWakes0               INT32                7562 99
E m_iqIdWakes_0                INT32                7564 99
E m_iqImagWakesMax             INT32                7566 99
E m_uiKpImagReduction          INT32                7568 99
E m_ulAccAbility               UINT32               7570 99
E m_uiMassRatio                UINT16               7072 99
E m_ulSliderMass               UINT32               7574 99
E m_uiWakesGain                UINT16               7076 99
E m_iqCurrentMeanEnd           INT32                7578 99
E m_iqCurrentMaxEnd            INT32                7580 99
E m_iqCurrentMinEnd            INT32                7582 99
E m_iqCurrentSum               INT32                7584 99
E m_iqEpsEwakesFltMinPosEnd    INT32                7586 99
E m_iqEpsEwakesFltMinNegEnd    INT32                7588 99
E m_iqEpsEwakesFltMaxPosEnd    INT32                7590 99
E m_iqEpsEwakesFltMaxNegEnd    INT32                7592 99
E m_iqKdManAdaption            INT32                7594 99
E m_iqKpManAdaption            INT32                7596 99
E m_iqKiManAdaption            INT32                7598 99
D 100 CHwlPowerFail CHwlPowerFail
E m_uiPowerLowState            UINT16               7000 100
E m_uiPowerLowTimeBuff         UINT16               7001 100
E m_uiPowerLowTimeUnBuff       UINT16               7002 100
D 101 CAxfBackLashComp CAxfBackLashComp
E m_bitDoCycFctCall            UINT16               7000 101
E m_uiStartParaIntern          UINT16               7001 101
E m_lBackLashCorrFastCycleCnt  UINT16               7002 101
E m_i64BackLashCorrPosIntern   INT32                7504 101
E m_i64TargetOffsetPos         INT32                7508 101
E m_i64CurrentOffsetPos        INT32                7512 101
E m_i64CycChgOfOffsetPos       INT32                7516 101
D 102 bootDSS BOOT_DSS
E ulWarmstart                  UINT32               7500 102
E uiBootIdent                  UINT16               7002 102
E uiPrgState                   UINT16               7003 102
E ulPrgNr                      UINT32               7504 102
E errCode                      UINT32               7506 102
E errInfo                      UINT16               7008 102
